
The_Osoed_automatic_guidance_system.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000056f8  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  08005880  08005880  00006880  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080058a8  080058a8  00007114  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  080058a8  080058a8  000068a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080058b0  080058b0  00007114  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080058b0  080058b0  000068b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080058b4  080058b4  000068b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000114  20000000  080058b8  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00007114  2**0
                  CONTENTS
 10 .bss          0000035c  20000114  20000114  00007114  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000470  20000470  00007114  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00007114  2**0
                  CONTENTS, READONLY
 13 .debug_info   00010176  00000000  00000000  00007144  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002474  00000000  00000000  000172ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000d50  00000000  00000000  00019730  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000a87  00000000  00000000  0001a480  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00021e43  00000000  00000000  0001af07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000112c8  00000000  00000000  0003cd4a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000cbf35  00000000  00000000  0004e012  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00119f47  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00003ae0  00000000  00000000  00119f8c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000008d  00000000  00000000  0011da6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000114 	.word	0x20000114
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08005868 	.word	0x08005868

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000118 	.word	0x20000118
 80001c4:	08005868 	.word	0x08005868

080001c8 <__aeabi_drsub>:
 80001c8:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80001cc:	e002      	b.n	80001d4 <__adddf3>
 80001ce:	bf00      	nop

080001d0 <__aeabi_dsub>:
 80001d0:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080001d4 <__adddf3>:
 80001d4:	b530      	push	{r4, r5, lr}
 80001d6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001da:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001de:	ea94 0f05 	teq	r4, r5
 80001e2:	bf08      	it	eq
 80001e4:	ea90 0f02 	teqeq	r0, r2
 80001e8:	bf1f      	itttt	ne
 80001ea:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001ee:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001f2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001f6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001fa:	f000 80e2 	beq.w	80003c2 <__adddf3+0x1ee>
 80001fe:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000202:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000206:	bfb8      	it	lt
 8000208:	426d      	neglt	r5, r5
 800020a:	dd0c      	ble.n	8000226 <__adddf3+0x52>
 800020c:	442c      	add	r4, r5
 800020e:	ea80 0202 	eor.w	r2, r0, r2
 8000212:	ea81 0303 	eor.w	r3, r1, r3
 8000216:	ea82 0000 	eor.w	r0, r2, r0
 800021a:	ea83 0101 	eor.w	r1, r3, r1
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	2d36      	cmp	r5, #54	@ 0x36
 8000228:	bf88      	it	hi
 800022a:	bd30      	pophi	{r4, r5, pc}
 800022c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000230:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000234:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000238:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800023c:	d002      	beq.n	8000244 <__adddf3+0x70>
 800023e:	4240      	negs	r0, r0
 8000240:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000244:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000248:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800024c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000250:	d002      	beq.n	8000258 <__adddf3+0x84>
 8000252:	4252      	negs	r2, r2
 8000254:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000258:	ea94 0f05 	teq	r4, r5
 800025c:	f000 80a7 	beq.w	80003ae <__adddf3+0x1da>
 8000260:	f1a4 0401 	sub.w	r4, r4, #1
 8000264:	f1d5 0e20 	rsbs	lr, r5, #32
 8000268:	db0d      	blt.n	8000286 <__adddf3+0xb2>
 800026a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800026e:	fa22 f205 	lsr.w	r2, r2, r5
 8000272:	1880      	adds	r0, r0, r2
 8000274:	f141 0100 	adc.w	r1, r1, #0
 8000278:	fa03 f20e 	lsl.w	r2, r3, lr
 800027c:	1880      	adds	r0, r0, r2
 800027e:	fa43 f305 	asr.w	r3, r3, r5
 8000282:	4159      	adcs	r1, r3
 8000284:	e00e      	b.n	80002a4 <__adddf3+0xd0>
 8000286:	f1a5 0520 	sub.w	r5, r5, #32
 800028a:	f10e 0e20 	add.w	lr, lr, #32
 800028e:	2a01      	cmp	r2, #1
 8000290:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000294:	bf28      	it	cs
 8000296:	f04c 0c02 	orrcs.w	ip, ip, #2
 800029a:	fa43 f305 	asr.w	r3, r3, r5
 800029e:	18c0      	adds	r0, r0, r3
 80002a0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002a4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80002a8:	d507      	bpl.n	80002ba <__adddf3+0xe6>
 80002aa:	f04f 0e00 	mov.w	lr, #0
 80002ae:	f1dc 0c00 	rsbs	ip, ip, #0
 80002b2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002b6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ba:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80002be:	d31b      	bcc.n	80002f8 <__adddf3+0x124>
 80002c0:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80002c4:	d30c      	bcc.n	80002e0 <__adddf3+0x10c>
 80002c6:	0849      	lsrs	r1, r1, #1
 80002c8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002cc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002d0:	f104 0401 	add.w	r4, r4, #1
 80002d4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002d8:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80002dc:	f080 809a 	bcs.w	8000414 <__adddf3+0x240>
 80002e0:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80002e4:	bf08      	it	eq
 80002e6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002ea:	f150 0000 	adcs.w	r0, r0, #0
 80002ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002f2:	ea41 0105 	orr.w	r1, r1, r5
 80002f6:	bd30      	pop	{r4, r5, pc}
 80002f8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002fc:	4140      	adcs	r0, r0
 80002fe:	eb41 0101 	adc.w	r1, r1, r1
 8000302:	3c01      	subs	r4, #1
 8000304:	bf28      	it	cs
 8000306:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800030a:	d2e9      	bcs.n	80002e0 <__adddf3+0x10c>
 800030c:	f091 0f00 	teq	r1, #0
 8000310:	bf04      	itt	eq
 8000312:	4601      	moveq	r1, r0
 8000314:	2000      	moveq	r0, #0
 8000316:	fab1 f381 	clz	r3, r1
 800031a:	bf08      	it	eq
 800031c:	3320      	addeq	r3, #32
 800031e:	f1a3 030b 	sub.w	r3, r3, #11
 8000322:	f1b3 0220 	subs.w	r2, r3, #32
 8000326:	da0c      	bge.n	8000342 <__adddf3+0x16e>
 8000328:	320c      	adds	r2, #12
 800032a:	dd08      	ble.n	800033e <__adddf3+0x16a>
 800032c:	f102 0c14 	add.w	ip, r2, #20
 8000330:	f1c2 020c 	rsb	r2, r2, #12
 8000334:	fa01 f00c 	lsl.w	r0, r1, ip
 8000338:	fa21 f102 	lsr.w	r1, r1, r2
 800033c:	e00c      	b.n	8000358 <__adddf3+0x184>
 800033e:	f102 0214 	add.w	r2, r2, #20
 8000342:	bfd8      	it	le
 8000344:	f1c2 0c20 	rsble	ip, r2, #32
 8000348:	fa01 f102 	lsl.w	r1, r1, r2
 800034c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000350:	bfdc      	itt	le
 8000352:	ea41 010c 	orrle.w	r1, r1, ip
 8000356:	4090      	lslle	r0, r2
 8000358:	1ae4      	subs	r4, r4, r3
 800035a:	bfa2      	ittt	ge
 800035c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000360:	4329      	orrge	r1, r5
 8000362:	bd30      	popge	{r4, r5, pc}
 8000364:	ea6f 0404 	mvn.w	r4, r4
 8000368:	3c1f      	subs	r4, #31
 800036a:	da1c      	bge.n	80003a6 <__adddf3+0x1d2>
 800036c:	340c      	adds	r4, #12
 800036e:	dc0e      	bgt.n	800038e <__adddf3+0x1ba>
 8000370:	f104 0414 	add.w	r4, r4, #20
 8000374:	f1c4 0220 	rsb	r2, r4, #32
 8000378:	fa20 f004 	lsr.w	r0, r0, r4
 800037c:	fa01 f302 	lsl.w	r3, r1, r2
 8000380:	ea40 0003 	orr.w	r0, r0, r3
 8000384:	fa21 f304 	lsr.w	r3, r1, r4
 8000388:	ea45 0103 	orr.w	r1, r5, r3
 800038c:	bd30      	pop	{r4, r5, pc}
 800038e:	f1c4 040c 	rsb	r4, r4, #12
 8000392:	f1c4 0220 	rsb	r2, r4, #32
 8000396:	fa20 f002 	lsr.w	r0, r0, r2
 800039a:	fa01 f304 	lsl.w	r3, r1, r4
 800039e:	ea40 0003 	orr.w	r0, r0, r3
 80003a2:	4629      	mov	r1, r5
 80003a4:	bd30      	pop	{r4, r5, pc}
 80003a6:	fa21 f004 	lsr.w	r0, r1, r4
 80003aa:	4629      	mov	r1, r5
 80003ac:	bd30      	pop	{r4, r5, pc}
 80003ae:	f094 0f00 	teq	r4, #0
 80003b2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80003b6:	bf06      	itte	eq
 80003b8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80003bc:	3401      	addeq	r4, #1
 80003be:	3d01      	subne	r5, #1
 80003c0:	e74e      	b.n	8000260 <__adddf3+0x8c>
 80003c2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003c6:	bf18      	it	ne
 80003c8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003cc:	d029      	beq.n	8000422 <__adddf3+0x24e>
 80003ce:	ea94 0f05 	teq	r4, r5
 80003d2:	bf08      	it	eq
 80003d4:	ea90 0f02 	teqeq	r0, r2
 80003d8:	d005      	beq.n	80003e6 <__adddf3+0x212>
 80003da:	ea54 0c00 	orrs.w	ip, r4, r0
 80003de:	bf04      	itt	eq
 80003e0:	4619      	moveq	r1, r3
 80003e2:	4610      	moveq	r0, r2
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	ea91 0f03 	teq	r1, r3
 80003ea:	bf1e      	ittt	ne
 80003ec:	2100      	movne	r1, #0
 80003ee:	2000      	movne	r0, #0
 80003f0:	bd30      	popne	{r4, r5, pc}
 80003f2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003f6:	d105      	bne.n	8000404 <__adddf3+0x230>
 80003f8:	0040      	lsls	r0, r0, #1
 80003fa:	4149      	adcs	r1, r1
 80003fc:	bf28      	it	cs
 80003fe:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000402:	bd30      	pop	{r4, r5, pc}
 8000404:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000408:	bf3c      	itt	cc
 800040a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800040e:	bd30      	popcc	{r4, r5, pc}
 8000410:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000414:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000418:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800041c:	f04f 0000 	mov.w	r0, #0
 8000420:	bd30      	pop	{r4, r5, pc}
 8000422:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000426:	bf1a      	itte	ne
 8000428:	4619      	movne	r1, r3
 800042a:	4610      	movne	r0, r2
 800042c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000430:	bf1c      	itt	ne
 8000432:	460b      	movne	r3, r1
 8000434:	4602      	movne	r2, r0
 8000436:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800043a:	bf06      	itte	eq
 800043c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000440:	ea91 0f03 	teqeq	r1, r3
 8000444:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000448:	bd30      	pop	{r4, r5, pc}
 800044a:	bf00      	nop

0800044c <__aeabi_ui2d>:
 800044c:	f090 0f00 	teq	r0, #0
 8000450:	bf04      	itt	eq
 8000452:	2100      	moveq	r1, #0
 8000454:	4770      	bxeq	lr
 8000456:	b530      	push	{r4, r5, lr}
 8000458:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800045c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000460:	f04f 0500 	mov.w	r5, #0
 8000464:	f04f 0100 	mov.w	r1, #0
 8000468:	e750      	b.n	800030c <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_i2d>:
 800046c:	f090 0f00 	teq	r0, #0
 8000470:	bf04      	itt	eq
 8000472:	2100      	moveq	r1, #0
 8000474:	4770      	bxeq	lr
 8000476:	b530      	push	{r4, r5, lr}
 8000478:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800047c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000480:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8000484:	bf48      	it	mi
 8000486:	4240      	negmi	r0, r0
 8000488:	f04f 0100 	mov.w	r1, #0
 800048c:	e73e      	b.n	800030c <__adddf3+0x138>
 800048e:	bf00      	nop

08000490 <__aeabi_f2d>:
 8000490:	0042      	lsls	r2, r0, #1
 8000492:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000496:	ea4f 0131 	mov.w	r1, r1, rrx
 800049a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800049e:	bf1f      	itttt	ne
 80004a0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80004a4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80004a8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80004ac:	4770      	bxne	lr
 80004ae:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80004b2:	bf08      	it	eq
 80004b4:	4770      	bxeq	lr
 80004b6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80004ba:	bf04      	itt	eq
 80004bc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80004c0:	4770      	bxeq	lr
 80004c2:	b530      	push	{r4, r5, lr}
 80004c4:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80004d0:	e71c      	b.n	800030c <__adddf3+0x138>
 80004d2:	bf00      	nop

080004d4 <__aeabi_ul2d>:
 80004d4:	ea50 0201 	orrs.w	r2, r0, r1
 80004d8:	bf08      	it	eq
 80004da:	4770      	bxeq	lr
 80004dc:	b530      	push	{r4, r5, lr}
 80004de:	f04f 0500 	mov.w	r5, #0
 80004e2:	e00a      	b.n	80004fa <__aeabi_l2d+0x16>

080004e4 <__aeabi_l2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80004f2:	d502      	bpl.n	80004fa <__aeabi_l2d+0x16>
 80004f4:	4240      	negs	r0, r0
 80004f6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004fa:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004fe:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000502:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000506:	f43f aed8 	beq.w	80002ba <__adddf3+0xe6>
 800050a:	f04f 0203 	mov.w	r2, #3
 800050e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000512:	bf18      	it	ne
 8000514:	3203      	addne	r2, #3
 8000516:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800051a:	bf18      	it	ne
 800051c:	3203      	addne	r2, #3
 800051e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000522:	f1c2 0320 	rsb	r3, r2, #32
 8000526:	fa00 fc03 	lsl.w	ip, r0, r3
 800052a:	fa20 f002 	lsr.w	r0, r0, r2
 800052e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000532:	ea40 000e 	orr.w	r0, r0, lr
 8000536:	fa21 f102 	lsr.w	r1, r1, r2
 800053a:	4414      	add	r4, r2
 800053c:	e6bd      	b.n	80002ba <__adddf3+0xe6>
 800053e:	bf00      	nop

08000540 <__aeabi_dmul>:
 8000540:	b570      	push	{r4, r5, r6, lr}
 8000542:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000546:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800054a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800054e:	bf1d      	ittte	ne
 8000550:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000554:	ea94 0f0c 	teqne	r4, ip
 8000558:	ea95 0f0c 	teqne	r5, ip
 800055c:	f000 f8de 	bleq	800071c <__aeabi_dmul+0x1dc>
 8000560:	442c      	add	r4, r5
 8000562:	ea81 0603 	eor.w	r6, r1, r3
 8000566:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800056a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800056e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000572:	bf18      	it	ne
 8000574:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000578:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800057c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000580:	d038      	beq.n	80005f4 <__aeabi_dmul+0xb4>
 8000582:	fba0 ce02 	umull	ip, lr, r0, r2
 8000586:	f04f 0500 	mov.w	r5, #0
 800058a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800058e:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 8000592:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000596:	f04f 0600 	mov.w	r6, #0
 800059a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800059e:	f09c 0f00 	teq	ip, #0
 80005a2:	bf18      	it	ne
 80005a4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005a8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80005ac:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80005b0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80005b4:	d204      	bcs.n	80005c0 <__aeabi_dmul+0x80>
 80005b6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ba:	416d      	adcs	r5, r5
 80005bc:	eb46 0606 	adc.w	r6, r6, r6
 80005c0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005c4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005c8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005cc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005d0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005d4:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80005d8:	bf88      	it	hi
 80005da:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80005de:	d81e      	bhi.n	800061e <__aeabi_dmul+0xde>
 80005e0:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80005e4:	bf08      	it	eq
 80005e6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005ea:	f150 0000 	adcs.w	r0, r0, #0
 80005ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005f2:	bd70      	pop	{r4, r5, r6, pc}
 80005f4:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80005f8:	ea46 0101 	orr.w	r1, r6, r1
 80005fc:	ea40 0002 	orr.w	r0, r0, r2
 8000600:	ea81 0103 	eor.w	r1, r1, r3
 8000604:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000608:	bfc2      	ittt	gt
 800060a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800060e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000612:	bd70      	popgt	{r4, r5, r6, pc}
 8000614:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000618:	f04f 0e00 	mov.w	lr, #0
 800061c:	3c01      	subs	r4, #1
 800061e:	f300 80ab 	bgt.w	8000778 <__aeabi_dmul+0x238>
 8000622:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000626:	bfde      	ittt	le
 8000628:	2000      	movle	r0, #0
 800062a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800062e:	bd70      	pople	{r4, r5, r6, pc}
 8000630:	f1c4 0400 	rsb	r4, r4, #0
 8000634:	3c20      	subs	r4, #32
 8000636:	da35      	bge.n	80006a4 <__aeabi_dmul+0x164>
 8000638:	340c      	adds	r4, #12
 800063a:	dc1b      	bgt.n	8000674 <__aeabi_dmul+0x134>
 800063c:	f104 0414 	add.w	r4, r4, #20
 8000640:	f1c4 0520 	rsb	r5, r4, #32
 8000644:	fa00 f305 	lsl.w	r3, r0, r5
 8000648:	fa20 f004 	lsr.w	r0, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea40 0002 	orr.w	r0, r0, r2
 8000654:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000658:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000660:	fa21 f604 	lsr.w	r6, r1, r4
 8000664:	eb42 0106 	adc.w	r1, r2, r6
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f1c4 040c 	rsb	r4, r4, #12
 8000678:	f1c4 0520 	rsb	r5, r4, #32
 800067c:	fa00 f304 	lsl.w	r3, r0, r4
 8000680:	fa20 f005 	lsr.w	r0, r0, r5
 8000684:	fa01 f204 	lsl.w	r2, r1, r4
 8000688:	ea40 0002 	orr.w	r0, r0, r2
 800068c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000690:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000694:	f141 0100 	adc.w	r1, r1, #0
 8000698:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800069c:	bf08      	it	eq
 800069e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006a2:	bd70      	pop	{r4, r5, r6, pc}
 80006a4:	f1c4 0520 	rsb	r5, r4, #32
 80006a8:	fa00 f205 	lsl.w	r2, r0, r5
 80006ac:	ea4e 0e02 	orr.w	lr, lr, r2
 80006b0:	fa20 f304 	lsr.w	r3, r0, r4
 80006b4:	fa01 f205 	lsl.w	r2, r1, r5
 80006b8:	ea43 0302 	orr.w	r3, r3, r2
 80006bc:	fa21 f004 	lsr.w	r0, r1, r4
 80006c0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006c4:	fa21 f204 	lsr.w	r2, r1, r4
 80006c8:	ea20 0002 	bic.w	r0, r0, r2
 80006cc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006d0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006d4:	bf08      	it	eq
 80006d6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f094 0f00 	teq	r4, #0
 80006e0:	d10f      	bne.n	8000702 <__aeabi_dmul+0x1c2>
 80006e2:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80006e6:	0040      	lsls	r0, r0, #1
 80006e8:	eb41 0101 	adc.w	r1, r1, r1
 80006ec:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80006f0:	bf08      	it	eq
 80006f2:	3c01      	subeq	r4, #1
 80006f4:	d0f7      	beq.n	80006e6 <__aeabi_dmul+0x1a6>
 80006f6:	ea41 0106 	orr.w	r1, r1, r6
 80006fa:	f095 0f00 	teq	r5, #0
 80006fe:	bf18      	it	ne
 8000700:	4770      	bxne	lr
 8000702:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000706:	0052      	lsls	r2, r2, #1
 8000708:	eb43 0303 	adc.w	r3, r3, r3
 800070c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000710:	bf08      	it	eq
 8000712:	3d01      	subeq	r5, #1
 8000714:	d0f7      	beq.n	8000706 <__aeabi_dmul+0x1c6>
 8000716:	ea43 0306 	orr.w	r3, r3, r6
 800071a:	4770      	bx	lr
 800071c:	ea94 0f0c 	teq	r4, ip
 8000720:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000724:	bf18      	it	ne
 8000726:	ea95 0f0c 	teqne	r5, ip
 800072a:	d00c      	beq.n	8000746 <__aeabi_dmul+0x206>
 800072c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000730:	bf18      	it	ne
 8000732:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000736:	d1d1      	bne.n	80006dc <__aeabi_dmul+0x19c>
 8000738:	ea81 0103 	eor.w	r1, r1, r3
 800073c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000740:	f04f 0000 	mov.w	r0, #0
 8000744:	bd70      	pop	{r4, r5, r6, pc}
 8000746:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800074a:	bf06      	itte	eq
 800074c:	4610      	moveq	r0, r2
 800074e:	4619      	moveq	r1, r3
 8000750:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000754:	d019      	beq.n	800078a <__aeabi_dmul+0x24a>
 8000756:	ea94 0f0c 	teq	r4, ip
 800075a:	d102      	bne.n	8000762 <__aeabi_dmul+0x222>
 800075c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000760:	d113      	bne.n	800078a <__aeabi_dmul+0x24a>
 8000762:	ea95 0f0c 	teq	r5, ip
 8000766:	d105      	bne.n	8000774 <__aeabi_dmul+0x234>
 8000768:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800076c:	bf1c      	itt	ne
 800076e:	4610      	movne	r0, r2
 8000770:	4619      	movne	r1, r3
 8000772:	d10a      	bne.n	800078a <__aeabi_dmul+0x24a>
 8000774:	ea81 0103 	eor.w	r1, r1, r3
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000780:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000784:	f04f 0000 	mov.w	r0, #0
 8000788:	bd70      	pop	{r4, r5, r6, pc}
 800078a:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 800078e:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 8000792:	bd70      	pop	{r4, r5, r6, pc}

08000794 <__aeabi_ddiv>:
 8000794:	b570      	push	{r4, r5, r6, lr}
 8000796:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800079a:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800079e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007a2:	bf1d      	ittte	ne
 80007a4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007a8:	ea94 0f0c 	teqne	r4, ip
 80007ac:	ea95 0f0c 	teqne	r5, ip
 80007b0:	f000 f8a7 	bleq	8000902 <__aeabi_ddiv+0x16e>
 80007b4:	eba4 0405 	sub.w	r4, r4, r5
 80007b8:	ea81 0e03 	eor.w	lr, r1, r3
 80007bc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007c0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007c4:	f000 8088 	beq.w	80008d8 <__aeabi_ddiv+0x144>
 80007c8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007cc:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80007d0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007d4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007d8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007dc:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007e0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007e4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007e8:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80007ec:	429d      	cmp	r5, r3
 80007ee:	bf08      	it	eq
 80007f0:	4296      	cmpeq	r6, r2
 80007f2:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80007f6:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80007fa:	d202      	bcs.n	8000802 <__aeabi_ddiv+0x6e>
 80007fc:	085b      	lsrs	r3, r3, #1
 80007fe:	ea4f 0232 	mov.w	r2, r2, rrx
 8000802:	1ab6      	subs	r6, r6, r2
 8000804:	eb65 0503 	sbc.w	r5, r5, r3
 8000808:	085b      	lsrs	r3, r3, #1
 800080a:	ea4f 0232 	mov.w	r2, r2, rrx
 800080e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000812:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 000c 	orrcs.w	r0, r0, ip
 8000828:	085b      	lsrs	r3, r3, #1
 800082a:	ea4f 0232 	mov.w	r2, r2, rrx
 800082e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000832:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000836:	bf22      	ittt	cs
 8000838:	1ab6      	subcs	r6, r6, r2
 800083a:	4675      	movcs	r5, lr
 800083c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000840:	085b      	lsrs	r3, r3, #1
 8000842:	ea4f 0232 	mov.w	r2, r2, rrx
 8000846:	ebb6 0e02 	subs.w	lr, r6, r2
 800084a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800084e:	bf22      	ittt	cs
 8000850:	1ab6      	subcs	r6, r6, r2
 8000852:	4675      	movcs	r5, lr
 8000854:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000858:	085b      	lsrs	r3, r3, #1
 800085a:	ea4f 0232 	mov.w	r2, r2, rrx
 800085e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000862:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000866:	bf22      	ittt	cs
 8000868:	1ab6      	subcs	r6, r6, r2
 800086a:	4675      	movcs	r5, lr
 800086c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000870:	ea55 0e06 	orrs.w	lr, r5, r6
 8000874:	d018      	beq.n	80008a8 <__aeabi_ddiv+0x114>
 8000876:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800087a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800087e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000882:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000886:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800088a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800088e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000892:	d1c0      	bne.n	8000816 <__aeabi_ddiv+0x82>
 8000894:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000898:	d10b      	bne.n	80008b2 <__aeabi_ddiv+0x11e>
 800089a:	ea41 0100 	orr.w	r1, r1, r0
 800089e:	f04f 0000 	mov.w	r0, #0
 80008a2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80008a6:	e7b6      	b.n	8000816 <__aeabi_ddiv+0x82>
 80008a8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008ac:	bf04      	itt	eq
 80008ae:	4301      	orreq	r1, r0
 80008b0:	2000      	moveq	r0, #0
 80008b2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80008b6:	bf88      	it	hi
 80008b8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80008bc:	f63f aeaf 	bhi.w	800061e <__aeabi_dmul+0xde>
 80008c0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008c4:	bf04      	itt	eq
 80008c6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008ca:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008ce:	f150 0000 	adcs.w	r0, r0, #0
 80008d2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008d6:	bd70      	pop	{r4, r5, r6, pc}
 80008d8:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80008dc:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008e0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008e4:	bfc2      	ittt	gt
 80008e6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008ea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008ee:	bd70      	popgt	{r4, r5, r6, pc}
 80008f0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80008f4:	f04f 0e00 	mov.w	lr, #0
 80008f8:	3c01      	subs	r4, #1
 80008fa:	e690      	b.n	800061e <__aeabi_dmul+0xde>
 80008fc:	ea45 0e06 	orr.w	lr, r5, r6
 8000900:	e68d      	b.n	800061e <__aeabi_dmul+0xde>
 8000902:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000906:	ea94 0f0c 	teq	r4, ip
 800090a:	bf08      	it	eq
 800090c:	ea95 0f0c 	teqeq	r5, ip
 8000910:	f43f af3b 	beq.w	800078a <__aeabi_dmul+0x24a>
 8000914:	ea94 0f0c 	teq	r4, ip
 8000918:	d10a      	bne.n	8000930 <__aeabi_ddiv+0x19c>
 800091a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800091e:	f47f af34 	bne.w	800078a <__aeabi_dmul+0x24a>
 8000922:	ea95 0f0c 	teq	r5, ip
 8000926:	f47f af25 	bne.w	8000774 <__aeabi_dmul+0x234>
 800092a:	4610      	mov	r0, r2
 800092c:	4619      	mov	r1, r3
 800092e:	e72c      	b.n	800078a <__aeabi_dmul+0x24a>
 8000930:	ea95 0f0c 	teq	r5, ip
 8000934:	d106      	bne.n	8000944 <__aeabi_ddiv+0x1b0>
 8000936:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800093a:	f43f aefd 	beq.w	8000738 <__aeabi_dmul+0x1f8>
 800093e:	4610      	mov	r0, r2
 8000940:	4619      	mov	r1, r3
 8000942:	e722      	b.n	800078a <__aeabi_dmul+0x24a>
 8000944:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000948:	bf18      	it	ne
 800094a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800094e:	f47f aec5 	bne.w	80006dc <__aeabi_dmul+0x19c>
 8000952:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000956:	f47f af0d 	bne.w	8000774 <__aeabi_dmul+0x234>
 800095a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800095e:	f47f aeeb 	bne.w	8000738 <__aeabi_dmul+0x1f8>
 8000962:	e712      	b.n	800078a <__aeabi_dmul+0x24a>

08000964 <__gedf2>:
 8000964:	f04f 3cff 	mov.w	ip, #4294967295
 8000968:	e006      	b.n	8000978 <__cmpdf2+0x4>
 800096a:	bf00      	nop

0800096c <__ledf2>:
 800096c:	f04f 0c01 	mov.w	ip, #1
 8000970:	e002      	b.n	8000978 <__cmpdf2+0x4>
 8000972:	bf00      	nop

08000974 <__cmpdf2>:
 8000974:	f04f 0c01 	mov.w	ip, #1
 8000978:	f84d cd04 	str.w	ip, [sp, #-4]!
 800097c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000980:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000984:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000988:	bf18      	it	ne
 800098a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800098e:	d01b      	beq.n	80009c8 <__cmpdf2+0x54>
 8000990:	b001      	add	sp, #4
 8000992:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000996:	bf0c      	ite	eq
 8000998:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 800099c:	ea91 0f03 	teqne	r1, r3
 80009a0:	bf02      	ittt	eq
 80009a2:	ea90 0f02 	teqeq	r0, r2
 80009a6:	2000      	moveq	r0, #0
 80009a8:	4770      	bxeq	lr
 80009aa:	f110 0f00 	cmn.w	r0, #0
 80009ae:	ea91 0f03 	teq	r1, r3
 80009b2:	bf58      	it	pl
 80009b4:	4299      	cmppl	r1, r3
 80009b6:	bf08      	it	eq
 80009b8:	4290      	cmpeq	r0, r2
 80009ba:	bf2c      	ite	cs
 80009bc:	17d8      	asrcs	r0, r3, #31
 80009be:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009c2:	f040 0001 	orr.w	r0, r0, #1
 80009c6:	4770      	bx	lr
 80009c8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009cc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009d0:	d102      	bne.n	80009d8 <__cmpdf2+0x64>
 80009d2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009d6:	d107      	bne.n	80009e8 <__cmpdf2+0x74>
 80009d8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d1d6      	bne.n	8000990 <__cmpdf2+0x1c>
 80009e2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009e6:	d0d3      	beq.n	8000990 <__cmpdf2+0x1c>
 80009e8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009ec:	4770      	bx	lr
 80009ee:	bf00      	nop

080009f0 <__aeabi_cdrcmple>:
 80009f0:	4684      	mov	ip, r0
 80009f2:	4610      	mov	r0, r2
 80009f4:	4662      	mov	r2, ip
 80009f6:	468c      	mov	ip, r1
 80009f8:	4619      	mov	r1, r3
 80009fa:	4663      	mov	r3, ip
 80009fc:	e000      	b.n	8000a00 <__aeabi_cdcmpeq>
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdcmpeq>:
 8000a00:	b501      	push	{r0, lr}
 8000a02:	f7ff ffb7 	bl	8000974 <__cmpdf2>
 8000a06:	2800      	cmp	r0, #0
 8000a08:	bf48      	it	mi
 8000a0a:	f110 0f00 	cmnmi.w	r0, #0
 8000a0e:	bd01      	pop	{r0, pc}

08000a10 <__aeabi_dcmpeq>:
 8000a10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a14:	f7ff fff4 	bl	8000a00 <__aeabi_cdcmpeq>
 8000a18:	bf0c      	ite	eq
 8000a1a:	2001      	moveq	r0, #1
 8000a1c:	2000      	movne	r0, #0
 8000a1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a22:	bf00      	nop

08000a24 <__aeabi_dcmplt>:
 8000a24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a28:	f7ff ffea 	bl	8000a00 <__aeabi_cdcmpeq>
 8000a2c:	bf34      	ite	cc
 8000a2e:	2001      	movcc	r0, #1
 8000a30:	2000      	movcs	r0, #0
 8000a32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a36:	bf00      	nop

08000a38 <__aeabi_dcmple>:
 8000a38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a3c:	f7ff ffe0 	bl	8000a00 <__aeabi_cdcmpeq>
 8000a40:	bf94      	ite	ls
 8000a42:	2001      	movls	r0, #1
 8000a44:	2000      	movhi	r0, #0
 8000a46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a4a:	bf00      	nop

08000a4c <__aeabi_dcmpge>:
 8000a4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a50:	f7ff ffce 	bl	80009f0 <__aeabi_cdrcmple>
 8000a54:	bf94      	ite	ls
 8000a56:	2001      	movls	r0, #1
 8000a58:	2000      	movhi	r0, #0
 8000a5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5e:	bf00      	nop

08000a60 <__aeabi_dcmpgt>:
 8000a60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a64:	f7ff ffc4 	bl	80009f0 <__aeabi_cdrcmple>
 8000a68:	bf34      	ite	cc
 8000a6a:	2001      	movcc	r0, #1
 8000a6c:	2000      	movcs	r0, #0
 8000a6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a72:	bf00      	nop

08000a74 <__aeabi_dcmpun>:
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	d102      	bne.n	8000a84 <__aeabi_dcmpun+0x10>
 8000a7e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a82:	d10a      	bne.n	8000a9a <__aeabi_dcmpun+0x26>
 8000a84:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	d102      	bne.n	8000a94 <__aeabi_dcmpun+0x20>
 8000a8e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a92:	d102      	bne.n	8000a9a <__aeabi_dcmpun+0x26>
 8000a94:	f04f 0000 	mov.w	r0, #0
 8000a98:	4770      	bx	lr
 8000a9a:	f04f 0001 	mov.w	r0, #1
 8000a9e:	4770      	bx	lr

08000aa0 <__aeabi_d2uiz>:
 8000aa0:	004a      	lsls	r2, r1, #1
 8000aa2:	d211      	bcs.n	8000ac8 <__aeabi_d2uiz+0x28>
 8000aa4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000aa8:	d211      	bcs.n	8000ace <__aeabi_d2uiz+0x2e>
 8000aaa:	d50d      	bpl.n	8000ac8 <__aeabi_d2uiz+0x28>
 8000aac:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ab0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ab4:	d40e      	bmi.n	8000ad4 <__aeabi_d2uiz+0x34>
 8000ab6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aba:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000abe:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ac2:	fa23 f002 	lsr.w	r0, r3, r2
 8000ac6:	4770      	bx	lr
 8000ac8:	f04f 0000 	mov.w	r0, #0
 8000acc:	4770      	bx	lr
 8000ace:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ad2:	d102      	bne.n	8000ada <__aeabi_d2uiz+0x3a>
 8000ad4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ad8:	4770      	bx	lr
 8000ada:	f04f 0000 	mov.w	r0, #0
 8000ade:	4770      	bx	lr

08000ae0 <__aeabi_uldivmod>:
 8000ae0:	b953      	cbnz	r3, 8000af8 <__aeabi_uldivmod+0x18>
 8000ae2:	b94a      	cbnz	r2, 8000af8 <__aeabi_uldivmod+0x18>
 8000ae4:	2900      	cmp	r1, #0
 8000ae6:	bf08      	it	eq
 8000ae8:	2800      	cmpeq	r0, #0
 8000aea:	bf1c      	itt	ne
 8000aec:	f04f 31ff 	movne.w	r1, #4294967295
 8000af0:	f04f 30ff 	movne.w	r0, #4294967295
 8000af4:	f000 b988 	b.w	8000e08 <__aeabi_idiv0>
 8000af8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000afc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b00:	f000 f806 	bl	8000b10 <__udivmoddi4>
 8000b04:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b08:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b0c:	b004      	add	sp, #16
 8000b0e:	4770      	bx	lr

08000b10 <__udivmoddi4>:
 8000b10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b14:	9d08      	ldr	r5, [sp, #32]
 8000b16:	468e      	mov	lr, r1
 8000b18:	4604      	mov	r4, r0
 8000b1a:	4688      	mov	r8, r1
 8000b1c:	2b00      	cmp	r3, #0
 8000b1e:	d14a      	bne.n	8000bb6 <__udivmoddi4+0xa6>
 8000b20:	428a      	cmp	r2, r1
 8000b22:	4617      	mov	r7, r2
 8000b24:	d962      	bls.n	8000bec <__udivmoddi4+0xdc>
 8000b26:	fab2 f682 	clz	r6, r2
 8000b2a:	b14e      	cbz	r6, 8000b40 <__udivmoddi4+0x30>
 8000b2c:	f1c6 0320 	rsb	r3, r6, #32
 8000b30:	fa01 f806 	lsl.w	r8, r1, r6
 8000b34:	fa20 f303 	lsr.w	r3, r0, r3
 8000b38:	40b7      	lsls	r7, r6
 8000b3a:	ea43 0808 	orr.w	r8, r3, r8
 8000b3e:	40b4      	lsls	r4, r6
 8000b40:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000b44:	fa1f fc87 	uxth.w	ip, r7
 8000b48:	fbb8 f1fe 	udiv	r1, r8, lr
 8000b4c:	0c23      	lsrs	r3, r4, #16
 8000b4e:	fb0e 8811 	mls	r8, lr, r1, r8
 8000b52:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000b56:	fb01 f20c 	mul.w	r2, r1, ip
 8000b5a:	429a      	cmp	r2, r3
 8000b5c:	d909      	bls.n	8000b72 <__udivmoddi4+0x62>
 8000b5e:	18fb      	adds	r3, r7, r3
 8000b60:	f101 30ff 	add.w	r0, r1, #4294967295
 8000b64:	f080 80ea 	bcs.w	8000d3c <__udivmoddi4+0x22c>
 8000b68:	429a      	cmp	r2, r3
 8000b6a:	f240 80e7 	bls.w	8000d3c <__udivmoddi4+0x22c>
 8000b6e:	3902      	subs	r1, #2
 8000b70:	443b      	add	r3, r7
 8000b72:	1a9a      	subs	r2, r3, r2
 8000b74:	b2a3      	uxth	r3, r4
 8000b76:	fbb2 f0fe 	udiv	r0, r2, lr
 8000b7a:	fb0e 2210 	mls	r2, lr, r0, r2
 8000b7e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000b82:	fb00 fc0c 	mul.w	ip, r0, ip
 8000b86:	459c      	cmp	ip, r3
 8000b88:	d909      	bls.n	8000b9e <__udivmoddi4+0x8e>
 8000b8a:	18fb      	adds	r3, r7, r3
 8000b8c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b90:	f080 80d6 	bcs.w	8000d40 <__udivmoddi4+0x230>
 8000b94:	459c      	cmp	ip, r3
 8000b96:	f240 80d3 	bls.w	8000d40 <__udivmoddi4+0x230>
 8000b9a:	443b      	add	r3, r7
 8000b9c:	3802      	subs	r0, #2
 8000b9e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000ba2:	eba3 030c 	sub.w	r3, r3, ip
 8000ba6:	2100      	movs	r1, #0
 8000ba8:	b11d      	cbz	r5, 8000bb2 <__udivmoddi4+0xa2>
 8000baa:	40f3      	lsrs	r3, r6
 8000bac:	2200      	movs	r2, #0
 8000bae:	e9c5 3200 	strd	r3, r2, [r5]
 8000bb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bb6:	428b      	cmp	r3, r1
 8000bb8:	d905      	bls.n	8000bc6 <__udivmoddi4+0xb6>
 8000bba:	b10d      	cbz	r5, 8000bc0 <__udivmoddi4+0xb0>
 8000bbc:	e9c5 0100 	strd	r0, r1, [r5]
 8000bc0:	2100      	movs	r1, #0
 8000bc2:	4608      	mov	r0, r1
 8000bc4:	e7f5      	b.n	8000bb2 <__udivmoddi4+0xa2>
 8000bc6:	fab3 f183 	clz	r1, r3
 8000bca:	2900      	cmp	r1, #0
 8000bcc:	d146      	bne.n	8000c5c <__udivmoddi4+0x14c>
 8000bce:	4573      	cmp	r3, lr
 8000bd0:	d302      	bcc.n	8000bd8 <__udivmoddi4+0xc8>
 8000bd2:	4282      	cmp	r2, r0
 8000bd4:	f200 8105 	bhi.w	8000de2 <__udivmoddi4+0x2d2>
 8000bd8:	1a84      	subs	r4, r0, r2
 8000bda:	eb6e 0203 	sbc.w	r2, lr, r3
 8000bde:	2001      	movs	r0, #1
 8000be0:	4690      	mov	r8, r2
 8000be2:	2d00      	cmp	r5, #0
 8000be4:	d0e5      	beq.n	8000bb2 <__udivmoddi4+0xa2>
 8000be6:	e9c5 4800 	strd	r4, r8, [r5]
 8000bea:	e7e2      	b.n	8000bb2 <__udivmoddi4+0xa2>
 8000bec:	2a00      	cmp	r2, #0
 8000bee:	f000 8090 	beq.w	8000d12 <__udivmoddi4+0x202>
 8000bf2:	fab2 f682 	clz	r6, r2
 8000bf6:	2e00      	cmp	r6, #0
 8000bf8:	f040 80a4 	bne.w	8000d44 <__udivmoddi4+0x234>
 8000bfc:	1a8a      	subs	r2, r1, r2
 8000bfe:	0c03      	lsrs	r3, r0, #16
 8000c00:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000c04:	b280      	uxth	r0, r0
 8000c06:	b2bc      	uxth	r4, r7
 8000c08:	2101      	movs	r1, #1
 8000c0a:	fbb2 fcfe 	udiv	ip, r2, lr
 8000c0e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000c12:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000c16:	fb04 f20c 	mul.w	r2, r4, ip
 8000c1a:	429a      	cmp	r2, r3
 8000c1c:	d907      	bls.n	8000c2e <__udivmoddi4+0x11e>
 8000c1e:	18fb      	adds	r3, r7, r3
 8000c20:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000c24:	d202      	bcs.n	8000c2c <__udivmoddi4+0x11c>
 8000c26:	429a      	cmp	r2, r3
 8000c28:	f200 80e0 	bhi.w	8000dec <__udivmoddi4+0x2dc>
 8000c2c:	46c4      	mov	ip, r8
 8000c2e:	1a9b      	subs	r3, r3, r2
 8000c30:	fbb3 f2fe 	udiv	r2, r3, lr
 8000c34:	fb0e 3312 	mls	r3, lr, r2, r3
 8000c38:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000c3c:	fb02 f404 	mul.w	r4, r2, r4
 8000c40:	429c      	cmp	r4, r3
 8000c42:	d907      	bls.n	8000c54 <__udivmoddi4+0x144>
 8000c44:	18fb      	adds	r3, r7, r3
 8000c46:	f102 30ff 	add.w	r0, r2, #4294967295
 8000c4a:	d202      	bcs.n	8000c52 <__udivmoddi4+0x142>
 8000c4c:	429c      	cmp	r4, r3
 8000c4e:	f200 80ca 	bhi.w	8000de6 <__udivmoddi4+0x2d6>
 8000c52:	4602      	mov	r2, r0
 8000c54:	1b1b      	subs	r3, r3, r4
 8000c56:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000c5a:	e7a5      	b.n	8000ba8 <__udivmoddi4+0x98>
 8000c5c:	f1c1 0620 	rsb	r6, r1, #32
 8000c60:	408b      	lsls	r3, r1
 8000c62:	fa22 f706 	lsr.w	r7, r2, r6
 8000c66:	431f      	orrs	r7, r3
 8000c68:	fa0e f401 	lsl.w	r4, lr, r1
 8000c6c:	fa20 f306 	lsr.w	r3, r0, r6
 8000c70:	fa2e fe06 	lsr.w	lr, lr, r6
 8000c74:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000c78:	4323      	orrs	r3, r4
 8000c7a:	fa00 f801 	lsl.w	r8, r0, r1
 8000c7e:	fa1f fc87 	uxth.w	ip, r7
 8000c82:	fbbe f0f9 	udiv	r0, lr, r9
 8000c86:	0c1c      	lsrs	r4, r3, #16
 8000c88:	fb09 ee10 	mls	lr, r9, r0, lr
 8000c8c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000c90:	fb00 fe0c 	mul.w	lr, r0, ip
 8000c94:	45a6      	cmp	lr, r4
 8000c96:	fa02 f201 	lsl.w	r2, r2, r1
 8000c9a:	d909      	bls.n	8000cb0 <__udivmoddi4+0x1a0>
 8000c9c:	193c      	adds	r4, r7, r4
 8000c9e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000ca2:	f080 809c 	bcs.w	8000dde <__udivmoddi4+0x2ce>
 8000ca6:	45a6      	cmp	lr, r4
 8000ca8:	f240 8099 	bls.w	8000dde <__udivmoddi4+0x2ce>
 8000cac:	3802      	subs	r0, #2
 8000cae:	443c      	add	r4, r7
 8000cb0:	eba4 040e 	sub.w	r4, r4, lr
 8000cb4:	fa1f fe83 	uxth.w	lr, r3
 8000cb8:	fbb4 f3f9 	udiv	r3, r4, r9
 8000cbc:	fb09 4413 	mls	r4, r9, r3, r4
 8000cc0:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000cc4:	fb03 fc0c 	mul.w	ip, r3, ip
 8000cc8:	45a4      	cmp	ip, r4
 8000cca:	d908      	bls.n	8000cde <__udivmoddi4+0x1ce>
 8000ccc:	193c      	adds	r4, r7, r4
 8000cce:	f103 3eff 	add.w	lr, r3, #4294967295
 8000cd2:	f080 8082 	bcs.w	8000dda <__udivmoddi4+0x2ca>
 8000cd6:	45a4      	cmp	ip, r4
 8000cd8:	d97f      	bls.n	8000dda <__udivmoddi4+0x2ca>
 8000cda:	3b02      	subs	r3, #2
 8000cdc:	443c      	add	r4, r7
 8000cde:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000ce2:	eba4 040c 	sub.w	r4, r4, ip
 8000ce6:	fba0 ec02 	umull	lr, ip, r0, r2
 8000cea:	4564      	cmp	r4, ip
 8000cec:	4673      	mov	r3, lr
 8000cee:	46e1      	mov	r9, ip
 8000cf0:	d362      	bcc.n	8000db8 <__udivmoddi4+0x2a8>
 8000cf2:	d05f      	beq.n	8000db4 <__udivmoddi4+0x2a4>
 8000cf4:	b15d      	cbz	r5, 8000d0e <__udivmoddi4+0x1fe>
 8000cf6:	ebb8 0203 	subs.w	r2, r8, r3
 8000cfa:	eb64 0409 	sbc.w	r4, r4, r9
 8000cfe:	fa04 f606 	lsl.w	r6, r4, r6
 8000d02:	fa22 f301 	lsr.w	r3, r2, r1
 8000d06:	431e      	orrs	r6, r3
 8000d08:	40cc      	lsrs	r4, r1
 8000d0a:	e9c5 6400 	strd	r6, r4, [r5]
 8000d0e:	2100      	movs	r1, #0
 8000d10:	e74f      	b.n	8000bb2 <__udivmoddi4+0xa2>
 8000d12:	fbb1 fcf2 	udiv	ip, r1, r2
 8000d16:	0c01      	lsrs	r1, r0, #16
 8000d18:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000d1c:	b280      	uxth	r0, r0
 8000d1e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000d22:	463b      	mov	r3, r7
 8000d24:	4638      	mov	r0, r7
 8000d26:	463c      	mov	r4, r7
 8000d28:	46b8      	mov	r8, r7
 8000d2a:	46be      	mov	lr, r7
 8000d2c:	2620      	movs	r6, #32
 8000d2e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000d32:	eba2 0208 	sub.w	r2, r2, r8
 8000d36:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000d3a:	e766      	b.n	8000c0a <__udivmoddi4+0xfa>
 8000d3c:	4601      	mov	r1, r0
 8000d3e:	e718      	b.n	8000b72 <__udivmoddi4+0x62>
 8000d40:	4610      	mov	r0, r2
 8000d42:	e72c      	b.n	8000b9e <__udivmoddi4+0x8e>
 8000d44:	f1c6 0220 	rsb	r2, r6, #32
 8000d48:	fa2e f302 	lsr.w	r3, lr, r2
 8000d4c:	40b7      	lsls	r7, r6
 8000d4e:	40b1      	lsls	r1, r6
 8000d50:	fa20 f202 	lsr.w	r2, r0, r2
 8000d54:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d58:	430a      	orrs	r2, r1
 8000d5a:	fbb3 f8fe 	udiv	r8, r3, lr
 8000d5e:	b2bc      	uxth	r4, r7
 8000d60:	fb0e 3318 	mls	r3, lr, r8, r3
 8000d64:	0c11      	lsrs	r1, r2, #16
 8000d66:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d6a:	fb08 f904 	mul.w	r9, r8, r4
 8000d6e:	40b0      	lsls	r0, r6
 8000d70:	4589      	cmp	r9, r1
 8000d72:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000d76:	b280      	uxth	r0, r0
 8000d78:	d93e      	bls.n	8000df8 <__udivmoddi4+0x2e8>
 8000d7a:	1879      	adds	r1, r7, r1
 8000d7c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000d80:	d201      	bcs.n	8000d86 <__udivmoddi4+0x276>
 8000d82:	4589      	cmp	r9, r1
 8000d84:	d81f      	bhi.n	8000dc6 <__udivmoddi4+0x2b6>
 8000d86:	eba1 0109 	sub.w	r1, r1, r9
 8000d8a:	fbb1 f9fe 	udiv	r9, r1, lr
 8000d8e:	fb09 f804 	mul.w	r8, r9, r4
 8000d92:	fb0e 1119 	mls	r1, lr, r9, r1
 8000d96:	b292      	uxth	r2, r2
 8000d98:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000d9c:	4542      	cmp	r2, r8
 8000d9e:	d229      	bcs.n	8000df4 <__udivmoddi4+0x2e4>
 8000da0:	18ba      	adds	r2, r7, r2
 8000da2:	f109 31ff 	add.w	r1, r9, #4294967295
 8000da6:	d2c4      	bcs.n	8000d32 <__udivmoddi4+0x222>
 8000da8:	4542      	cmp	r2, r8
 8000daa:	d2c2      	bcs.n	8000d32 <__udivmoddi4+0x222>
 8000dac:	f1a9 0102 	sub.w	r1, r9, #2
 8000db0:	443a      	add	r2, r7
 8000db2:	e7be      	b.n	8000d32 <__udivmoddi4+0x222>
 8000db4:	45f0      	cmp	r8, lr
 8000db6:	d29d      	bcs.n	8000cf4 <__udivmoddi4+0x1e4>
 8000db8:	ebbe 0302 	subs.w	r3, lr, r2
 8000dbc:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000dc0:	3801      	subs	r0, #1
 8000dc2:	46e1      	mov	r9, ip
 8000dc4:	e796      	b.n	8000cf4 <__udivmoddi4+0x1e4>
 8000dc6:	eba7 0909 	sub.w	r9, r7, r9
 8000dca:	4449      	add	r1, r9
 8000dcc:	f1a8 0c02 	sub.w	ip, r8, #2
 8000dd0:	fbb1 f9fe 	udiv	r9, r1, lr
 8000dd4:	fb09 f804 	mul.w	r8, r9, r4
 8000dd8:	e7db      	b.n	8000d92 <__udivmoddi4+0x282>
 8000dda:	4673      	mov	r3, lr
 8000ddc:	e77f      	b.n	8000cde <__udivmoddi4+0x1ce>
 8000dde:	4650      	mov	r0, sl
 8000de0:	e766      	b.n	8000cb0 <__udivmoddi4+0x1a0>
 8000de2:	4608      	mov	r0, r1
 8000de4:	e6fd      	b.n	8000be2 <__udivmoddi4+0xd2>
 8000de6:	443b      	add	r3, r7
 8000de8:	3a02      	subs	r2, #2
 8000dea:	e733      	b.n	8000c54 <__udivmoddi4+0x144>
 8000dec:	f1ac 0c02 	sub.w	ip, ip, #2
 8000df0:	443b      	add	r3, r7
 8000df2:	e71c      	b.n	8000c2e <__udivmoddi4+0x11e>
 8000df4:	4649      	mov	r1, r9
 8000df6:	e79c      	b.n	8000d32 <__udivmoddi4+0x222>
 8000df8:	eba1 0109 	sub.w	r1, r1, r9
 8000dfc:	46c4      	mov	ip, r8
 8000dfe:	fbb1 f9fe 	udiv	r9, r1, lr
 8000e02:	fb09 f804 	mul.w	r8, r9, r4
 8000e06:	e7c4      	b.n	8000d92 <__udivmoddi4+0x282>

08000e08 <__aeabi_idiv0>:
 8000e08:	4770      	bx	lr
 8000e0a:	bf00      	nop

08000e0c <Encoder_Init>:
Encoder Encoder_EL = {
  .Pulses_per_revolution = 611,
  .Safe_start_value = 30
};

void Encoder_Init(Encoder *Encoder_xx) { // Запуск моторов должен быть обязательно до начала инициализации Encoder. Движение в сторону минусовых углов
 8000e0c:	b580      	push	{r7, lr}
 8000e0e:	b088      	sub	sp, #32
 8000e10:	af00      	add	r7, sp, #0
 8000e12:	6078      	str	r0, [r7, #4]
  unsigned int New_value = 0;
 8000e14:	2300      	movs	r3, #0
 8000e16:	61fb      	str	r3, [r7, #28]
  unsigned int Old_value = 0;
 8000e18:	2300      	movs	r3, #0
 8000e1a:	617b      	str	r3, [r7, #20]
  Motor *Motor_xx = (Encoder_xx == &Encoder_AZ) ? &Motor_AZ : &Motor_EL;
 8000e1c:	687b      	ldr	r3, [r7, #4]
 8000e1e:	4a1f      	ldr	r2, [pc, #124]	@ (8000e9c <Encoder_Init+0x90>)
 8000e20:	4293      	cmp	r3, r2
 8000e22:	d101      	bne.n	8000e28 <Encoder_Init+0x1c>
 8000e24:	4b1e      	ldr	r3, [pc, #120]	@ (8000ea0 <Encoder_Init+0x94>)
 8000e26:	e000      	b.n	8000e2a <Encoder_Init+0x1e>
 8000e28:	4b1e      	ldr	r3, [pc, #120]	@ (8000ea4 <Encoder_Init+0x98>)
 8000e2a:	613b      	str	r3, [r7, #16]

  Motor_DirRot(Motor_xx, GPIO_PIN_RESET);
 8000e2c:	2100      	movs	r1, #0
 8000e2e:	6938      	ldr	r0, [r7, #16]
 8000e30:	f000 fc06 	bl	8001640 <Motor_DirRot>
  Motor_Start(Motor_xx);
 8000e34:	6938      	ldr	r0, [r7, #16]
 8000e36:	f000 fca5 	bl	8001784 <Motor_Start>
  do {
    Old_value = New_value;
 8000e3a:	69fb      	ldr	r3, [r7, #28]
 8000e3c:	617b      	str	r3, [r7, #20]

    unsigned int tickstart = HAL_GetTick();
 8000e3e:	f001 fc93 	bl	8002768 <HAL_GetTick>
 8000e42:	60f8      	str	r0, [r7, #12]
    unsigned int wait = 1000;
 8000e44:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000e48:	61bb      	str	r3, [r7, #24]
    if (wait < HAL_MAX_DELAY) wait += (uint32_t)(uwTickFreq); /* Add a freq to guarantee minimum wait */
 8000e4a:	69bb      	ldr	r3, [r7, #24]
 8000e4c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000e50:	d005      	beq.n	8000e5e <Encoder_Init+0x52>
 8000e52:	4b15      	ldr	r3, [pc, #84]	@ (8000ea8 <Encoder_Init+0x9c>)
 8000e54:	781b      	ldrb	r3, [r3, #0]
 8000e56:	461a      	mov	r2, r3
 8000e58:	69bb      	ldr	r3, [r7, #24]
 8000e5a:	4413      	add	r3, r2
 8000e5c:	61bb      	str	r3, [r7, #24]
    while((HAL_GetTick() - tickstart) < wait) {}
 8000e5e:	bf00      	nop
 8000e60:	f001 fc82 	bl	8002768 <HAL_GetTick>
 8000e64:	4602      	mov	r2, r0
 8000e66:	68fb      	ldr	r3, [r7, #12]
 8000e68:	1ad3      	subs	r3, r2, r3
 8000e6a:	69ba      	ldr	r2, [r7, #24]
 8000e6c:	429a      	cmp	r2, r3
 8000e6e:	d8f7      	bhi.n	8000e60 <Encoder_Init+0x54>

    New_value = Encoder_xx->Timer_number->Instance->CNT;
 8000e70:	687b      	ldr	r3, [r7, #4]
 8000e72:	681b      	ldr	r3, [r3, #0]
 8000e74:	681b      	ldr	r3, [r3, #0]
 8000e76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000e78:	61fb      	str	r3, [r7, #28]
  } while (New_value != Old_value);
 8000e7a:	69fa      	ldr	r2, [r7, #28]
 8000e7c:	697b      	ldr	r3, [r7, #20]
 8000e7e:	429a      	cmp	r2, r3
 8000e80:	d1db      	bne.n	8000e3a <Encoder_Init+0x2e>

  Encoder_xx->Timer_number->Instance->CNT = Encoder_xx->Safe_start_value;
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	88da      	ldrh	r2, [r3, #6]
 8000e86:	687b      	ldr	r3, [r7, #4]
 8000e88:	681b      	ldr	r3, [r3, #0]
 8000e8a:	681b      	ldr	r3, [r3, #0]
 8000e8c:	625a      	str	r2, [r3, #36]	@ 0x24

  Motor_Stop(Motor_xx);
 8000e8e:	6938      	ldr	r0, [r7, #16]
 8000e90:	f000 fc99 	bl	80017c6 <Motor_Stop>
};
 8000e94:	bf00      	nop
 8000e96:	3720      	adds	r7, #32
 8000e98:	46bd      	mov	sp, r7
 8000e9a:	bd80      	pop	{r7, pc}
 8000e9c:	20000000 	.word	0x20000000
 8000ea0:	20000038 	.word	0x20000038
 8000ea4:	2000006c 	.word	0x2000006c
 8000ea8:	200000c0 	.word	0x200000c0

08000eac <Encoder_GetAngular>:


void Encoder_GetAngular(Encoder *Encoder_xx) {
 8000eac:	b480      	push	{r7}
 8000eae:	b085      	sub	sp, #20
 8000eb0:	af00      	add	r7, sp, #0
 8000eb2:	6078      	str	r0, [r7, #4]
  unsigned short Encoder_value = Encoder_xx->Timer_number->Instance->CNT / 4;
 8000eb4:	687b      	ldr	r3, [r7, #4]
 8000eb6:	681b      	ldr	r3, [r3, #0]
 8000eb8:	681b      	ldr	r3, [r3, #0]
 8000eba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000ebc:	089b      	lsrs	r3, r3, #2
 8000ebe:	81fb      	strh	r3, [r7, #14]
  (Encoder_xx == &Encoder_AZ) ?
    (Systema_AZ.Actual_angular = Systema_AZ.Minimum + (float)(Encoder_value - Encoder_xx->Safe_start_value) * (Systema_AZ.Maximum - Systema_AZ.Minimum) / Encoder_xx->Pulses_per_revolution) :
 8000ec0:	687b      	ldr	r3, [r7, #4]
 8000ec2:	4a27      	ldr	r2, [pc, #156]	@ (8000f60 <Encoder_GetAngular+0xb4>)
 8000ec4:	4293      	cmp	r3, r2
 8000ec6:	d122      	bne.n	8000f0e <Encoder_GetAngular+0x62>
 8000ec8:	4b26      	ldr	r3, [pc, #152]	@ (8000f64 <Encoder_GetAngular+0xb8>)
 8000eca:	ed93 7a02 	vldr	s14, [r3, #8]
 8000ece:	89fb      	ldrh	r3, [r7, #14]
 8000ed0:	687a      	ldr	r2, [r7, #4]
 8000ed2:	88d2      	ldrh	r2, [r2, #6]
 8000ed4:	1a9b      	subs	r3, r3, r2
 8000ed6:	ee07 3a90 	vmov	s15, r3
 8000eda:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000ede:	4b21      	ldr	r3, [pc, #132]	@ (8000f64 <Encoder_GetAngular+0xb8>)
 8000ee0:	ed93 6a01 	vldr	s12, [r3, #4]
 8000ee4:	4b1f      	ldr	r3, [pc, #124]	@ (8000f64 <Encoder_GetAngular+0xb8>)
 8000ee6:	edd3 7a02 	vldr	s15, [r3, #8]
 8000eea:	ee76 7a67 	vsub.f32	s15, s12, s15
 8000eee:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8000ef2:	687b      	ldr	r3, [r7, #4]
 8000ef4:	889b      	ldrh	r3, [r3, #4]
 8000ef6:	ee07 3a90 	vmov	s15, r3
 8000efa:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000efe:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8000f02:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f06:	4b17      	ldr	r3, [pc, #92]	@ (8000f64 <Encoder_GetAngular+0xb8>)
 8000f08:	edc3 7a00 	vstr	s15, [r3]
    (Systema_EL.Actual_angular = Systema_EL.Minimum + (float)(Encoder_value - Encoder_xx->Safe_start_value) * (Systema_EL.Maximum - Systema_EL.Minimum) / Encoder_xx->Pulses_per_revolution);
};
 8000f0c:	e021      	b.n	8000f52 <Encoder_GetAngular+0xa6>
    (Systema_EL.Actual_angular = Systema_EL.Minimum + (float)(Encoder_value - Encoder_xx->Safe_start_value) * (Systema_EL.Maximum - Systema_EL.Minimum) / Encoder_xx->Pulses_per_revolution);
 8000f0e:	4b16      	ldr	r3, [pc, #88]	@ (8000f68 <Encoder_GetAngular+0xbc>)
 8000f10:	ed93 7a02 	vldr	s14, [r3, #8]
 8000f14:	89fb      	ldrh	r3, [r7, #14]
 8000f16:	687a      	ldr	r2, [r7, #4]
 8000f18:	88d2      	ldrh	r2, [r2, #6]
 8000f1a:	1a9b      	subs	r3, r3, r2
 8000f1c:	ee07 3a90 	vmov	s15, r3
 8000f20:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000f24:	4b10      	ldr	r3, [pc, #64]	@ (8000f68 <Encoder_GetAngular+0xbc>)
 8000f26:	ed93 6a01 	vldr	s12, [r3, #4]
 8000f2a:	4b0f      	ldr	r3, [pc, #60]	@ (8000f68 <Encoder_GetAngular+0xbc>)
 8000f2c:	edd3 7a02 	vldr	s15, [r3, #8]
 8000f30:	ee76 7a67 	vsub.f32	s15, s12, s15
 8000f34:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	889b      	ldrh	r3, [r3, #4]
 8000f3c:	ee07 3a90 	vmov	s15, r3
 8000f40:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000f44:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8000f48:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f4c:	4b06      	ldr	r3, [pc, #24]	@ (8000f68 <Encoder_GetAngular+0xbc>)
 8000f4e:	edc3 7a00 	vstr	s15, [r3]
};
 8000f52:	bf00      	nop
 8000f54:	3714      	adds	r7, #20
 8000f56:	46bd      	mov	sp, r7
 8000f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f5c:	4770      	bx	lr
 8000f5e:	bf00      	nop
 8000f60:	20000000 	.word	0x20000000
 8000f64:	200000a0 	.word	0x200000a0
 8000f68:	200000ac 	.word	0x200000ac

08000f6c <Mode_Manual>:
  .Buffer_differens_angular = {0},
  .Index_buffer = 0,
  .Requirement_stop = 'N'
};

void Mode_Manual(Motor *Motor_xx) {
 8000f6c:	b580      	push	{r7, lr}
 8000f6e:	b082      	sub	sp, #8
 8000f70:	af00      	add	r7, sp, #0
 8000f72:	6078      	str	r0, [r7, #4]
  if (Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) {
 8000f74:	687b      	ldr	r3, [r7, #4]
 8000f76:	4a33      	ldr	r2, [pc, #204]	@ (8001044 <Mode_Manual+0xd8>)
 8000f78:	4293      	cmp	r3, r2
 8000f7a:	d10b      	bne.n	8000f94 <Mode_Manual+0x28>
 8000f7c:	4b32      	ldr	r3, [pc, #200]	@ (8001048 <Mode_Manual+0xdc>)
 8000f7e:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8000f82:	eef5 7a40 	vcmp.f32	s15, #0.0
 8000f86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f8a:	bf14      	ite	ne
 8000f8c:	2301      	movne	r3, #1
 8000f8e:	2300      	moveq	r3, #0
 8000f90:	b2db      	uxtb	r3, r3
 8000f92:	e00a      	b.n	8000faa <Mode_Manual+0x3e>
 8000f94:	4b2c      	ldr	r3, [pc, #176]	@ (8001048 <Mode_Manual+0xdc>)
 8000f96:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8000f9a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8000f9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fa2:	bf14      	ite	ne
 8000fa4:	2301      	movne	r3, #1
 8000fa6:	2300      	moveq	r3, #0
 8000fa8:	b2db      	uxtb	r3, r3
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	d043      	beq.n	8001036 <Mode_Manual+0xca>
    if (Motor_xx->Status.Functioning) {
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8000fb4:	2b00      	cmp	r3, #0
 8000fb6:	d01b      	beq.n	8000ff0 <Mode_Manual+0x84>
      Motor_xx->Status.Tik[0] = TIM5->CNT;
 8000fb8:	4b24      	ldr	r3, [pc, #144]	@ (800104c <Mode_Manual+0xe0>)
 8000fba:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000fbc:	687b      	ldr	r3, [r7, #4]
 8000fbe:	62da      	str	r2, [r3, #44]	@ 0x2c
      if (abs(Motor_xx->Status.Tik[0] - Motor_xx->Status.Tik[1]) / TIM5->PSC > 2000) {
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000fc8:	1ad3      	subs	r3, r2, r3
 8000fca:	2b00      	cmp	r3, #0
 8000fcc:	bfb8      	it	lt
 8000fce:	425b      	neglt	r3, r3
 8000fd0:	461a      	mov	r2, r3
 8000fd2:	4b1e      	ldr	r3, [pc, #120]	@ (800104c <Mode_Manual+0xe0>)
 8000fd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000fd6:	fbb2 f3f3 	udiv	r3, r2, r3
 8000fda:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 8000fde:	d92d      	bls.n	800103c <Mode_Manual+0xd0>
    	Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000fe4:	687b      	ldr	r3, [r7, #4]
 8000fe6:	631a      	str	r2, [r3, #48]	@ 0x30
        Motor_UpFrequency(Motor_xx);
 8000fe8:	6878      	ldr	r0, [r7, #4]
 8000fea:	f000 fba7 	bl	800173c <Motor_UpFrequency>
    } else {
      Motor_DirRot(Motor_xx, (Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) > 0 ? Hight : Low);
      Motor_Start(Motor_xx);
    };
  } else {Motor_Stop(Motor_xx);};
};
 8000fee:	e025      	b.n	800103c <Mode_Manual+0xd0>
      Motor_DirRot(Motor_xx, (Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) > 0 ? Hight : Low);
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	4a14      	ldr	r2, [pc, #80]	@ (8001044 <Mode_Manual+0xd8>)
 8000ff4:	4293      	cmp	r3, r2
 8000ff6:	d10b      	bne.n	8001010 <Mode_Manual+0xa4>
 8000ff8:	4b13      	ldr	r3, [pc, #76]	@ (8001048 <Mode_Manual+0xdc>)
 8000ffa:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8000ffe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001002:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001006:	bfcc      	ite	gt
 8001008:	2301      	movgt	r3, #1
 800100a:	2300      	movle	r3, #0
 800100c:	b2db      	uxtb	r3, r3
 800100e:	e00a      	b.n	8001026 <Mode_Manual+0xba>
 8001010:	4b0d      	ldr	r3, [pc, #52]	@ (8001048 <Mode_Manual+0xdc>)
 8001012:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8001016:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800101a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800101e:	bfcc      	ite	gt
 8001020:	2301      	movgt	r3, #1
 8001022:	2300      	movle	r3, #0
 8001024:	b2db      	uxtb	r3, r3
 8001026:	4619      	mov	r1, r3
 8001028:	6878      	ldr	r0, [r7, #4]
 800102a:	f000 fb09 	bl	8001640 <Motor_DirRot>
      Motor_Start(Motor_xx);
 800102e:	6878      	ldr	r0, [r7, #4]
 8001030:	f000 fba8 	bl	8001784 <Motor_Start>
};
 8001034:	e002      	b.n	800103c <Mode_Manual+0xd0>
  } else {Motor_Stop(Motor_xx);};
 8001036:	6878      	ldr	r0, [r7, #4]
 8001038:	f000 fbc5 	bl	80017c6 <Motor_Stop>
};
 800103c:	bf00      	nop
 800103e:	3708      	adds	r7, #8
 8001040:	46bd      	mov	sp, r7
 8001042:	bd80      	pop	{r7, pc}
 8001044:	20000038 	.word	0x20000038
 8001048:	20000130 	.word	0x20000130
 800104c:	40000c00 	.word	0x40000c00

08001050 <Mode_Semi_automatic>:

void Mode_Semi_automatic(Motor *Motor_xx) {
 8001050:	b580      	push	{r7, lr}
 8001052:	b082      	sub	sp, #8
 8001054:	af00      	add	r7, sp, #0
 8001056:	6078      	str	r0, [r7, #4]
  if (Motor_xx == &Motor_AZ ? abs(RP_message.Azimuth - Systema_AZ.Actual_angular) != 0 : abs(RP_message.Elevation - Systema_EL.Actual_angular) != 0) {
 8001058:	687b      	ldr	r3, [r7, #4]
 800105a:	4a3e      	ldr	r2, [pc, #248]	@ (8001154 <Mode_Semi_automatic+0x104>)
 800105c:	4293      	cmp	r3, r2
 800105e:	d111      	bne.n	8001084 <Mode_Semi_automatic+0x34>
 8001060:	4b3d      	ldr	r3, [pc, #244]	@ (8001158 <Mode_Semi_automatic+0x108>)
 8001062:	ed93 7a0a 	vldr	s14, [r3, #40]	@ 0x28
 8001066:	4b3d      	ldr	r3, [pc, #244]	@ (800115c <Mode_Semi_automatic+0x10c>)
 8001068:	edd3 7a00 	vldr	s15, [r3]
 800106c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001070:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001074:	ee17 3a90 	vmov	r3, s15
 8001078:	2b00      	cmp	r3, #0
 800107a:	bf14      	ite	ne
 800107c:	2301      	movne	r3, #1
 800107e:	2300      	moveq	r3, #0
 8001080:	b2db      	uxtb	r3, r3
 8001082:	e010      	b.n	80010a6 <Mode_Semi_automatic+0x56>
 8001084:	4b34      	ldr	r3, [pc, #208]	@ (8001158 <Mode_Semi_automatic+0x108>)
 8001086:	ed93 7a0b 	vldr	s14, [r3, #44]	@ 0x2c
 800108a:	4b35      	ldr	r3, [pc, #212]	@ (8001160 <Mode_Semi_automatic+0x110>)
 800108c:	edd3 7a00 	vldr	s15, [r3]
 8001090:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001094:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001098:	ee17 3a90 	vmov	r3, s15
 800109c:	2b00      	cmp	r3, #0
 800109e:	bf14      	ite	ne
 80010a0:	2301      	movne	r3, #1
 80010a2:	2300      	moveq	r3, #0
 80010a4:	b2db      	uxtb	r3, r3
 80010a6:	2b00      	cmp	r3, #0
 80010a8:	d04d      	beq.n	8001146 <Mode_Semi_automatic+0xf6>
    if (Motor_xx->Status.Functioning) {
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d01b      	beq.n	80010ec <Mode_Semi_automatic+0x9c>
      Motor_xx->Status.Tik[0] = TIM5->CNT;
 80010b4:	4b2b      	ldr	r3, [pc, #172]	@ (8001164 <Mode_Semi_automatic+0x114>)
 80010b6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	62da      	str	r2, [r3, #44]	@ 0x2c
      if (abs(Motor_xx->Status.Tik[0] - Motor_xx->Status.Tik[1]) / TIM5->PSC > 2000) {
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010c4:	1ad3      	subs	r3, r2, r3
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	bfb8      	it	lt
 80010ca:	425b      	neglt	r3, r3
 80010cc:	461a      	mov	r2, r3
 80010ce:	4b25      	ldr	r3, [pc, #148]	@ (8001164 <Mode_Semi_automatic+0x114>)
 80010d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80010d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80010d6:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 80010da:	d937      	bls.n	800114c <Mode_Semi_automatic+0xfc>
    	Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80010e0:	687b      	ldr	r3, [r7, #4]
 80010e2:	631a      	str	r2, [r3, #48]	@ 0x30
        Motor_UpFrequency(Motor_xx);
 80010e4:	6878      	ldr	r0, [r7, #4]
 80010e6:	f000 fb29 	bl	800173c <Motor_UpFrequency>
    } else {
      Motor_DirRot(Motor_xx, (Motor_xx == &Motor_AZ ? RP_message.Azimuth - Systema_AZ.Actual_angular : RP_message.Elevation - Systema_EL.Actual_angular) > 0 ? Hight : Low);
      Motor_Start(Motor_xx);
    };
  } else {Motor_Stop(Motor_xx);};
};
 80010ea:	e02f      	b.n	800114c <Mode_Semi_automatic+0xfc>
      Motor_DirRot(Motor_xx, (Motor_xx == &Motor_AZ ? RP_message.Azimuth - Systema_AZ.Actual_angular : RP_message.Elevation - Systema_EL.Actual_angular) > 0 ? Hight : Low);
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	4a19      	ldr	r2, [pc, #100]	@ (8001154 <Mode_Semi_automatic+0x104>)
 80010f0:	4293      	cmp	r3, r2
 80010f2:	d110      	bne.n	8001116 <Mode_Semi_automatic+0xc6>
 80010f4:	4b18      	ldr	r3, [pc, #96]	@ (8001158 <Mode_Semi_automatic+0x108>)
 80010f6:	ed93 7a0a 	vldr	s14, [r3, #40]	@ 0x28
 80010fa:	4b18      	ldr	r3, [pc, #96]	@ (800115c <Mode_Semi_automatic+0x10c>)
 80010fc:	edd3 7a00 	vldr	s15, [r3]
 8001100:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001104:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001108:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800110c:	bfcc      	ite	gt
 800110e:	2301      	movgt	r3, #1
 8001110:	2300      	movle	r3, #0
 8001112:	b2db      	uxtb	r3, r3
 8001114:	e00f      	b.n	8001136 <Mode_Semi_automatic+0xe6>
 8001116:	4b10      	ldr	r3, [pc, #64]	@ (8001158 <Mode_Semi_automatic+0x108>)
 8001118:	ed93 7a0b 	vldr	s14, [r3, #44]	@ 0x2c
 800111c:	4b10      	ldr	r3, [pc, #64]	@ (8001160 <Mode_Semi_automatic+0x110>)
 800111e:	edd3 7a00 	vldr	s15, [r3]
 8001122:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001126:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800112a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800112e:	bfcc      	ite	gt
 8001130:	2301      	movgt	r3, #1
 8001132:	2300      	movle	r3, #0
 8001134:	b2db      	uxtb	r3, r3
 8001136:	4619      	mov	r1, r3
 8001138:	6878      	ldr	r0, [r7, #4]
 800113a:	f000 fa81 	bl	8001640 <Motor_DirRot>
      Motor_Start(Motor_xx);
 800113e:	6878      	ldr	r0, [r7, #4]
 8001140:	f000 fb20 	bl	8001784 <Motor_Start>
};
 8001144:	e002      	b.n	800114c <Mode_Semi_automatic+0xfc>
  } else {Motor_Stop(Motor_xx);};
 8001146:	6878      	ldr	r0, [r7, #4]
 8001148:	f000 fb3d 	bl	80017c6 <Motor_Stop>
};
 800114c:	bf00      	nop
 800114e:	3708      	adds	r7, #8
 8001150:	46bd      	mov	sp, r7
 8001152:	bd80      	pop	{r7, pc}
 8001154:	20000038 	.word	0x20000038
 8001158:	20000130 	.word	0x20000130
 800115c:	200000a0 	.word	0x200000a0
 8001160:	200000ac 	.word	0x200000ac
 8001164:	40000c00 	.word	0x40000c00

08001168 <Mode_Moving_away_from_borders>:

void Mode_Moving_away_from_borders(Motor *Motor_xx) {
 8001168:	b580      	push	{r7, lr}
 800116a:	b084      	sub	sp, #16
 800116c:	af00      	add	r7, sp, #0
 800116e:	6078      	str	r0, [r7, #4]
  Systems *Systema_xx = Motor_xx == &Motor_AZ ? &Systema_AZ : &Systema_EL;
 8001170:	687b      	ldr	r3, [r7, #4]
 8001172:	4a1d      	ldr	r2, [pc, #116]	@ (80011e8 <Mode_Moving_away_from_borders+0x80>)
 8001174:	4293      	cmp	r3, r2
 8001176:	d101      	bne.n	800117c <Mode_Moving_away_from_borders+0x14>
 8001178:	4b1c      	ldr	r3, [pc, #112]	@ (80011ec <Mode_Moving_away_from_borders+0x84>)
 800117a:	e000      	b.n	800117e <Mode_Moving_away_from_borders+0x16>
 800117c:	4b1c      	ldr	r3, [pc, #112]	@ (80011f0 <Mode_Moving_away_from_borders+0x88>)
 800117e:	60fb      	str	r3, [r7, #12]

  if (System_CheckLimit(Systema_xx)) {
 8001180:	68f8      	ldr	r0, [r7, #12]
 8001182:	f000 fb41 	bl	8001808 <System_CheckLimit>
 8001186:	4603      	mov	r3, r0
 8001188:	2b00      	cmp	r3, #0
 800118a:	d017      	beq.n	80011bc <Mode_Moving_away_from_borders+0x54>
	Motor_xx->Status.Tik[0] = TIM5->CNT;
 800118c:	4b19      	ldr	r3, [pc, #100]	@ (80011f4 <Mode_Moving_away_from_borders+0x8c>)
 800118e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001190:	687b      	ldr	r3, [r7, #4]
 8001192:	62da      	str	r2, [r3, #44]	@ 0x2c
    if (abs(Motor_xx->Status.Tik[0] - Motor_xx->Status.Tik[1]) > 20000) {
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800119c:	1ad3      	subs	r3, r2, r3
 800119e:	2b00      	cmp	r3, #0
 80011a0:	bfb8      	it	lt
 80011a2:	425b      	neglt	r3, r3
 80011a4:	f644 6220 	movw	r2, #20000	@ 0x4e20
 80011a8:	4293      	cmp	r3, r2
 80011aa:	dd19      	ble.n	80011e0 <Mode_Moving_away_from_borders+0x78>
      Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 80011ac:	687b      	ldr	r3, [r7, #4]
 80011ae:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80011b0:	687b      	ldr	r3, [r7, #4]
 80011b2:	631a      	str	r2, [r3, #48]	@ 0x30
      Motor_Stop(Motor_xx);
 80011b4:	6878      	ldr	r0, [r7, #4]
 80011b6:	f000 fb06 	bl	80017c6 <Motor_Stop>
    }
  } else {
    Motor_DirRot(Motor_xx, Systema_xx->Actual_angular > 0 ? Hight : Low);
    Motor_Start(Motor_xx);
  };
};
 80011ba:	e011      	b.n	80011e0 <Mode_Moving_away_from_borders+0x78>
    Motor_DirRot(Motor_xx, Systema_xx->Actual_angular > 0 ? Hight : Low);
 80011bc:	68fb      	ldr	r3, [r7, #12]
 80011be:	edd3 7a00 	vldr	s15, [r3]
 80011c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80011c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80011ca:	bfcc      	ite	gt
 80011cc:	2301      	movgt	r3, #1
 80011ce:	2300      	movle	r3, #0
 80011d0:	b2db      	uxtb	r3, r3
 80011d2:	4619      	mov	r1, r3
 80011d4:	6878      	ldr	r0, [r7, #4]
 80011d6:	f000 fa33 	bl	8001640 <Motor_DirRot>
    Motor_Start(Motor_xx);
 80011da:	6878      	ldr	r0, [r7, #4]
 80011dc:	f000 fad2 	bl	8001784 <Motor_Start>
};
 80011e0:	bf00      	nop
 80011e2:	3710      	adds	r7, #16
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bd80      	pop	{r7, pc}
 80011e8:	20000038 	.word	0x20000038
 80011ec:	200000a0 	.word	0x200000a0
 80011f0:	200000ac 	.word	0x200000ac
 80011f4:	40000c00 	.word	0x40000c00

080011f8 <Mode_Automatic>:

void Mode_Automatic(Motor *Motor_xx) {
 80011f8:	b5b0      	push	{r4, r5, r7, lr}
 80011fa:	b086      	sub	sp, #24
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	6078      	str	r0, [r7, #4]
  Mode_Automatic_data *Automatic_data_xx = Motor_xx == &Motor_AZ ? &Automatic_data_AZ : &Automatic_data_EL;
 8001200:	687b      	ldr	r3, [r7, #4]
 8001202:	4aa0      	ldr	r2, [pc, #640]	@ (8001484 <Mode_Automatic+0x28c>)
 8001204:	4293      	cmp	r3, r2
 8001206:	d101      	bne.n	800120c <Mode_Automatic+0x14>
 8001208:	4b9f      	ldr	r3, [pc, #636]	@ (8001488 <Mode_Automatic+0x290>)
 800120a:	e000      	b.n	800120e <Mode_Automatic+0x16>
 800120c:	4b9f      	ldr	r3, [pc, #636]	@ (800148c <Mode_Automatic+0x294>)
 800120e:	617b      	str	r3, [r7, #20]

  if (Motor_xx->Status.Functioning == 0) {  // && Приказ от Raspberry на остановку == 'N'
 8001210:	687b      	ldr	r3, [r7, #4]
 8001212:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8001216:	2b00      	cmp	r3, #0
 8001218:	d12d      	bne.n	8001276 <Mode_Automatic+0x7e>
    Motor_xx->Status.Direction_of_rotation = (Motor_xx == &Motor_AZ ? (RP_message.Azimuth > 0 ? Low : Hight) : (RP_message.Elevation > 0 ? Hight : Low)) ;
 800121a:	687b      	ldr	r3, [r7, #4]
 800121c:	4a99      	ldr	r2, [pc, #612]	@ (8001484 <Mode_Automatic+0x28c>)
 800121e:	4293      	cmp	r3, r2
 8001220:	d10f      	bne.n	8001242 <Mode_Automatic+0x4a>
 8001222:	4b9b      	ldr	r3, [pc, #620]	@ (8001490 <Mode_Automatic+0x298>)
 8001224:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8001228:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800122c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001230:	bfcc      	ite	gt
 8001232:	2301      	movgt	r3, #1
 8001234:	2300      	movle	r3, #0
 8001236:	b2db      	uxtb	r3, r3
 8001238:	f083 0301 	eor.w	r3, r3, #1
 800123c:	b2db      	uxtb	r3, r3
 800123e:	b2da      	uxtb	r2, r3
 8001240:	e00b      	b.n	800125a <Mode_Automatic+0x62>
 8001242:	4b93      	ldr	r3, [pc, #588]	@ (8001490 <Mode_Automatic+0x298>)
 8001244:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8001248:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800124c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001250:	bfcc      	ite	gt
 8001252:	2301      	movgt	r3, #1
 8001254:	2300      	movle	r3, #0
 8001256:	b2db      	uxtb	r3, r3
 8001258:	461a      	mov	r2, r3
 800125a:	687b      	ldr	r3, [r7, #4]
 800125c:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
    Motor_DirRot(Motor_xx, Motor_xx->Status.Direction_of_rotation);
 8001260:	687b      	ldr	r3, [r7, #4]
 8001262:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 8001266:	4619      	mov	r1, r3
 8001268:	6878      	ldr	r0, [r7, #4]
 800126a:	f000 f9e9 	bl	8001640 <Motor_DirRot>
    Motor_Start(Motor_xx);
 800126e:	6878      	ldr	r0, [r7, #4]
 8001270:	f000 fa88 	bl	8001784 <Motor_Start>
	      }
	    };
	  };
	};
  };
};
 8001274:	e12d      	b.n	80014d2 <Mode_Automatic+0x2da>
	    100 * sqrt(Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) +
 8001276:	687b      	ldr	r3, [r7, #4]
 8001278:	4a82      	ldr	r2, [pc, #520]	@ (8001484 <Mode_Automatic+0x28c>)
 800127a:	4293      	cmp	r3, r2
 800127c:	d102      	bne.n	8001284 <Mode_Automatic+0x8c>
 800127e:	4b84      	ldr	r3, [pc, #528]	@ (8001490 <Mode_Automatic+0x298>)
 8001280:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001282:	e001      	b.n	8001288 <Mode_Automatic+0x90>
 8001284:	4b82      	ldr	r3, [pc, #520]	@ (8001490 <Mode_Automatic+0x298>)
 8001286:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001288:	4618      	mov	r0, r3
 800128a:	f7ff f901 	bl	8000490 <__aeabi_f2d>
 800128e:	4602      	mov	r2, r0
 8001290:	460b      	mov	r3, r1
 8001292:	ec43 2b10 	vmov	d0, r2, r3
 8001296:	f004 f9e5 	bl	8005664 <sqrt>
 800129a:	ec51 0b10 	vmov	r0, r1, d0
 800129e:	f04f 0200 	mov.w	r2, #0
 80012a2:	4b7c      	ldr	r3, [pc, #496]	@ (8001494 <Mode_Automatic+0x29c>)
 80012a4:	f7ff f94c 	bl	8000540 <__aeabi_dmul>
 80012a8:	4602      	mov	r2, r0
 80012aa:	460b      	mov	r3, r1
 80012ac:	4614      	mov	r4, r2
 80012ae:	461d      	mov	r5, r3
		140 * (Automatic_data_xx->Buffer_differens_angular[0] - Automatic_data_xx->Buffer_differens_angular[1]);
 80012b0:	697b      	ldr	r3, [r7, #20]
 80012b2:	ed93 7a00 	vldr	s14, [r3]
 80012b6:	697b      	ldr	r3, [r7, #20]
 80012b8:	edd3 7a01 	vldr	s15, [r3, #4]
 80012bc:	ee77 7a67 	vsub.f32	s15, s14, s15
 80012c0:	ed9f 7a75 	vldr	s14, [pc, #468]	@ 8001498 <Mode_Automatic+0x2a0>
 80012c4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012c8:	ee17 0a90 	vmov	r0, s15
 80012cc:	f7ff f8e0 	bl	8000490 <__aeabi_f2d>
 80012d0:	4602      	mov	r2, r0
 80012d2:	460b      	mov	r3, r1
	    100 * sqrt(Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) +
 80012d4:	4620      	mov	r0, r4
 80012d6:	4629      	mov	r1, r5
 80012d8:	f7fe ff7c 	bl	80001d4 <__adddf3>
 80012dc:	4602      	mov	r2, r0
 80012de:	460b      	mov	r3, r1
	  unsigned int Increment_frequensy =
 80012e0:	4610      	mov	r0, r2
 80012e2:	4619      	mov	r1, r3
 80012e4:	f7ff fbdc 	bl	8000aa0 <__aeabi_d2uiz>
 80012e8:	4603      	mov	r3, r0
 80012ea:	613b      	str	r3, [r7, #16]
	  if (Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) {
 80012ec:	687b      	ldr	r3, [r7, #4]
 80012ee:	4a65      	ldr	r2, [pc, #404]	@ (8001484 <Mode_Automatic+0x28c>)
 80012f0:	4293      	cmp	r3, r2
 80012f2:	d10b      	bne.n	800130c <Mode_Automatic+0x114>
 80012f4:	4b66      	ldr	r3, [pc, #408]	@ (8001490 <Mode_Automatic+0x298>)
 80012f6:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 80012fa:	eef5 7a40 	vcmp.f32	s15, #0.0
 80012fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001302:	bf14      	ite	ne
 8001304:	2301      	movne	r3, #1
 8001306:	2300      	moveq	r3, #0
 8001308:	b2db      	uxtb	r3, r3
 800130a:	e00a      	b.n	8001322 <Mode_Automatic+0x12a>
 800130c:	4b60      	ldr	r3, [pc, #384]	@ (8001490 <Mode_Automatic+0x298>)
 800130e:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8001312:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800131a:	bf14      	ite	ne
 800131c:	2301      	movne	r3, #1
 800131e:	2300      	moveq	r3, #0
 8001320:	b2db      	uxtb	r3, r3
 8001322:	2b00      	cmp	r3, #0
 8001324:	d064      	beq.n	80013f0 <Mode_Automatic+0x1f8>
	    if (Motor_xx->Status.Direction_of_rotation) {
 8001326:	687b      	ldr	r3, [r7, #4]
 8001328:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800132c:	2b00      	cmp	r3, #0
 800132e:	d033      	beq.n	8001398 <Mode_Automatic+0x1a0>
	      if (Motor_xx->Status.Frequency - Increment_frequensy < Motor_xx->Parameters.Frequency.Minimum) {
 8001330:	687b      	ldr	r3, [r7, #4]
 8001332:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001334:	693b      	ldr	r3, [r7, #16]
 8001336:	1ad2      	subs	r2, r2, r3
 8001338:	687b      	ldr	r3, [r7, #4]
 800133a:	69db      	ldr	r3, [r3, #28]
 800133c:	429a      	cmp	r2, r3
 800133e:	d211      	bcs.n	8001364 <Mode_Automatic+0x16c>
	        Motor_Stop(Motor_xx);
 8001340:	6878      	ldr	r0, [r7, #4]
 8001342:	f000 fa40 	bl	80017c6 <Motor_Stop>
	        Motor_xx->Status.Direction_of_rotation = Low;
 8001346:	687b      	ldr	r3, [r7, #4]
 8001348:	2200      	movs	r2, #0
 800134a:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
	        Motor_DirRot(Motor_xx, Motor_xx->Status.Direction_of_rotation);
 800134e:	687b      	ldr	r3, [r7, #4]
 8001350:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 8001354:	4619      	mov	r1, r3
 8001356:	6878      	ldr	r0, [r7, #4]
 8001358:	f000 f972 	bl	8001640 <Motor_DirRot>
	        Motor_Start(Motor_xx);
 800135c:	6878      	ldr	r0, [r7, #4]
 800135e:	f000 fa11 	bl	8001784 <Motor_Start>
};
 8001362:	e0b6      	b.n	80014d2 <Mode_Automatic+0x2da>
	    	Frequensy = Motor_xx->Status.Frequency - Increment_frequensy;
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001368:	693b      	ldr	r3, [r7, #16]
 800136a:	1ad3      	subs	r3, r2, r3
 800136c:	60fb      	str	r3, [r7, #12]
	    	Motor_xx->Status.Tik[0] = TIM5->CNT;
 800136e:	4b4b      	ldr	r3, [pc, #300]	@ (800149c <Mode_Automatic+0x2a4>)
 8001370:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001372:	687b      	ldr	r3, [r7, #4]
 8001374:	62da      	str	r2, [r3, #44]	@ 0x2c
	    	Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800137a:	687b      	ldr	r3, [r7, #4]
 800137c:	631a      	str	r2, [r3, #48]	@ 0x30
	    	Motor_SetFrequency(Motor_xx, Frequensy);
 800137e:	68f9      	ldr	r1, [r7, #12]
 8001380:	6878      	ldr	r0, [r7, #4]
 8001382:	f000 f979 	bl	8001678 <Motor_SetFrequency>
	    	HAL_TIM_PWM_Start(Motor_xx->Parameters.Timer.Number_timer, Motor_xx->Parameters.Timer.Channel);
 8001386:	687b      	ldr	r3, [r7, #4]
 8001388:	691a      	ldr	r2, [r3, #16]
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	695b      	ldr	r3, [r3, #20]
 800138e:	4619      	mov	r1, r3
 8001390:	4610      	mov	r0, r2
 8001392:	f002 fa5b 	bl	800384c <HAL_TIM_PWM_Start>
};
 8001396:	e09c      	b.n	80014d2 <Mode_Automatic+0x2da>
	      Frequensy = Motor_xx->Status.Frequency + Increment_frequensy;
 8001398:	687b      	ldr	r3, [r7, #4]
 800139a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800139c:	693a      	ldr	r2, [r7, #16]
 800139e:	4413      	add	r3, r2
 80013a0:	60fb      	str	r3, [r7, #12]
	      Motor_xx->Status.Tik[0] = TIM5->CNT;
 80013a2:	4b3e      	ldr	r3, [pc, #248]	@ (800149c <Mode_Automatic+0x2a4>)
 80013a4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	62da      	str	r2, [r3, #44]	@ 0x2c
	      if (abs(Motor_xx->Status.Tik[0] - Motor_xx->Status.Tik[1]) / TIM5->PSC > 5000) {
 80013aa:	687b      	ldr	r3, [r7, #4]
 80013ac:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013b2:	1ad3      	subs	r3, r2, r3
 80013b4:	2b00      	cmp	r3, #0
 80013b6:	bfb8      	it	lt
 80013b8:	425b      	neglt	r3, r3
 80013ba:	461a      	mov	r2, r3
 80013bc:	4b37      	ldr	r3, [pc, #220]	@ (800149c <Mode_Automatic+0x2a4>)
 80013be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80013c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80013c4:	f241 3288 	movw	r2, #5000	@ 0x1388
 80013c8:	4293      	cmp	r3, r2
 80013ca:	f240 8082 	bls.w	80014d2 <Mode_Automatic+0x2da>
	        Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80013d2:	687b      	ldr	r3, [r7, #4]
 80013d4:	631a      	str	r2, [r3, #48]	@ 0x30
	        Motor_SetFrequency(Motor_xx, Frequensy);
 80013d6:	68f9      	ldr	r1, [r7, #12]
 80013d8:	6878      	ldr	r0, [r7, #4]
 80013da:	f000 f94d 	bl	8001678 <Motor_SetFrequency>
	        HAL_TIM_PWM_Start(Motor_xx->Parameters.Timer.Number_timer, Motor_xx->Parameters.Timer.Channel);
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	691a      	ldr	r2, [r3, #16]
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	695b      	ldr	r3, [r3, #20]
 80013e6:	4619      	mov	r1, r3
 80013e8:	4610      	mov	r0, r2
 80013ea:	f002 fa2f 	bl	800384c <HAL_TIM_PWM_Start>
};
 80013ee:	e070      	b.n	80014d2 <Mode_Automatic+0x2da>
	    if (Motor_xx->Status.Direction_of_rotation) {
 80013f0:	687b      	ldr	r3, [r7, #4]
 80013f2:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 80013f6:	2b00      	cmp	r3, #0
 80013f8:	d02a      	beq.n	8001450 <Mode_Automatic+0x258>
	      Frequensy = Motor_xx->Status.Frequency + Increment_frequensy;
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80013fe:	693a      	ldr	r2, [r7, #16]
 8001400:	4413      	add	r3, r2
 8001402:	60fb      	str	r3, [r7, #12]
	      Motor_xx->Status.Tik[0] = TIM5->CNT;
 8001404:	4b25      	ldr	r3, [pc, #148]	@ (800149c <Mode_Automatic+0x2a4>)
 8001406:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001408:	687b      	ldr	r3, [r7, #4]
 800140a:	62da      	str	r2, [r3, #44]	@ 0x2c
	      if (abs(Motor_xx->Status.Tik[0] - Motor_xx->Status.Tik[1]) / TIM5->PSC > 5000) {
 800140c:	687b      	ldr	r3, [r7, #4]
 800140e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001414:	1ad3      	subs	r3, r2, r3
 8001416:	2b00      	cmp	r3, #0
 8001418:	bfb8      	it	lt
 800141a:	425b      	neglt	r3, r3
 800141c:	461a      	mov	r2, r3
 800141e:	4b1f      	ldr	r3, [pc, #124]	@ (800149c <Mode_Automatic+0x2a4>)
 8001420:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001422:	fbb2 f3f3 	udiv	r3, r2, r3
 8001426:	f241 3288 	movw	r2, #5000	@ 0x1388
 800142a:	4293      	cmp	r3, r2
 800142c:	d951      	bls.n	80014d2 <Mode_Automatic+0x2da>
	        Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 800142e:	687b      	ldr	r3, [r7, #4]
 8001430:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	631a      	str	r2, [r3, #48]	@ 0x30
	        Motor_SetFrequency(Motor_xx, Frequensy);
 8001436:	68f9      	ldr	r1, [r7, #12]
 8001438:	6878      	ldr	r0, [r7, #4]
 800143a:	f000 f91d 	bl	8001678 <Motor_SetFrequency>
	        HAL_TIM_PWM_Start(Motor_xx->Parameters.Timer.Number_timer, Motor_xx->Parameters.Timer.Channel);
 800143e:	687b      	ldr	r3, [r7, #4]
 8001440:	691a      	ldr	r2, [r3, #16]
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	695b      	ldr	r3, [r3, #20]
 8001446:	4619      	mov	r1, r3
 8001448:	4610      	mov	r0, r2
 800144a:	f002 f9ff 	bl	800384c <HAL_TIM_PWM_Start>
};
 800144e:	e040      	b.n	80014d2 <Mode_Automatic+0x2da>
	      if (Motor_xx->Status.Frequency - Increment_frequensy < Motor_xx->Parameters.Frequency.Minimum) {
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001454:	693b      	ldr	r3, [r7, #16]
 8001456:	1ad2      	subs	r2, r2, r3
 8001458:	687b      	ldr	r3, [r7, #4]
 800145a:	69db      	ldr	r3, [r3, #28]
 800145c:	429a      	cmp	r2, r3
 800145e:	d21f      	bcs.n	80014a0 <Mode_Automatic+0x2a8>
	        Motor_Stop(Motor_xx);
 8001460:	6878      	ldr	r0, [r7, #4]
 8001462:	f000 f9b0 	bl	80017c6 <Motor_Stop>
	        Motor_xx->Status.Direction_of_rotation = Hight;
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	2201      	movs	r2, #1
 800146a:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
	        Motor_DirRot(Motor_xx, Motor_xx->Status.Direction_of_rotation);
 800146e:	687b      	ldr	r3, [r7, #4]
 8001470:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 8001474:	4619      	mov	r1, r3
 8001476:	6878      	ldr	r0, [r7, #4]
 8001478:	f000 f8e2 	bl	8001640 <Motor_DirRot>
	        Motor_Start(Motor_xx);
 800147c:	6878      	ldr	r0, [r7, #4]
 800147e:	f000 f981 	bl	8001784 <Motor_Start>
};
 8001482:	e026      	b.n	80014d2 <Mode_Automatic+0x2da>
 8001484:	20000038 	.word	0x20000038
 8001488:	20000010 	.word	0x20000010
 800148c:	20000024 	.word	0x20000024
 8001490:	20000130 	.word	0x20000130
 8001494:	40590000 	.word	0x40590000
 8001498:	430c0000 	.word	0x430c0000
 800149c:	40000c00 	.word	0x40000c00
	        Frequensy = Motor_xx->Status.Frequency - Increment_frequensy;
 80014a0:	687b      	ldr	r3, [r7, #4]
 80014a2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80014a4:	693b      	ldr	r3, [r7, #16]
 80014a6:	1ad3      	subs	r3, r2, r3
 80014a8:	60fb      	str	r3, [r7, #12]
	        Motor_xx->Status.Tik[0] = TIM5->CNT;
 80014aa:	4b0c      	ldr	r3, [pc, #48]	@ (80014dc <Mode_Automatic+0x2e4>)
 80014ac:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80014ae:	687b      	ldr	r3, [r7, #4]
 80014b0:	62da      	str	r2, [r3, #44]	@ 0x2c
	        Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 80014b2:	687b      	ldr	r3, [r7, #4]
 80014b4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80014b6:	687b      	ldr	r3, [r7, #4]
 80014b8:	631a      	str	r2, [r3, #48]	@ 0x30
	        Motor_SetFrequency(Motor_xx, Frequensy);
 80014ba:	68f9      	ldr	r1, [r7, #12]
 80014bc:	6878      	ldr	r0, [r7, #4]
 80014be:	f000 f8db 	bl	8001678 <Motor_SetFrequency>
	        HAL_TIM_PWM_Start(Motor_xx->Parameters.Timer.Number_timer, Motor_xx->Parameters.Timer.Channel);
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	691a      	ldr	r2, [r3, #16]
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	695b      	ldr	r3, [r3, #20]
 80014ca:	4619      	mov	r1, r3
 80014cc:	4610      	mov	r0, r2
 80014ce:	f002 f9bd 	bl	800384c <HAL_TIM_PWM_Start>
};
 80014d2:	bf00      	nop
 80014d4:	3718      	adds	r7, #24
 80014d6:	46bd      	mov	sp, r7
 80014d8:	bdb0      	pop	{r4, r5, r7, pc}
 80014da:	bf00      	nop
 80014dc:	40000c00 	.word	0x40000c00

080014e0 <Raspberry_DatPpars>:

#include "Raspberry.h"

Raspberry RP_message = {0};

void Raspberry_DatPpars(unsigned char Rx_data[21]) {
 80014e0:	b480      	push	{r7}
 80014e2:	b083      	sub	sp, #12
 80014e4:	af00      	add	r7, sp, #0
 80014e6:	6078      	str	r0, [r7, #4]
  RP_message.Azimuth =
    (Rx_data[3]  - '0') * 100.0f +
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	3303      	adds	r3, #3
 80014ec:	781b      	ldrb	r3, [r3, #0]
 80014ee:	3b30      	subs	r3, #48	@ 0x30
 80014f0:	ee07 3a90 	vmov	s15, r3
 80014f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80014f8:	ed9f 7a40 	vldr	s14, [pc, #256]	@ 80015fc <Raspberry_DatPpars+0x11c>
 80014fc:	ee27 7a87 	vmul.f32	s14, s15, s14
    (Rx_data[4]  - '0') * 10.0f +
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	3304      	adds	r3, #4
 8001504:	781b      	ldrb	r3, [r3, #0]
 8001506:	3b30      	subs	r3, #48	@ 0x30
 8001508:	ee07 3a90 	vmov	s15, r3
 800150c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001510:	eef2 6a04 	vmov.f32	s13, #36	@ 0x41200000  10.0
 8001514:	ee67 7aa6 	vmul.f32	s15, s15, s13
    (Rx_data[3]  - '0') * 100.0f +
 8001518:	ee37 7a27 	vadd.f32	s14, s14, s15
    (Rx_data[5]  - '0') +
 800151c:	687b      	ldr	r3, [r7, #4]
 800151e:	3305      	adds	r3, #5
 8001520:	781b      	ldrb	r3, [r3, #0]
 8001522:	3b30      	subs	r3, #48	@ 0x30
    (Rx_data[4]  - '0') * 10.0f +
 8001524:	ee07 3a90 	vmov	s15, r3
 8001528:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800152c:	ee37 7a27 	vadd.f32	s14, s14, s15
    (Rx_data[6]  - '0') * 0.1f;
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	3306      	adds	r3, #6
 8001534:	781b      	ldrb	r3, [r3, #0]
 8001536:	3b30      	subs	r3, #48	@ 0x30
 8001538:	ee07 3a90 	vmov	s15, r3
 800153c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001540:	eddf 6a2f 	vldr	s13, [pc, #188]	@ 8001600 <Raspberry_DatPpars+0x120>
 8001544:	ee67 7aa6 	vmul.f32	s15, s15, s13
    (Rx_data[5]  - '0') +
 8001548:	ee77 7a27 	vadd.f32	s15, s14, s15
  RP_message.Azimuth =
 800154c:	4b2d      	ldr	r3, [pc, #180]	@ (8001604 <Raspberry_DatPpars+0x124>)
 800154e:	edc3 7a0a 	vstr	s15, [r3, #40]	@ 0x28
  if (Rx_data[2] == '-') RP_message.Azimuth = -RP_message.Azimuth;
 8001552:	687b      	ldr	r3, [r7, #4]
 8001554:	3302      	adds	r3, #2
 8001556:	781b      	ldrb	r3, [r3, #0]
 8001558:	2b2d      	cmp	r3, #45	@ 0x2d
 800155a:	d107      	bne.n	800156c <Raspberry_DatPpars+0x8c>
 800155c:	4b29      	ldr	r3, [pc, #164]	@ (8001604 <Raspberry_DatPpars+0x124>)
 800155e:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8001562:	eef1 7a67 	vneg.f32	s15, s15
 8001566:	4b27      	ldr	r3, [pc, #156]	@ (8001604 <Raspberry_DatPpars+0x124>)
 8001568:	edc3 7a0a 	vstr	s15, [r3, #40]	@ 0x28

  RP_message.Elevation =
    (Rx_data[10] - '0') * 100.0f +
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	330a      	adds	r3, #10
 8001570:	781b      	ldrb	r3, [r3, #0]
 8001572:	3b30      	subs	r3, #48	@ 0x30
 8001574:	ee07 3a90 	vmov	s15, r3
 8001578:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800157c:	ed9f 7a1f 	vldr	s14, [pc, #124]	@ 80015fc <Raspberry_DatPpars+0x11c>
 8001580:	ee27 7a87 	vmul.f32	s14, s15, s14
    (Rx_data[11] - '0') * 10.0f +
 8001584:	687b      	ldr	r3, [r7, #4]
 8001586:	330b      	adds	r3, #11
 8001588:	781b      	ldrb	r3, [r3, #0]
 800158a:	3b30      	subs	r3, #48	@ 0x30
 800158c:	ee07 3a90 	vmov	s15, r3
 8001590:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001594:	eef2 6a04 	vmov.f32	s13, #36	@ 0x41200000  10.0
 8001598:	ee67 7aa6 	vmul.f32	s15, s15, s13
    (Rx_data[10] - '0') * 100.0f +
 800159c:	ee37 7a27 	vadd.f32	s14, s14, s15
    (Rx_data[12] - '0') +
 80015a0:	687b      	ldr	r3, [r7, #4]
 80015a2:	330c      	adds	r3, #12
 80015a4:	781b      	ldrb	r3, [r3, #0]
 80015a6:	3b30      	subs	r3, #48	@ 0x30
    (Rx_data[11] - '0') * 10.0f +
 80015a8:	ee07 3a90 	vmov	s15, r3
 80015ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015b0:	ee37 7a27 	vadd.f32	s14, s14, s15
    (Rx_data[13] - '0') * 0.1f;
 80015b4:	687b      	ldr	r3, [r7, #4]
 80015b6:	330d      	adds	r3, #13
 80015b8:	781b      	ldrb	r3, [r3, #0]
 80015ba:	3b30      	subs	r3, #48	@ 0x30
 80015bc:	ee07 3a90 	vmov	s15, r3
 80015c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015c4:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8001600 <Raspberry_DatPpars+0x120>
 80015c8:	ee67 7aa6 	vmul.f32	s15, s15, s13
    (Rx_data[12] - '0') +
 80015cc:	ee77 7a27 	vadd.f32	s15, s14, s15
  RP_message.Elevation =
 80015d0:	4b0c      	ldr	r3, [pc, #48]	@ (8001604 <Raspberry_DatPpars+0x124>)
 80015d2:	edc3 7a0b 	vstr	s15, [r3, #44]	@ 0x2c
  if (Rx_data[9] == '-') RP_message.Elevation = -RP_message.Elevation;
 80015d6:	687b      	ldr	r3, [r7, #4]
 80015d8:	3309      	adds	r3, #9
 80015da:	781b      	ldrb	r3, [r3, #0]
 80015dc:	2b2d      	cmp	r3, #45	@ 0x2d
 80015de:	d107      	bne.n	80015f0 <Raspberry_DatPpars+0x110>
 80015e0:	4b08      	ldr	r3, [pc, #32]	@ (8001604 <Raspberry_DatPpars+0x124>)
 80015e2:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 80015e6:	eef1 7a67 	vneg.f32	s15, s15
 80015ea:	4b06      	ldr	r3, [pc, #24]	@ (8001604 <Raspberry_DatPpars+0x124>)
 80015ec:	edc3 7a0b 	vstr	s15, [r3, #44]	@ 0x2c
};
 80015f0:	bf00      	nop
 80015f2:	370c      	adds	r7, #12
 80015f4:	46bd      	mov	sp, r7
 80015f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015fa:	4770      	bx	lr
 80015fc:	42c80000 	.word	0x42c80000
 8001600:	3dcccccd 	.word	0x3dcccccd
 8001604:	20000130 	.word	0x20000130

08001608 <Pin_SetLevl>:
	}
  },
  .Status = {0}
};

void Pin_SetLevl(Bundle_Port_Pin *Pin, Levl_signal State) {
 8001608:	b480      	push	{r7}
 800160a:	b083      	sub	sp, #12
 800160c:	af00      	add	r7, sp, #0
 800160e:	6078      	str	r0, [r7, #4]
 8001610:	460b      	mov	r3, r1
 8001612:	70fb      	strb	r3, [r7, #3]
   * Иначе возрращается параметр
   * */
  assert_param(IS_GPIO_PIN(Pin->Pin));
  assert_param(IS_GPIO_PIN_ACTION(State));

  if(State != Low) {Pin->Port->BSRR = Pin->Pin;}
 8001614:	78fb      	ldrb	r3, [r7, #3]
 8001616:	2b00      	cmp	r3, #0
 8001618:	d005      	beq.n	8001626 <Pin_SetLevl+0x1e>
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	889a      	ldrh	r2, [r3, #4]
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	681b      	ldr	r3, [r3, #0]
 8001622:	619a      	str	r2, [r3, #24]
  else {Pin->Port->BSRR = (uint32_t)Pin->Pin << 16U;};
};
 8001624:	e006      	b.n	8001634 <Pin_SetLevl+0x2c>
  else {Pin->Port->BSRR = (uint32_t)Pin->Pin << 16U;};
 8001626:	687b      	ldr	r3, [r7, #4]
 8001628:	889b      	ldrh	r3, [r3, #4]
 800162a:	461a      	mov	r2, r3
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	0412      	lsls	r2, r2, #16
 8001632:	619a      	str	r2, [r3, #24]
};
 8001634:	bf00      	nop
 8001636:	370c      	adds	r7, #12
 8001638:	46bd      	mov	sp, r7
 800163a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800163e:	4770      	bx	lr

08001640 <Motor_DirRot>:

void Motor_DirRot(Motor *Motor_xx, Levl_signal Direction_of_rotation) {
 8001640:	b480      	push	{r7}
 8001642:	b083      	sub	sp, #12
 8001644:	af00      	add	r7, sp, #0
 8001646:	6078      	str	r0, [r7, #4]
 8001648:	460b      	mov	r3, r1
 800164a:	70fb      	strb	r3, [r7, #3]
   * Иначе возрращается параметр
   * */
  assert_param(IS_GPIO_PIN(Motor_xx->Setting.Pin.DIR.Pin));
  assert_param(IS_GPIO_PIN_ACTION(Direction_of_rotation));

  if(Direction_of_rotation != Low) {Motor_xx->Parameters.Pins.DIR.Port->BSRR = Motor_xx->Parameters.Pins.DIR.Pin;}
 800164c:	78fb      	ldrb	r3, [r7, #3]
 800164e:	2b00      	cmp	r3, #0
 8001650:	d005      	beq.n	800165e <Motor_DirRot+0x1e>
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	899a      	ldrh	r2, [r3, #12]
 8001656:	687b      	ldr	r3, [r7, #4]
 8001658:	689b      	ldr	r3, [r3, #8]
 800165a:	619a      	str	r2, [r3, #24]
  else {Motor_xx->Parameters.Pins.DIR.Port->BSRR = (uint32_t)Motor_xx->Parameters.Pins.DIR.Pin << 16U;};
};
 800165c:	e006      	b.n	800166c <Motor_DirRot+0x2c>
  else {Motor_xx->Parameters.Pins.DIR.Port->BSRR = (uint32_t)Motor_xx->Parameters.Pins.DIR.Pin << 16U;};
 800165e:	687b      	ldr	r3, [r7, #4]
 8001660:	899b      	ldrh	r3, [r3, #12]
 8001662:	461a      	mov	r2, r3
 8001664:	687b      	ldr	r3, [r7, #4]
 8001666:	689b      	ldr	r3, [r3, #8]
 8001668:	0412      	lsls	r2, r2, #16
 800166a:	619a      	str	r2, [r3, #24]
};
 800166c:	bf00      	nop
 800166e:	370c      	adds	r7, #12
 8001670:	46bd      	mov	sp, r7
 8001672:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001676:	4770      	bx	lr

08001678 <Motor_SetFrequency>:

void Motor_SetFrequency(Motor *Motor_xx, unsigned int frequency) {
 8001678:	b580      	push	{r7, lr}
 800167a:	b084      	sub	sp, #16
 800167c:	af00      	add	r7, sp, #0
 800167e:	6078      	str	r0, [r7, #4]
 8001680:	6039      	str	r1, [r7, #0]
  TIM_HandleTypeDef *Number_xx = Motor_xx->Parameters.Timer.Number_timer;
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	691b      	ldr	r3, [r3, #16]
 8001686:	60bb      	str	r3, [r7, #8]

  static unsigned int prescaler = 0;
  unsigned int period = ((SystemCoreClock >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]) * 2 / (frequency * (prescaler + 1))) - 1;
 8001688:	4b28      	ldr	r3, [pc, #160]	@ (800172c <Motor_SetFrequency+0xb4>)
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	4a28      	ldr	r2, [pc, #160]	@ (8001730 <Motor_SetFrequency+0xb8>)
 800168e:	6892      	ldr	r2, [r2, #8]
 8001690:	0a92      	lsrs	r2, r2, #10
 8001692:	f002 0207 	and.w	r2, r2, #7
 8001696:	4927      	ldr	r1, [pc, #156]	@ (8001734 <Motor_SetFrequency+0xbc>)
 8001698:	5c8a      	ldrb	r2, [r1, r2]
 800169a:	40d3      	lsrs	r3, r2
 800169c:	005a      	lsls	r2, r3, #1
 800169e:	4b26      	ldr	r3, [pc, #152]	@ (8001738 <Motor_SetFrequency+0xc0>)
 80016a0:	681b      	ldr	r3, [r3, #0]
 80016a2:	3301      	adds	r3, #1
 80016a4:	6839      	ldr	r1, [r7, #0]
 80016a6:	fb01 f303 	mul.w	r3, r1, r3
 80016aa:	fbb2 f3f3 	udiv	r3, r2, r3
 80016ae:	3b01      	subs	r3, #1
 80016b0:	60fb      	str	r3, [r7, #12]

  while (period > 0xFFFF) {
 80016b2:	e019      	b.n	80016e8 <Motor_SetFrequency+0x70>
    prescaler++;
 80016b4:	4b20      	ldr	r3, [pc, #128]	@ (8001738 <Motor_SetFrequency+0xc0>)
 80016b6:	681b      	ldr	r3, [r3, #0]
 80016b8:	3301      	adds	r3, #1
 80016ba:	4a1f      	ldr	r2, [pc, #124]	@ (8001738 <Motor_SetFrequency+0xc0>)
 80016bc:	6013      	str	r3, [r2, #0]
    period = ((SystemCoreClock >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]) * 2 / (frequency * (prescaler + 1))) - 1;
 80016be:	4b1b      	ldr	r3, [pc, #108]	@ (800172c <Motor_SetFrequency+0xb4>)
 80016c0:	681b      	ldr	r3, [r3, #0]
 80016c2:	4a1b      	ldr	r2, [pc, #108]	@ (8001730 <Motor_SetFrequency+0xb8>)
 80016c4:	6892      	ldr	r2, [r2, #8]
 80016c6:	0a92      	lsrs	r2, r2, #10
 80016c8:	f002 0207 	and.w	r2, r2, #7
 80016cc:	4919      	ldr	r1, [pc, #100]	@ (8001734 <Motor_SetFrequency+0xbc>)
 80016ce:	5c8a      	ldrb	r2, [r1, r2]
 80016d0:	40d3      	lsrs	r3, r2
 80016d2:	005a      	lsls	r2, r3, #1
 80016d4:	4b18      	ldr	r3, [pc, #96]	@ (8001738 <Motor_SetFrequency+0xc0>)
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	3301      	adds	r3, #1
 80016da:	6839      	ldr	r1, [r7, #0]
 80016dc:	fb01 f303 	mul.w	r3, r1, r3
 80016e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80016e4:	3b01      	subs	r3, #1
 80016e6:	60fb      	str	r3, [r7, #12]
  while (period > 0xFFFF) {
 80016e8:	68fb      	ldr	r3, [r7, #12]
 80016ea:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80016ee:	d2e1      	bcs.n	80016b4 <Motor_SetFrequency+0x3c>
  };

  HAL_TIM_PWM_Stop(Number_xx, Motor_xx->Parameters.Timer.Channel);
 80016f0:	687b      	ldr	r3, [r7, #4]
 80016f2:	695b      	ldr	r3, [r3, #20]
 80016f4:	4619      	mov	r1, r3
 80016f6:	68b8      	ldr	r0, [r7, #8]
 80016f8:	f002 f970 	bl	80039dc <HAL_TIM_PWM_Stop>
  Number_xx->Instance->PSC = prescaler;
 80016fc:	68bb      	ldr	r3, [r7, #8]
 80016fe:	681b      	ldr	r3, [r3, #0]
 8001700:	4a0d      	ldr	r2, [pc, #52]	@ (8001738 <Motor_SetFrequency+0xc0>)
 8001702:	6812      	ldr	r2, [r2, #0]
 8001704:	629a      	str	r2, [r3, #40]	@ 0x28
  Number_xx->Instance->ARR = period;
 8001706:	68bb      	ldr	r3, [r7, #8]
 8001708:	681b      	ldr	r3, [r3, #0]
 800170a:	68fa      	ldr	r2, [r7, #12]
 800170c:	62da      	str	r2, [r3, #44]	@ 0x2c
  Number_xx->Instance->CCR1 = Number_xx->Instance->ARR / 2;
 800170e:	68bb      	ldr	r3, [r7, #8]
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001714:	68bb      	ldr	r3, [r7, #8]
 8001716:	681b      	ldr	r3, [r3, #0]
 8001718:	0852      	lsrs	r2, r2, #1
 800171a:	635a      	str	r2, [r3, #52]	@ 0x34

  Motor_xx->Status.Frequency = frequency;
 800171c:	687b      	ldr	r3, [r7, #4]
 800171e:	683a      	ldr	r2, [r7, #0]
 8001720:	625a      	str	r2, [r3, #36]	@ 0x24
};
 8001722:	bf00      	nop
 8001724:	3710      	adds	r7, #16
 8001726:	46bd      	mov	sp, r7
 8001728:	bd80      	pop	{r7, pc}
 800172a:	bf00      	nop
 800172c:	200000b8 	.word	0x200000b8
 8001730:	40023800 	.word	0x40023800
 8001734:	08005890 	.word	0x08005890
 8001738:	20000160 	.word	0x20000160

0800173c <Motor_UpFrequency>:

void Motor_UpFrequency(Motor *Motor_xx) {
 800173c:	b580      	push	{r7, lr}
 800173e:	b082      	sub	sp, #8
 8001740:	af00      	add	r7, sp, #0
 8001742:	6078      	str	r0, [r7, #4]
  if (Motor_xx->Status.Frequency < Motor_xx->Parameters.Frequency.Maximum) {
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	699b      	ldr	r3, [r3, #24]
 800174c:	429a      	cmp	r2, r3
 800174e:	d215      	bcs.n	800177c <Motor_UpFrequency+0x40>
    Motor_SetFrequency(
	  Motor_xx,
	  Motor_xx->Status.Frequency + Motor_xx->Parameters.Frequency.StepUp < Motor_xx->Parameters.Frequency.Maximum ?
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	699a      	ldr	r2, [r3, #24]
 8001754:	687b      	ldr	r3, [r7, #4]
 8001756:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	6a1b      	ldr	r3, [r3, #32]
 800175c:	440b      	add	r3, r1
    Motor_SetFrequency(
 800175e:	4293      	cmp	r3, r2
 8001760:	bf28      	it	cs
 8001762:	4613      	movcs	r3, r2
 8001764:	4619      	mov	r1, r3
 8001766:	6878      	ldr	r0, [r7, #4]
 8001768:	f7ff ff86 	bl	8001678 <Motor_SetFrequency>
	    Motor_xx->Status.Frequency + Motor_xx->Parameters.Frequency.StepUp :
	    Motor_xx->Parameters.Frequency.Maximum
	);
    HAL_TIM_PWM_Start(Motor_xx->Parameters.Timer.Number_timer, Motor_xx->Parameters.Timer.Channel);
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	691a      	ldr	r2, [r3, #16]
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	695b      	ldr	r3, [r3, #20]
 8001774:	4619      	mov	r1, r3
 8001776:	4610      	mov	r0, r2
 8001778:	f002 f868 	bl	800384c <HAL_TIM_PWM_Start>
  };
};
 800177c:	bf00      	nop
 800177e:	3708      	adds	r7, #8
 8001780:	46bd      	mov	sp, r7
 8001782:	bd80      	pop	{r7, pc}

08001784 <Motor_Start>:

void Motor_Start(Motor *Motor_xx) {
 8001784:	b580      	push	{r7, lr}
 8001786:	b084      	sub	sp, #16
 8001788:	af00      	add	r7, sp, #0
 800178a:	6078      	str	r0, [r7, #4]
  System_parameters *Setting_xx = &Motor_xx->Parameters;
 800178c:	687b      	ldr	r3, [r7, #4]
 800178e:	60fb      	str	r3, [r7, #12]

  Motor_SetFrequency(Motor_xx, Setting_xx->Frequency.Minimum);
 8001790:	68fb      	ldr	r3, [r7, #12]
 8001792:	69db      	ldr	r3, [r3, #28]
 8001794:	4619      	mov	r1, r3
 8001796:	6878      	ldr	r0, [r7, #4]
 8001798:	f7ff ff6e 	bl	8001678 <Motor_SetFrequency>
  HAL_TIM_PWM_Start(Setting_xx->Timer.Number_timer, Setting_xx->Timer.Channel);
 800179c:	68fb      	ldr	r3, [r7, #12]
 800179e:	691a      	ldr	r2, [r3, #16]
 80017a0:	68fb      	ldr	r3, [r7, #12]
 80017a2:	695b      	ldr	r3, [r3, #20]
 80017a4:	4619      	mov	r1, r3
 80017a6:	4610      	mov	r0, r2
 80017a8:	f002 f850 	bl	800384c <HAL_TIM_PWM_Start>
//    tmpsmcr = Number_xx->Instance->SMCR & TIM_SMCR_SMS;
//    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr)) __HAL_TIM_ENABLE(Number_xx);
//  }
//  else __HAL_TIM_ENABLE(Number_xx);

  Pin_SetLevl(&Setting_xx->Pins.ENA, Low);
 80017ac:	68fb      	ldr	r3, [r7, #12]
 80017ae:	2100      	movs	r1, #0
 80017b0:	4618      	mov	r0, r3
 80017b2:	f7ff ff29 	bl	8001608 <Pin_SetLevl>
  Motor_xx->Status.Functioning = Hight;
 80017b6:	687b      	ldr	r3, [r7, #4]
 80017b8:	2201      	movs	r2, #1
 80017ba:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
};
 80017be:	bf00      	nop
 80017c0:	3710      	adds	r7, #16
 80017c2:	46bd      	mov	sp, r7
 80017c4:	bd80      	pop	{r7, pc}

080017c6 <Motor_Stop>:
//  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET) __HAL_TIM_MOE_DISABLE(htim); /* Disable the Main Output */
//  __HAL_TIM_DISABLE(htim); /* Disable the Peripheral */
//  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY); /* Set the TIM channel state */
//}

void Motor_Stop(Motor *Motor_xx) {
 80017c6:	b580      	push	{r7, lr}
 80017c8:	b084      	sub	sp, #16
 80017ca:	af00      	add	r7, sp, #0
 80017cc:	6078      	str	r0, [r7, #4]
  System_parameters *Setting_xx = &Motor_xx->Parameters;
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	60fb      	str	r3, [r7, #12]

  Pin_SetLevl(&Setting_xx->Pins.ENA, Hight);
 80017d2:	68fb      	ldr	r3, [r7, #12]
 80017d4:	2101      	movs	r1, #1
 80017d6:	4618      	mov	r0, r3
 80017d8:	f7ff ff16 	bl	8001608 <Pin_SetLevl>
  Motor_SetFrequency(Motor_xx, Setting_xx->Frequency.Minimum);
 80017dc:	68fb      	ldr	r3, [r7, #12]
 80017de:	69db      	ldr	r3, [r3, #28]
 80017e0:	4619      	mov	r1, r3
 80017e2:	6878      	ldr	r0, [r7, #4]
 80017e4:	f7ff ff48 	bl	8001678 <Motor_SetFrequency>
  HAL_TIM_PWM_Stop(Setting_xx->Timer.Number_timer, Setting_xx->Timer.Channel);
 80017e8:	68fb      	ldr	r3, [r7, #12]
 80017ea:	691a      	ldr	r2, [r3, #16]
 80017ec:	68fb      	ldr	r3, [r7, #12]
 80017ee:	695b      	ldr	r3, [r3, #20]
 80017f0:	4619      	mov	r1, r3
 80017f2:	4610      	mov	r0, r2
 80017f4:	f002 f8f2 	bl	80039dc <HAL_TIM_PWM_Stop>
//  TIM_CCxChannelCmd(Setting_xx->Timer.Number->Instance, Setting_xx->Timer.Channel, TIM_CCx_DISABLE); /* Disable the Capture compare channel */
//  if (IS_TIM_BREAK_INSTANCE(Setting_xx->Timer.Number) != RESET) __HAL_TIM_MOE_DISABLE(Setting_xx->Timer.Number); /* Disable the Main Output */
//  __HAL_TIM_DISABLE(Setting_xx->Timer.Number); /* Disable the Peripheral */
//  TIM_CHANNEL_STATE_SET(Setting_xx->Timer.Number, Setting_xx->Timer.Channel, HAL_TIM_CHANNEL_STATE_READY); /* Set the TIM channel state */

  Motor_xx->Status.Functioning = Low;
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	2200      	movs	r2, #0
 80017fc:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
};
 8001800:	bf00      	nop
 8001802:	3710      	adds	r7, #16
 8001804:	46bd      	mov	sp, r7
 8001806:	bd80      	pop	{r7, pc}

08001808 <System_CheckLimit>:
Systems Systema_EL = {
  .Maximum = 90.0f,
  .Minimum = -20.0f
};

int System_CheckLimit(Systems *Systema_xx) {
 8001808:	b480      	push	{r7}
 800180a:	b087      	sub	sp, #28
 800180c:	af00      	add	r7, sp, #0
 800180e:	6078      	str	r0, [r7, #4]
  float lower_limit = Systema_xx->Minimum + 5.0f;
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	edd3 7a02 	vldr	s15, [r3, #8]
 8001816:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800181a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800181e:	edc7 7a05 	vstr	s15, [r7, #20]
  float upper_limit = Systema_xx->Maximum - 5.0f;
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	edd3 7a01 	vldr	s15, [r3, #4]
 8001828:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800182c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001830:	edc7 7a04 	vstr	s15, [r7, #16]

  /*
   * Не удалять так как значение угла может выйти за границы
   * В этом случае условие равенства границам нарушится
   * */
  float current_angle = CLAMP(Systema_xx->Actual_angular, lower_limit, upper_limit);
 8001834:	687b      	ldr	r3, [r7, #4]
 8001836:	edd3 7a00 	vldr	s15, [r3]
 800183a:	ed97 7a04 	vldr	s14, [r7, #16]
 800183e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001846:	dd03      	ble.n	8001850 <System_CheckLimit+0x48>
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	edd3 7a00 	vldr	s15, [r3]
 800184e:	e001      	b.n	8001854 <System_CheckLimit+0x4c>
 8001850:	edd7 7a04 	vldr	s15, [r7, #16]
 8001854:	ed97 7a05 	vldr	s14, [r7, #20]
 8001858:	eef4 7ac7 	vcmpe.f32	s15, s14
 800185c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001860:	d501      	bpl.n	8001866 <System_CheckLimit+0x5e>
 8001862:	697b      	ldr	r3, [r7, #20]
 8001864:	e00d      	b.n	8001882 <System_CheckLimit+0x7a>
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	edd3 7a00 	vldr	s15, [r3]
 800186c:	ed97 7a04 	vldr	s14, [r7, #16]
 8001870:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001874:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001878:	dd02      	ble.n	8001880 <System_CheckLimit+0x78>
 800187a:	687b      	ldr	r3, [r7, #4]
 800187c:	681b      	ldr	r3, [r3, #0]
 800187e:	e000      	b.n	8001882 <System_CheckLimit+0x7a>
 8001880:	693b      	ldr	r3, [r7, #16]
 8001882:	60fb      	str	r3, [r7, #12]
  return
    (current_angle != lower_limit) && (current_angle != upper_limit) ?
      Hight:
 8001884:	ed97 7a03 	vldr	s14, [r7, #12]
 8001888:	edd7 7a05 	vldr	s15, [r7, #20]
 800188c:	eeb4 7a67 	vcmp.f32	s14, s15
 8001890:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001894:	d00a      	beq.n	80018ac <System_CheckLimit+0xa4>
 8001896:	ed97 7a03 	vldr	s14, [r7, #12]
 800189a:	edd7 7a04 	vldr	s15, [r7, #16]
 800189e:	eeb4 7a67 	vcmp.f32	s14, s15
 80018a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80018a6:	d001      	beq.n	80018ac <System_CheckLimit+0xa4>
 80018a8:	2301      	movs	r3, #1
 80018aa:	e000      	b.n	80018ae <System_CheckLimit+0xa6>
 80018ac:	2300      	movs	r3, #0
	  Low;
};
 80018ae:	4618      	mov	r0, r3
 80018b0:	371c      	adds	r7, #28
 80018b2:	46bd      	mov	sp, r7
 80018b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018b8:	4770      	bx	lr
	...

080018bc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80018bc:	b580      	push	{r7, lr}
 80018be:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN 1 */
  Motor_AZ.Parameters.Timer.Number_timer = &htim3;
 80018c0:	4b7d      	ldr	r3, [pc, #500]	@ (8001ab8 <main+0x1fc>)
 80018c2:	4a7e      	ldr	r2, [pc, #504]	@ (8001abc <main+0x200>)
 80018c4:	611a      	str	r2, [r3, #16]
  Motor_AZ.Parameters.Timer.Channel = TIM_CHANNEL_1;
 80018c6:	4b7c      	ldr	r3, [pc, #496]	@ (8001ab8 <main+0x1fc>)
 80018c8:	2200      	movs	r2, #0
 80018ca:	615a      	str	r2, [r3, #20]
  Motor_EL.Parameters.Timer.Number_timer = &htim2;
 80018cc:	4b7c      	ldr	r3, [pc, #496]	@ (8001ac0 <main+0x204>)
 80018ce:	4a7d      	ldr	r2, [pc, #500]	@ (8001ac4 <main+0x208>)
 80018d0:	611a      	str	r2, [r3, #16]
  Motor_EL.Parameters.Timer.Channel = TIM_CHANNEL_1;
 80018d2:	4b7b      	ldr	r3, [pc, #492]	@ (8001ac0 <main+0x204>)
 80018d4:	2200      	movs	r2, #0
 80018d6:	615a      	str	r2, [r3, #20]

  Encoder_AZ.Timer_number = &htim8;
 80018d8:	4b7b      	ldr	r3, [pc, #492]	@ (8001ac8 <main+0x20c>)
 80018da:	4a7c      	ldr	r2, [pc, #496]	@ (8001acc <main+0x210>)
 80018dc:	601a      	str	r2, [r3, #0]
  Encoder_EL.Timer_number = &htim4;
 80018de:	4b7c      	ldr	r3, [pc, #496]	@ (8001ad0 <main+0x214>)
 80018e0:	4a7c      	ldr	r2, [pc, #496]	@ (8001ad4 <main+0x218>)
 80018e2:	601a      	str	r2, [r3, #0]

  RP_message.UART_port = &huart2;
 80018e4:	4b7c      	ldr	r3, [pc, #496]	@ (8001ad8 <main+0x21c>)
 80018e6:	4a7d      	ldr	r2, [pc, #500]	@ (8001adc <main+0x220>)
 80018e8:	601a      	str	r2, [r3, #0]
  Size_Rx_UART = sizeof(RP_message.Rx_data);
 80018ea:	4b7d      	ldr	r3, [pc, #500]	@ (8001ae0 <main+0x224>)
 80018ec:	2215      	movs	r2, #21
 80018ee:	601a      	str	r2, [r3, #0]
  Size_Tx_UART = sizeof(RP_message.Tx_data);
 80018f0:	4b7c      	ldr	r3, [pc, #496]	@ (8001ae4 <main+0x228>)
 80018f2:	220d      	movs	r2, #13
 80018f4:	601a      	str	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80018f6:	f000 fed1 	bl	800269c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80018fa:	f000 f909 	bl	8001b10 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80018fe:	f000 fb8f 	bl	8002020 <MX_GPIO_Init>
  MX_TIM2_Init();
 8001902:	f000 f96f 	bl	8001be4 <MX_TIM2_Init>
  MX_TIM3_Init();
 8001906:	f000 f9c5 	bl	8001c94 <MX_TIM3_Init>
  MX_TIM4_Init();
 800190a:	f000 fa1d 	bl	8001d48 <MX_TIM4_Init>
  MX_USART2_UART_Init();
 800190e:	f000 fb5d 	bl	8001fcc <MX_USART2_UART_Init>
  MX_TIM8_Init();
 8001912:	f000 fae9 	bl	8001ee8 <MX_TIM8_Init>
  MX_TIM5_Init();
 8001916:	f000 fa87 	bl	8001e28 <MX_TIM5_Init>

  Encoder_Init(&Encoder_AZ);
 800191a:	486b      	ldr	r0, [pc, #428]	@ (8001ac8 <main+0x20c>)
 800191c:	f7ff fa76 	bl	8000e0c <Encoder_Init>
  Encoder_Init(&Encoder_EL);
 8001920:	486b      	ldr	r0, [pc, #428]	@ (8001ad0 <main+0x214>)
 8001922:	f7ff fa73 	bl	8000e0c <Encoder_Init>

  Motor_AZ.Status.Tik[0] = htim5.Instance->CNT;
 8001926:	4b70      	ldr	r3, [pc, #448]	@ (8001ae8 <main+0x22c>)
 8001928:	681b      	ldr	r3, [r3, #0]
 800192a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800192c:	4a62      	ldr	r2, [pc, #392]	@ (8001ab8 <main+0x1fc>)
 800192e:	62d3      	str	r3, [r2, #44]	@ 0x2c
  Motor_EL.Status.Tik[0] = htim5.Instance->CNT;
 8001930:	4b6d      	ldr	r3, [pc, #436]	@ (8001ae8 <main+0x22c>)
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001936:	4a62      	ldr	r2, [pc, #392]	@ (8001ac0 <main+0x204>)
 8001938:	62d3      	str	r3, [r2, #44]	@ 0x2c

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	Encoder_GetAngular(&Encoder_AZ);
 800193a:	4863      	ldr	r0, [pc, #396]	@ (8001ac8 <main+0x20c>)
 800193c:	f7ff fab6 	bl	8000eac <Encoder_GetAngular>
    Encoder_GetAngular(&Encoder_EL);
 8001940:	4863      	ldr	r0, [pc, #396]	@ (8001ad0 <main+0x214>)
 8001942:	f7ff fab3 	bl	8000eac <Encoder_GetAngular>

	if (System_CheckLimit(&Systema_AZ) && System_CheckLimit(&Systema_EL)) {
 8001946:	4869      	ldr	r0, [pc, #420]	@ (8001aec <main+0x230>)
 8001948:	f7ff ff5e 	bl	8001808 <System_CheckLimit>
 800194c:	4603      	mov	r3, r0
 800194e:	2b00      	cmp	r3, #0
 8001950:	d026      	beq.n	80019a0 <main+0xe4>
 8001952:	4867      	ldr	r0, [pc, #412]	@ (8001af0 <main+0x234>)
 8001954:	f7ff ff58 	bl	8001808 <System_CheckLimit>
 8001958:	4603      	mov	r3, r0
 800195a:	2b00      	cmp	r3, #0
 800195c:	d020      	beq.n	80019a0 <main+0xe4>
	  switch (RP_message.Rx_data[15]) {
 800195e:	4b5e      	ldr	r3, [pc, #376]	@ (8001ad8 <main+0x21c>)
 8001960:	7d1b      	ldrb	r3, [r3, #20]
 8001962:	2b32      	cmp	r3, #50	@ 0x32
 8001964:	d014      	beq.n	8001990 <main+0xd4>
 8001966:	2b32      	cmp	r3, #50	@ 0x32
 8001968:	dc26      	bgt.n	80019b8 <main+0xfc>
 800196a:	2b30      	cmp	r3, #48	@ 0x30
 800196c:	d002      	beq.n	8001974 <main+0xb8>
 800196e:	2b31      	cmp	r3, #49	@ 0x31
 8001970:	d007      	beq.n	8001982 <main+0xc6>
 8001972:	e021      	b.n	80019b8 <main+0xfc>
	    case '0':
	      Mode_Manual(&Motor_AZ);
 8001974:	4850      	ldr	r0, [pc, #320]	@ (8001ab8 <main+0x1fc>)
 8001976:	f7ff faf9 	bl	8000f6c <Mode_Manual>
	      Mode_Manual(&Motor_EL);
 800197a:	4851      	ldr	r0, [pc, #324]	@ (8001ac0 <main+0x204>)
 800197c:	f7ff faf6 	bl	8000f6c <Mode_Manual>
		  break;
 8001980:	e00d      	b.n	800199e <main+0xe2>
	    case '1':
	      Mode_Semi_automatic(&Motor_AZ);
 8001982:	484d      	ldr	r0, [pc, #308]	@ (8001ab8 <main+0x1fc>)
 8001984:	f7ff fb64 	bl	8001050 <Mode_Semi_automatic>
	      Mode_Semi_automatic(&Motor_EL);
 8001988:	484d      	ldr	r0, [pc, #308]	@ (8001ac0 <main+0x204>)
 800198a:	f7ff fb61 	bl	8001050 <Mode_Semi_automatic>
	      break;
 800198e:	e006      	b.n	800199e <main+0xe2>
	    case '2':
	      Mode_Automatic(&Motor_AZ);
 8001990:	4849      	ldr	r0, [pc, #292]	@ (8001ab8 <main+0x1fc>)
 8001992:	f7ff fc31 	bl	80011f8 <Mode_Automatic>
	      Mode_Automatic(&Motor_EL);
 8001996:	484a      	ldr	r0, [pc, #296]	@ (8001ac0 <main+0x204>)
 8001998:	f7ff fc2e 	bl	80011f8 <Mode_Automatic>
	      break;
 800199c:	bf00      	nop
	  switch (RP_message.Rx_data[15]) {
 800199e:	e00b      	b.n	80019b8 <main+0xfc>
	  };
	} else {
	  Motor_Stop(&Motor_AZ);
 80019a0:	4845      	ldr	r0, [pc, #276]	@ (8001ab8 <main+0x1fc>)
 80019a2:	f7ff ff10 	bl	80017c6 <Motor_Stop>
	  Motor_Stop(&Motor_EL);
 80019a6:	4846      	ldr	r0, [pc, #280]	@ (8001ac0 <main+0x204>)
 80019a8:	f7ff ff0d 	bl	80017c6 <Motor_Stop>

	  Mode_Moving_away_from_borders(&Motor_AZ);
 80019ac:	4842      	ldr	r0, [pc, #264]	@ (8001ab8 <main+0x1fc>)
 80019ae:	f7ff fbdb 	bl	8001168 <Mode_Moving_away_from_borders>
	  Mode_Moving_away_from_borders(&Motor_EL);
 80019b2:	4843      	ldr	r0, [pc, #268]	@ (8001ac0 <main+0x204>)
 80019b4:	f7ff fbd8 	bl	8001168 <Mode_Moving_away_from_borders>
	};
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	Frequency_AZ = Motor_AZ.Status.Frequency;
 80019b8:	4b3f      	ldr	r3, [pc, #252]	@ (8001ab8 <main+0x1fc>)
 80019ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80019bc:	4a4d      	ldr	r2, [pc, #308]	@ (8001af4 <main+0x238>)
 80019be:	6013      	str	r3, [r2, #0]
	Frequency_EL = Motor_EL.Status.Frequency;
 80019c0:	4b3f      	ldr	r3, [pc, #252]	@ (8001ac0 <main+0x204>)
 80019c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80019c4:	4a4c      	ldr	r2, [pc, #304]	@ (8001af8 <main+0x23c>)
 80019c6:	6013      	str	r3, [r2, #0]
	Angular_AZ = Systema_AZ.Actual_angular;
 80019c8:	4b48      	ldr	r3, [pc, #288]	@ (8001aec <main+0x230>)
 80019ca:	681b      	ldr	r3, [r3, #0]
 80019cc:	4a4b      	ldr	r2, [pc, #300]	@ (8001afc <main+0x240>)
 80019ce:	6013      	str	r3, [r2, #0]
	Angular_EL = Systema_EL.Actual_angular;
 80019d0:	4b47      	ldr	r3, [pc, #284]	@ (8001af0 <main+0x234>)
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	4a4a      	ldr	r2, [pc, #296]	@ (8001b00 <main+0x244>)
 80019d6:	6013      	str	r3, [r2, #0]
	Error_AZ = abs(RP_message.Azimuth - Systema_AZ.Actual_angular);
 80019d8:	4b3f      	ldr	r3, [pc, #252]	@ (8001ad8 <main+0x21c>)
 80019da:	ed93 7a0a 	vldr	s14, [r3, #40]	@ 0x28
 80019de:	4b43      	ldr	r3, [pc, #268]	@ (8001aec <main+0x230>)
 80019e0:	edd3 7a00 	vldr	s15, [r3]
 80019e4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80019e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80019ec:	ee17 3a90 	vmov	r3, s15
 80019f0:	2b00      	cmp	r3, #0
 80019f2:	bfb8      	it	lt
 80019f4:	425b      	neglt	r3, r3
 80019f6:	ee07 3a90 	vmov	s15, r3
 80019fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80019fe:	4b41      	ldr	r3, [pc, #260]	@ (8001b04 <main+0x248>)
 8001a00:	edc3 7a00 	vstr	s15, [r3]
	Error_EL = abs(RP_message.Elevation - Systema_EL.Actual_angular);
 8001a04:	4b34      	ldr	r3, [pc, #208]	@ (8001ad8 <main+0x21c>)
 8001a06:	ed93 7a0b 	vldr	s14, [r3, #44]	@ 0x2c
 8001a0a:	4b39      	ldr	r3, [pc, #228]	@ (8001af0 <main+0x234>)
 8001a0c:	edd3 7a00 	vldr	s15, [r3]
 8001a10:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001a18:	ee17 3a90 	vmov	r3, s15
 8001a1c:	2b00      	cmp	r3, #0
 8001a1e:	bfb8      	it	lt
 8001a20:	425b      	neglt	r3, r3
 8001a22:	ee07 3a90 	vmov	s15, r3
 8001a26:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a2a:	4b37      	ldr	r3, [pc, #220]	@ (8001b08 <main+0x24c>)
 8001a2c:	edc3 7a00 	vstr	s15, [r3]

	RP_message.Rx_data[0] = 'A';  RP_message.Rx_data[1] = 'z';
 8001a30:	4b29      	ldr	r3, [pc, #164]	@ (8001ad8 <main+0x21c>)
 8001a32:	2241      	movs	r2, #65	@ 0x41
 8001a34:	715a      	strb	r2, [r3, #5]
 8001a36:	4b28      	ldr	r3, [pc, #160]	@ (8001ad8 <main+0x21c>)
 8001a38:	227a      	movs	r2, #122	@ 0x7a
 8001a3a:	719a      	strb	r2, [r3, #6]
	RP_message.Rx_data[2] = '+'; RP_message.Rx_data[3] = '0'; RP_message.Rx_data[4] = '0'; RP_message.Rx_data[5] = '5'; /*,*/ RP_message.Rx_data[6] = '0';
 8001a3c:	4b26      	ldr	r3, [pc, #152]	@ (8001ad8 <main+0x21c>)
 8001a3e:	222b      	movs	r2, #43	@ 0x2b
 8001a40:	71da      	strb	r2, [r3, #7]
 8001a42:	4b25      	ldr	r3, [pc, #148]	@ (8001ad8 <main+0x21c>)
 8001a44:	2230      	movs	r2, #48	@ 0x30
 8001a46:	721a      	strb	r2, [r3, #8]
 8001a48:	4b23      	ldr	r3, [pc, #140]	@ (8001ad8 <main+0x21c>)
 8001a4a:	2230      	movs	r2, #48	@ 0x30
 8001a4c:	725a      	strb	r2, [r3, #9]
 8001a4e:	4b22      	ldr	r3, [pc, #136]	@ (8001ad8 <main+0x21c>)
 8001a50:	2235      	movs	r2, #53	@ 0x35
 8001a52:	729a      	strb	r2, [r3, #10]
 8001a54:	4b20      	ldr	r3, [pc, #128]	@ (8001ad8 <main+0x21c>)
 8001a56:	2230      	movs	r2, #48	@ 0x30
 8001a58:	72da      	strb	r2, [r3, #11]

	RP_message.Rx_data[7] = 'E';  RP_message.Rx_data[8] = 'l';
 8001a5a:	4b1f      	ldr	r3, [pc, #124]	@ (8001ad8 <main+0x21c>)
 8001a5c:	2245      	movs	r2, #69	@ 0x45
 8001a5e:	731a      	strb	r2, [r3, #12]
 8001a60:	4b1d      	ldr	r3, [pc, #116]	@ (8001ad8 <main+0x21c>)
 8001a62:	226c      	movs	r2, #108	@ 0x6c
 8001a64:	735a      	strb	r2, [r3, #13]
	RP_message.Rx_data[9] = '-'; RP_message.Rx_data[10] = '0'; RP_message.Rx_data[11] = '0'; RP_message.Rx_data[12] = '5'; /*,*/ RP_message.Rx_data[13] = '0';
 8001a66:	4b1c      	ldr	r3, [pc, #112]	@ (8001ad8 <main+0x21c>)
 8001a68:	222d      	movs	r2, #45	@ 0x2d
 8001a6a:	739a      	strb	r2, [r3, #14]
 8001a6c:	4b1a      	ldr	r3, [pc, #104]	@ (8001ad8 <main+0x21c>)
 8001a6e:	2230      	movs	r2, #48	@ 0x30
 8001a70:	73da      	strb	r2, [r3, #15]
 8001a72:	4b19      	ldr	r3, [pc, #100]	@ (8001ad8 <main+0x21c>)
 8001a74:	2230      	movs	r2, #48	@ 0x30
 8001a76:	741a      	strb	r2, [r3, #16]
 8001a78:	4b17      	ldr	r3, [pc, #92]	@ (8001ad8 <main+0x21c>)
 8001a7a:	2235      	movs	r2, #53	@ 0x35
 8001a7c:	745a      	strb	r2, [r3, #17]
 8001a7e:	4b16      	ldr	r3, [pc, #88]	@ (8001ad8 <main+0x21c>)
 8001a80:	2230      	movs	r2, #48	@ 0x30
 8001a82:	749a      	strb	r2, [r3, #18]

	RP_message.Rx_data[14] = 'M';
 8001a84:	4b14      	ldr	r3, [pc, #80]	@ (8001ad8 <main+0x21c>)
 8001a86:	224d      	movs	r2, #77	@ 0x4d
 8001a88:	74da      	strb	r2, [r3, #19]
	RP_message.Rx_data[15] = '0';
 8001a8a:	4b13      	ldr	r3, [pc, #76]	@ (8001ad8 <main+0x21c>)
 8001a8c:	2230      	movs	r2, #48	@ 0x30
 8001a8e:	751a      	strb	r2, [r3, #20]

	RP_message.Rx_data[16] = 'F';
 8001a90:	4b11      	ldr	r3, [pc, #68]	@ (8001ad8 <main+0x21c>)
 8001a92:	2246      	movs	r2, #70	@ 0x46
 8001a94:	755a      	strb	r2, [r3, #21]
	RP_message.Rx_data[17] = '0';
 8001a96:	4b10      	ldr	r3, [pc, #64]	@ (8001ad8 <main+0x21c>)
 8001a98:	2230      	movs	r2, #48	@ 0x30
 8001a9a:	759a      	strb	r2, [r3, #22]

	RP_message.Rx_data[18] = '\r'; RP_message.Rx_data[19] = '\n'; RP_message.Rx_data[20] = '\0';
 8001a9c:	4b0e      	ldr	r3, [pc, #56]	@ (8001ad8 <main+0x21c>)
 8001a9e:	220d      	movs	r2, #13
 8001aa0:	75da      	strb	r2, [r3, #23]
 8001aa2:	4b0d      	ldr	r3, [pc, #52]	@ (8001ad8 <main+0x21c>)
 8001aa4:	220a      	movs	r2, #10
 8001aa6:	761a      	strb	r2, [r3, #24]
 8001aa8:	4b0b      	ldr	r3, [pc, #44]	@ (8001ad8 <main+0x21c>)
 8001aaa:	2200      	movs	r2, #0
 8001aac:	765a      	strb	r2, [r3, #25]
	Raspberry_DatPpars(RP_message.Rx_data);
 8001aae:	4817      	ldr	r0, [pc, #92]	@ (8001b0c <main+0x250>)
 8001ab0:	f7ff fd16 	bl	80014e0 <Raspberry_DatPpars>
	Encoder_GetAngular(&Encoder_AZ);
 8001ab4:	e741      	b.n	800193a <main+0x7e>
 8001ab6:	bf00      	nop
 8001ab8:	20000038 	.word	0x20000038
 8001abc:	200001ac 	.word	0x200001ac
 8001ac0:	2000006c 	.word	0x2000006c
 8001ac4:	20000164 	.word	0x20000164
 8001ac8:	20000000 	.word	0x20000000
 8001acc:	20000284 	.word	0x20000284
 8001ad0:	20000008 	.word	0x20000008
 8001ad4:	200001f4 	.word	0x200001f4
 8001ad8:	20000130 	.word	0x20000130
 8001adc:	200002cc 	.word	0x200002cc
 8001ae0:	20000314 	.word	0x20000314
 8001ae4:	20000318 	.word	0x20000318
 8001ae8:	2000023c 	.word	0x2000023c
 8001aec:	200000a0 	.word	0x200000a0
 8001af0:	200000ac 	.word	0x200000ac
 8001af4:	2000031c 	.word	0x2000031c
 8001af8:	20000320 	.word	0x20000320
 8001afc:	20000324 	.word	0x20000324
 8001b00:	20000328 	.word	0x20000328
 8001b04:	2000032c 	.word	0x2000032c
 8001b08:	20000330 	.word	0x20000330
 8001b0c:	20000135 	.word	0x20000135

08001b10 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001b10:	b580      	push	{r7, lr}
 8001b12:	b094      	sub	sp, #80	@ 0x50
 8001b14:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001b16:	f107 0320 	add.w	r3, r7, #32
 8001b1a:	2230      	movs	r2, #48	@ 0x30
 8001b1c:	2100      	movs	r1, #0
 8001b1e:	4618      	mov	r0, r3
 8001b20:	f003 fd6e 	bl	8005600 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001b24:	f107 030c 	add.w	r3, r7, #12
 8001b28:	2200      	movs	r2, #0
 8001b2a:	601a      	str	r2, [r3, #0]
 8001b2c:	605a      	str	r2, [r3, #4]
 8001b2e:	609a      	str	r2, [r3, #8]
 8001b30:	60da      	str	r2, [r3, #12]
 8001b32:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b34:	2300      	movs	r3, #0
 8001b36:	60bb      	str	r3, [r7, #8]
 8001b38:	4b28      	ldr	r3, [pc, #160]	@ (8001bdc <SystemClock_Config+0xcc>)
 8001b3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b3c:	4a27      	ldr	r2, [pc, #156]	@ (8001bdc <SystemClock_Config+0xcc>)
 8001b3e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001b42:	6413      	str	r3, [r2, #64]	@ 0x40
 8001b44:	4b25      	ldr	r3, [pc, #148]	@ (8001bdc <SystemClock_Config+0xcc>)
 8001b46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b48:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001b4c:	60bb      	str	r3, [r7, #8]
 8001b4e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001b50:	2300      	movs	r3, #0
 8001b52:	607b      	str	r3, [r7, #4]
 8001b54:	4b22      	ldr	r3, [pc, #136]	@ (8001be0 <SystemClock_Config+0xd0>)
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	4a21      	ldr	r2, [pc, #132]	@ (8001be0 <SystemClock_Config+0xd0>)
 8001b5a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001b5e:	6013      	str	r3, [r2, #0]
 8001b60:	4b1f      	ldr	r3, [pc, #124]	@ (8001be0 <SystemClock_Config+0xd0>)
 8001b62:	681b      	ldr	r3, [r3, #0]
 8001b64:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001b68:	607b      	str	r3, [r7, #4]
 8001b6a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001b6c:	2301      	movs	r3, #1
 8001b6e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001b70:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001b74:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001b76:	2302      	movs	r3, #2
 8001b78:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001b7a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001b7e:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001b80:	2308      	movs	r3, #8
 8001b82:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001b84:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 8001b88:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001b8a:	2302      	movs	r3, #2
 8001b8c:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001b8e:	2304      	movs	r3, #4
 8001b90:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001b92:	f107 0320 	add.w	r3, r7, #32
 8001b96:	4618      	mov	r0, r3
 8001b98:	f001 f970 	bl	8002e7c <HAL_RCC_OscConfig>
 8001b9c:	4603      	mov	r3, r0
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d001      	beq.n	8001ba6 <SystemClock_Config+0x96>
  {
    Error_Handler();
 8001ba2:	f000 fafb 	bl	800219c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001ba6:	230f      	movs	r3, #15
 8001ba8:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001baa:	2302      	movs	r3, #2
 8001bac:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001bae:	2300      	movs	r3, #0
 8001bb0:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001bb2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8001bb6:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001bb8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001bbc:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001bbe:	f107 030c 	add.w	r3, r7, #12
 8001bc2:	2105      	movs	r1, #5
 8001bc4:	4618      	mov	r0, r3
 8001bc6:	f001 fbd1 	bl	800336c <HAL_RCC_ClockConfig>
 8001bca:	4603      	mov	r3, r0
 8001bcc:	2b00      	cmp	r3, #0
 8001bce:	d001      	beq.n	8001bd4 <SystemClock_Config+0xc4>
  {
    Error_Handler();
 8001bd0:	f000 fae4 	bl	800219c <Error_Handler>
  }
}
 8001bd4:	bf00      	nop
 8001bd6:	3750      	adds	r7, #80	@ 0x50
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	bd80      	pop	{r7, pc}
 8001bdc:	40023800 	.word	0x40023800
 8001be0:	40007000 	.word	0x40007000

08001be4 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001be4:	b580      	push	{r7, lr}
 8001be6:	b08a      	sub	sp, #40	@ 0x28
 8001be8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001bea:	f107 0320 	add.w	r3, r7, #32
 8001bee:	2200      	movs	r2, #0
 8001bf0:	601a      	str	r2, [r3, #0]
 8001bf2:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001bf4:	1d3b      	adds	r3, r7, #4
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	601a      	str	r2, [r3, #0]
 8001bfa:	605a      	str	r2, [r3, #4]
 8001bfc:	609a      	str	r2, [r3, #8]
 8001bfe:	60da      	str	r2, [r3, #12]
 8001c00:	611a      	str	r2, [r3, #16]
 8001c02:	615a      	str	r2, [r3, #20]
 8001c04:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001c06:	4b22      	ldr	r3, [pc, #136]	@ (8001c90 <MX_TIM2_Init+0xac>)
 8001c08:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001c0c:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8001c0e:	4b20      	ldr	r3, [pc, #128]	@ (8001c90 <MX_TIM2_Init+0xac>)
 8001c10:	2200      	movs	r2, #0
 8001c12:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c14:	4b1e      	ldr	r3, [pc, #120]	@ (8001c90 <MX_TIM2_Init+0xac>)
 8001c16:	2200      	movs	r2, #0
 8001c18:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8001c1a:	4b1d      	ldr	r3, [pc, #116]	@ (8001c90 <MX_TIM2_Init+0xac>)
 8001c1c:	f04f 32ff 	mov.w	r2, #4294967295
 8001c20:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c22:	4b1b      	ldr	r3, [pc, #108]	@ (8001c90 <MX_TIM2_Init+0xac>)
 8001c24:	2200      	movs	r2, #0
 8001c26:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001c28:	4b19      	ldr	r3, [pc, #100]	@ (8001c90 <MX_TIM2_Init+0xac>)
 8001c2a:	2200      	movs	r2, #0
 8001c2c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001c2e:	4818      	ldr	r0, [pc, #96]	@ (8001c90 <MX_TIM2_Init+0xac>)
 8001c30:	f001 fdbc 	bl	80037ac <HAL_TIM_PWM_Init>
 8001c34:	4603      	mov	r3, r0
 8001c36:	2b00      	cmp	r3, #0
 8001c38:	d001      	beq.n	8001c3e <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 8001c3a:	f000 faaf 	bl	800219c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001c3e:	2300      	movs	r3, #0
 8001c40:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001c42:	2300      	movs	r3, #0
 8001c44:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001c46:	f107 0320 	add.w	r3, r7, #32
 8001c4a:	4619      	mov	r1, r3
 8001c4c:	4810      	ldr	r0, [pc, #64]	@ (8001c90 <MX_TIM2_Init+0xac>)
 8001c4e:	f002 fcc9 	bl	80045e4 <HAL_TIMEx_MasterConfigSynchronization>
 8001c52:	4603      	mov	r3, r0
 8001c54:	2b00      	cmp	r3, #0
 8001c56:	d001      	beq.n	8001c5c <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 8001c58:	f000 faa0 	bl	800219c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c5c:	2360      	movs	r3, #96	@ 0x60
 8001c5e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001c60:	2300      	movs	r3, #0
 8001c62:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001c64:	2300      	movs	r3, #0
 8001c66:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001c68:	2300      	movs	r3, #0
 8001c6a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c6c:	1d3b      	adds	r3, r7, #4
 8001c6e:	2200      	movs	r2, #0
 8001c70:	4619      	mov	r1, r3
 8001c72:	4807      	ldr	r0, [pc, #28]	@ (8001c90 <MX_TIM2_Init+0xac>)
 8001c74:	f002 f946 	bl	8003f04 <HAL_TIM_PWM_ConfigChannel>
 8001c78:	4603      	mov	r3, r0
 8001c7a:	2b00      	cmp	r3, #0
 8001c7c:	d001      	beq.n	8001c82 <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 8001c7e:	f000 fa8d 	bl	800219c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001c82:	4803      	ldr	r0, [pc, #12]	@ (8001c90 <MX_TIM2_Init+0xac>)
 8001c84:	f000 fbb6 	bl	80023f4 <HAL_TIM_MspPostInit>

}
 8001c88:	bf00      	nop
 8001c8a:	3728      	adds	r7, #40	@ 0x28
 8001c8c:	46bd      	mov	sp, r7
 8001c8e:	bd80      	pop	{r7, pc}
 8001c90:	20000164 	.word	0x20000164

08001c94 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001c94:	b580      	push	{r7, lr}
 8001c96:	b08a      	sub	sp, #40	@ 0x28
 8001c98:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001c9a:	f107 0320 	add.w	r3, r7, #32
 8001c9e:	2200      	movs	r2, #0
 8001ca0:	601a      	str	r2, [r3, #0]
 8001ca2:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ca4:	1d3b      	adds	r3, r7, #4
 8001ca6:	2200      	movs	r2, #0
 8001ca8:	601a      	str	r2, [r3, #0]
 8001caa:	605a      	str	r2, [r3, #4]
 8001cac:	609a      	str	r2, [r3, #8]
 8001cae:	60da      	str	r2, [r3, #12]
 8001cb0:	611a      	str	r2, [r3, #16]
 8001cb2:	615a      	str	r2, [r3, #20]
 8001cb4:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001cb6:	4b22      	ldr	r3, [pc, #136]	@ (8001d40 <MX_TIM3_Init+0xac>)
 8001cb8:	4a22      	ldr	r2, [pc, #136]	@ (8001d44 <MX_TIM3_Init+0xb0>)
 8001cba:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 8001cbc:	4b20      	ldr	r3, [pc, #128]	@ (8001d40 <MX_TIM3_Init+0xac>)
 8001cbe:	2200      	movs	r2, #0
 8001cc0:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001cc2:	4b1f      	ldr	r3, [pc, #124]	@ (8001d40 <MX_TIM3_Init+0xac>)
 8001cc4:	2200      	movs	r2, #0
 8001cc6:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8001cc8:	4b1d      	ldr	r3, [pc, #116]	@ (8001d40 <MX_TIM3_Init+0xac>)
 8001cca:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001cce:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001cd0:	4b1b      	ldr	r3, [pc, #108]	@ (8001d40 <MX_TIM3_Init+0xac>)
 8001cd2:	2200      	movs	r2, #0
 8001cd4:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001cd6:	4b1a      	ldr	r3, [pc, #104]	@ (8001d40 <MX_TIM3_Init+0xac>)
 8001cd8:	2200      	movs	r2, #0
 8001cda:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001cdc:	4818      	ldr	r0, [pc, #96]	@ (8001d40 <MX_TIM3_Init+0xac>)
 8001cde:	f001 fd65 	bl	80037ac <HAL_TIM_PWM_Init>
 8001ce2:	4603      	mov	r3, r0
 8001ce4:	2b00      	cmp	r3, #0
 8001ce6:	d001      	beq.n	8001cec <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 8001ce8:	f000 fa58 	bl	800219c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001cec:	2300      	movs	r3, #0
 8001cee:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001cf0:	2300      	movs	r3, #0
 8001cf2:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001cf4:	f107 0320 	add.w	r3, r7, #32
 8001cf8:	4619      	mov	r1, r3
 8001cfa:	4811      	ldr	r0, [pc, #68]	@ (8001d40 <MX_TIM3_Init+0xac>)
 8001cfc:	f002 fc72 	bl	80045e4 <HAL_TIMEx_MasterConfigSynchronization>
 8001d00:	4603      	mov	r3, r0
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	d001      	beq.n	8001d0a <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 8001d06:	f000 fa49 	bl	800219c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001d0a:	2360      	movs	r3, #96	@ 0x60
 8001d0c:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001d0e:	2300      	movs	r3, #0
 8001d10:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001d12:	2300      	movs	r3, #0
 8001d14:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001d16:	2300      	movs	r3, #0
 8001d18:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001d1a:	1d3b      	adds	r3, r7, #4
 8001d1c:	2200      	movs	r2, #0
 8001d1e:	4619      	mov	r1, r3
 8001d20:	4807      	ldr	r0, [pc, #28]	@ (8001d40 <MX_TIM3_Init+0xac>)
 8001d22:	f002 f8ef 	bl	8003f04 <HAL_TIM_PWM_ConfigChannel>
 8001d26:	4603      	mov	r3, r0
 8001d28:	2b00      	cmp	r3, #0
 8001d2a:	d001      	beq.n	8001d30 <MX_TIM3_Init+0x9c>
  {
    Error_Handler();
 8001d2c:	f000 fa36 	bl	800219c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8001d30:	4803      	ldr	r0, [pc, #12]	@ (8001d40 <MX_TIM3_Init+0xac>)
 8001d32:	f000 fb5f 	bl	80023f4 <HAL_TIM_MspPostInit>

}
 8001d36:	bf00      	nop
 8001d38:	3728      	adds	r7, #40	@ 0x28
 8001d3a:	46bd      	mov	sp, r7
 8001d3c:	bd80      	pop	{r7, pc}
 8001d3e:	bf00      	nop
 8001d40:	200001ac 	.word	0x200001ac
 8001d44:	40000400 	.word	0x40000400

08001d48 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8001d48:	b580      	push	{r7, lr}
 8001d4a:	b08c      	sub	sp, #48	@ 0x30
 8001d4c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8001d4e:	f107 030c 	add.w	r3, r7, #12
 8001d52:	2224      	movs	r2, #36	@ 0x24
 8001d54:	2100      	movs	r1, #0
 8001d56:	4618      	mov	r0, r3
 8001d58:	f003 fc52 	bl	8005600 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001d5c:	1d3b      	adds	r3, r7, #4
 8001d5e:	2200      	movs	r2, #0
 8001d60:	601a      	str	r2, [r3, #0]
 8001d62:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001d64:	4b2d      	ldr	r3, [pc, #180]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001d66:	4a2e      	ldr	r2, [pc, #184]	@ (8001e20 <MX_TIM4_Init+0xd8>)
 8001d68:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8001d6a:	4b2c      	ldr	r3, [pc, #176]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001d6c:	2200      	movs	r2, #0
 8001d6e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d70:	4b2a      	ldr	r3, [pc, #168]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001d72:	2200      	movs	r2, #0
 8001d74:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 2440;
 8001d76:	4b29      	ldr	r3, [pc, #164]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001d78:	f640 1288 	movw	r2, #2440	@ 0x988
 8001d7c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001d7e:	4b27      	ldr	r3, [pc, #156]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001d80:	2200      	movs	r2, #0
 8001d82:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001d84:	4b25      	ldr	r3, [pc, #148]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001d86:	2200      	movs	r2, #0
 8001d88:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8001d8a:	2303      	movs	r3, #3
 8001d8c:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8001d8e:	2300      	movs	r3, #0
 8001d90:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8001d92:	2301      	movs	r3, #1
 8001d94:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8001d96:	2300      	movs	r3, #0
 8001d98:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 15;
 8001d9a:	230f      	movs	r3, #15
 8001d9c:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8001d9e:	2300      	movs	r3, #0
 8001da0:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8001da2:	2301      	movs	r3, #1
 8001da4:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8001da6:	2300      	movs	r3, #0
 8001da8:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 15;
 8001daa:	230f      	movs	r3, #15
 8001dac:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 8001dae:	f107 030c 	add.w	r3, r7, #12
 8001db2:	4619      	mov	r1, r3
 8001db4:	4819      	ldr	r0, [pc, #100]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001db6:	f001 fe81 	bl	8003abc <HAL_TIM_Encoder_Init>
 8001dba:	4603      	mov	r3, r0
 8001dbc:	2b00      	cmp	r3, #0
 8001dbe:	d001      	beq.n	8001dc4 <MX_TIM4_Init+0x7c>
  {
    Error_Handler();
 8001dc0:	f000 f9ec 	bl	800219c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001dc4:	2300      	movs	r3, #0
 8001dc6:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001dc8:	2300      	movs	r3, #0
 8001dca:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001dcc:	1d3b      	adds	r3, r7, #4
 8001dce:	4619      	mov	r1, r3
 8001dd0:	4812      	ldr	r0, [pc, #72]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001dd2:	f002 fc07 	bl	80045e4 <HAL_TIMEx_MasterConfigSynchronization>
 8001dd6:	4603      	mov	r3, r0
 8001dd8:	2b00      	cmp	r3, #0
 8001dda:	d001      	beq.n	8001de0 <MX_TIM4_Init+0x98>
  {
    Error_Handler();
 8001ddc:	f000 f9de 	bl	800219c <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */
  htim4.Init.Period = Encoder_EL.Pulses_per_revolution * 4 + Encoder_EL.Safe_start_value * 2;
 8001de0:	4b10      	ldr	r3, [pc, #64]	@ (8001e24 <MX_TIM4_Init+0xdc>)
 8001de2:	889b      	ldrh	r3, [r3, #4]
 8001de4:	005b      	lsls	r3, r3, #1
 8001de6:	4a0f      	ldr	r2, [pc, #60]	@ (8001e24 <MX_TIM4_Init+0xdc>)
 8001de8:	88d2      	ldrh	r2, [r2, #6]
 8001dea:	4413      	add	r3, r2
 8001dec:	005b      	lsls	r3, r3, #1
 8001dee:	461a      	mov	r2, r3
 8001df0:	4b0a      	ldr	r3, [pc, #40]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001df2:	60da      	str	r2, [r3, #12]
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK) {Error_Handler();}
 8001df4:	f107 030c 	add.w	r3, r7, #12
 8001df8:	4619      	mov	r1, r3
 8001dfa:	4808      	ldr	r0, [pc, #32]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001dfc:	f001 fe5e 	bl	8003abc <HAL_TIM_Encoder_Init>
 8001e00:	4603      	mov	r3, r0
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	d001      	beq.n	8001e0a <MX_TIM4_Init+0xc2>
 8001e06:	f000 f9c9 	bl	800219c <Error_Handler>
  HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 8001e0a:	213c      	movs	r1, #60	@ 0x3c
 8001e0c:	4803      	ldr	r0, [pc, #12]	@ (8001e1c <MX_TIM4_Init+0xd4>)
 8001e0e:	f001 fefb 	bl	8003c08 <HAL_TIM_Encoder_Start>
  /* USER CODE END TIM4_Init 2 */

}
 8001e12:	bf00      	nop
 8001e14:	3730      	adds	r7, #48	@ 0x30
 8001e16:	46bd      	mov	sp, r7
 8001e18:	bd80      	pop	{r7, pc}
 8001e1a:	bf00      	nop
 8001e1c:	200001f4 	.word	0x200001f4
 8001e20:	40000800 	.word	0x40000800
 8001e24:	20000008 	.word	0x20000008

08001e28 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8001e28:	b580      	push	{r7, lr}
 8001e2a:	b08a      	sub	sp, #40	@ 0x28
 8001e2c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001e2e:	f107 0320 	add.w	r3, r7, #32
 8001e32:	2200      	movs	r2, #0
 8001e34:	601a      	str	r2, [r3, #0]
 8001e36:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001e38:	1d3b      	adds	r3, r7, #4
 8001e3a:	2200      	movs	r2, #0
 8001e3c:	601a      	str	r2, [r3, #0]
 8001e3e:	605a      	str	r2, [r3, #4]
 8001e40:	609a      	str	r2, [r3, #8]
 8001e42:	60da      	str	r2, [r3, #12]
 8001e44:	611a      	str	r2, [r3, #16]
 8001e46:	615a      	str	r2, [r3, #20]
 8001e48:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8001e4a:	4b24      	ldr	r3, [pc, #144]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001e4c:	4a24      	ldr	r2, [pc, #144]	@ (8001ee0 <MX_TIM5_Init+0xb8>)
 8001e4e:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 100;
 8001e50:	4b22      	ldr	r3, [pc, #136]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001e52:	2264      	movs	r2, #100	@ 0x64
 8001e54:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e56:	4b21      	ldr	r3, [pc, #132]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001e58:	2200      	movs	r2, #0
 8001e5a:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8001e5c:	4b1f      	ldr	r3, [pc, #124]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001e5e:	f04f 32ff 	mov.w	r2, #4294967295
 8001e62:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e64:	4b1d      	ldr	r3, [pc, #116]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001e66:	2200      	movs	r2, #0
 8001e68:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e6a:	4b1c      	ldr	r3, [pc, #112]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001e6c:	2200      	movs	r2, #0
 8001e6e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8001e70:	481a      	ldr	r0, [pc, #104]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001e72:	f001 fc9b 	bl	80037ac <HAL_TIM_PWM_Init>
 8001e76:	4603      	mov	r3, r0
 8001e78:	2b00      	cmp	r3, #0
 8001e7a:	d001      	beq.n	8001e80 <MX_TIM5_Init+0x58>
  {
    Error_Handler();
 8001e7c:	f000 f98e 	bl	800219c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001e80:	2300      	movs	r3, #0
 8001e82:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001e84:	2300      	movs	r3, #0
 8001e86:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001e88:	f107 0320 	add.w	r3, r7, #32
 8001e8c:	4619      	mov	r1, r3
 8001e8e:	4813      	ldr	r0, [pc, #76]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001e90:	f002 fba8 	bl	80045e4 <HAL_TIMEx_MasterConfigSynchronization>
 8001e94:	4603      	mov	r3, r0
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d001      	beq.n	8001e9e <MX_TIM5_Init+0x76>
  {
    Error_Handler();
 8001e9a:	f000 f97f 	bl	800219c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001e9e:	2360      	movs	r3, #96	@ 0x60
 8001ea0:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 2152533152;
 8001ea2:	4b10      	ldr	r3, [pc, #64]	@ (8001ee4 <MX_TIM5_Init+0xbc>)
 8001ea4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001ea6:	2300      	movs	r3, #0
 8001ea8:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001eaa:	2300      	movs	r3, #0
 8001eac:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001eae:	1d3b      	adds	r3, r7, #4
 8001eb0:	2200      	movs	r2, #0
 8001eb2:	4619      	mov	r1, r3
 8001eb4:	4809      	ldr	r0, [pc, #36]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001eb6:	f002 f825 	bl	8003f04 <HAL_TIM_PWM_ConfigChannel>
 8001eba:	4603      	mov	r3, r0
 8001ebc:	2b00      	cmp	r3, #0
 8001ebe:	d001      	beq.n	8001ec4 <MX_TIM5_Init+0x9c>
  {
    Error_Handler();
 8001ec0:	f000 f96c 	bl	800219c <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */
  HAL_TIM_PWM_Start(&htim5, TIM_CHANNEL_1);
 8001ec4:	2100      	movs	r1, #0
 8001ec6:	4805      	ldr	r0, [pc, #20]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001ec8:	f001 fcc0 	bl	800384c <HAL_TIM_PWM_Start>
  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
 8001ecc:	4803      	ldr	r0, [pc, #12]	@ (8001edc <MX_TIM5_Init+0xb4>)
 8001ece:	f000 fa91 	bl	80023f4 <HAL_TIM_MspPostInit>

}
 8001ed2:	bf00      	nop
 8001ed4:	3728      	adds	r7, #40	@ 0x28
 8001ed6:	46bd      	mov	sp, r7
 8001ed8:	bd80      	pop	{r7, pc}
 8001eda:	bf00      	nop
 8001edc:	2000023c 	.word	0x2000023c
 8001ee0:	40000c00 	.word	0x40000c00
 8001ee4:	804d0ca0 	.word	0x804d0ca0

08001ee8 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	b08c      	sub	sp, #48	@ 0x30
 8001eec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8001eee:	f107 030c 	add.w	r3, r7, #12
 8001ef2:	2224      	movs	r2, #36	@ 0x24
 8001ef4:	2100      	movs	r1, #0
 8001ef6:	4618      	mov	r0, r3
 8001ef8:	f003 fb82 	bl	8005600 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001efc:	1d3b      	adds	r3, r7, #4
 8001efe:	2200      	movs	r2, #0
 8001f00:	601a      	str	r2, [r3, #0]
 8001f02:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8001f04:	4b2e      	ldr	r3, [pc, #184]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001f06:	4a2f      	ldr	r2, [pc, #188]	@ (8001fc4 <MX_TIM8_Init+0xdc>)
 8001f08:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 8001f0a:	4b2d      	ldr	r3, [pc, #180]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001f0c:	2200      	movs	r2, #0
 8001f0e:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f10:	4b2b      	ldr	r3, [pc, #172]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001f12:	2200      	movs	r2, #0
 8001f14:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 8001f16:	4b2a      	ldr	r3, [pc, #168]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001f18:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001f1c:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f1e:	4b28      	ldr	r3, [pc, #160]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001f20:	2200      	movs	r2, #0
 8001f22:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 8001f24:	4b26      	ldr	r3, [pc, #152]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001f26:	2200      	movs	r2, #0
 8001f28:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f2a:	4b25      	ldr	r3, [pc, #148]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001f2c:	2200      	movs	r2, #0
 8001f2e:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8001f30:	2303      	movs	r3, #3
 8001f32:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8001f34:	2300      	movs	r3, #0
 8001f36:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8001f38:	2301      	movs	r3, #1
 8001f3a:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8001f3c:	2300      	movs	r3, #0
 8001f3e:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 15;
 8001f40:	230f      	movs	r3, #15
 8001f42:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8001f44:	2300      	movs	r3, #0
 8001f46:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8001f48:	2301      	movs	r3, #1
 8001f4a:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8001f4c:	2300      	movs	r3, #0
 8001f4e:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 8001f50:	2300      	movs	r3, #0
 8001f52:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK)
 8001f54:	f107 030c 	add.w	r3, r7, #12
 8001f58:	4619      	mov	r1, r3
 8001f5a:	4819      	ldr	r0, [pc, #100]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001f5c:	f001 fdae 	bl	8003abc <HAL_TIM_Encoder_Init>
 8001f60:	4603      	mov	r3, r0
 8001f62:	2b00      	cmp	r3, #0
 8001f64:	d001      	beq.n	8001f6a <MX_TIM8_Init+0x82>
  {
    Error_Handler();
 8001f66:	f000 f919 	bl	800219c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001f6a:	2300      	movs	r3, #0
 8001f6c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f6e:	2300      	movs	r3, #0
 8001f70:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8001f72:	1d3b      	adds	r3, r7, #4
 8001f74:	4619      	mov	r1, r3
 8001f76:	4812      	ldr	r0, [pc, #72]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001f78:	f002 fb34 	bl	80045e4 <HAL_TIMEx_MasterConfigSynchronization>
 8001f7c:	4603      	mov	r3, r0
 8001f7e:	2b00      	cmp	r3, #0
 8001f80:	d001      	beq.n	8001f86 <MX_TIM8_Init+0x9e>
  {
    Error_Handler();
 8001f82:	f000 f90b 	bl	800219c <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */
  htim8.Init.Period = Encoder_AZ.Pulses_per_revolution * 4 + Encoder_AZ.Safe_start_value * 2;
 8001f86:	4b10      	ldr	r3, [pc, #64]	@ (8001fc8 <MX_TIM8_Init+0xe0>)
 8001f88:	889b      	ldrh	r3, [r3, #4]
 8001f8a:	005b      	lsls	r3, r3, #1
 8001f8c:	4a0e      	ldr	r2, [pc, #56]	@ (8001fc8 <MX_TIM8_Init+0xe0>)
 8001f8e:	88d2      	ldrh	r2, [r2, #6]
 8001f90:	4413      	add	r3, r2
 8001f92:	005b      	lsls	r3, r3, #1
 8001f94:	461a      	mov	r2, r3
 8001f96:	4b0a      	ldr	r3, [pc, #40]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001f98:	60da      	str	r2, [r3, #12]
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK) {Error_Handler();}
 8001f9a:	f107 030c 	add.w	r3, r7, #12
 8001f9e:	4619      	mov	r1, r3
 8001fa0:	4807      	ldr	r0, [pc, #28]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001fa2:	f001 fd8b 	bl	8003abc <HAL_TIM_Encoder_Init>
 8001fa6:	4603      	mov	r3, r0
 8001fa8:	2b00      	cmp	r3, #0
 8001faa:	d001      	beq.n	8001fb0 <MX_TIM8_Init+0xc8>
 8001fac:	f000 f8f6 	bl	800219c <Error_Handler>
  HAL_TIM_Encoder_Start(&htim8, TIM_CHANNEL_ALL);
 8001fb0:	213c      	movs	r1, #60	@ 0x3c
 8001fb2:	4803      	ldr	r0, [pc, #12]	@ (8001fc0 <MX_TIM8_Init+0xd8>)
 8001fb4:	f001 fe28 	bl	8003c08 <HAL_TIM_Encoder_Start>
  /* USER CODE END TIM8_Init 2 */

}
 8001fb8:	bf00      	nop
 8001fba:	3730      	adds	r7, #48	@ 0x30
 8001fbc:	46bd      	mov	sp, r7
 8001fbe:	bd80      	pop	{r7, pc}
 8001fc0:	20000284 	.word	0x20000284
 8001fc4:	40010400 	.word	0x40010400
 8001fc8:	20000000 	.word	0x20000000

08001fcc <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001fcc:	b580      	push	{r7, lr}
 8001fce:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001fd0:	4b11      	ldr	r3, [pc, #68]	@ (8002018 <MX_USART2_UART_Init+0x4c>)
 8001fd2:	4a12      	ldr	r2, [pc, #72]	@ (800201c <MX_USART2_UART_Init+0x50>)
 8001fd4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 921600;
 8001fd6:	4b10      	ldr	r3, [pc, #64]	@ (8002018 <MX_USART2_UART_Init+0x4c>)
 8001fd8:	f44f 2261 	mov.w	r2, #921600	@ 0xe1000
 8001fdc:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001fde:	4b0e      	ldr	r3, [pc, #56]	@ (8002018 <MX_USART2_UART_Init+0x4c>)
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001fe4:	4b0c      	ldr	r3, [pc, #48]	@ (8002018 <MX_USART2_UART_Init+0x4c>)
 8001fe6:	2200      	movs	r2, #0
 8001fe8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001fea:	4b0b      	ldr	r3, [pc, #44]	@ (8002018 <MX_USART2_UART_Init+0x4c>)
 8001fec:	2200      	movs	r2, #0
 8001fee:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001ff0:	4b09      	ldr	r3, [pc, #36]	@ (8002018 <MX_USART2_UART_Init+0x4c>)
 8001ff2:	220c      	movs	r2, #12
 8001ff4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001ff6:	4b08      	ldr	r3, [pc, #32]	@ (8002018 <MX_USART2_UART_Init+0x4c>)
 8001ff8:	2200      	movs	r2, #0
 8001ffa:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001ffc:	4b06      	ldr	r3, [pc, #24]	@ (8002018 <MX_USART2_UART_Init+0x4c>)
 8001ffe:	2200      	movs	r2, #0
 8002000:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002002:	4805      	ldr	r0, [pc, #20]	@ (8002018 <MX_USART2_UART_Init+0x4c>)
 8002004:	f002 fb7e 	bl	8004704 <HAL_UART_Init>
 8002008:	4603      	mov	r3, r0
 800200a:	2b00      	cmp	r3, #0
 800200c:	d001      	beq.n	8002012 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800200e:	f000 f8c5 	bl	800219c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002012:	bf00      	nop
 8002014:	bd80      	pop	{r7, pc}
 8002016:	bf00      	nop
 8002018:	200002cc 	.word	0x200002cc
 800201c:	40004400 	.word	0x40004400

08002020 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002020:	b580      	push	{r7, lr}
 8002022:	b08c      	sub	sp, #48	@ 0x30
 8002024:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002026:	f107 031c 	add.w	r3, r7, #28
 800202a:	2200      	movs	r2, #0
 800202c:	601a      	str	r2, [r3, #0]
 800202e:	605a      	str	r2, [r3, #4]
 8002030:	609a      	str	r2, [r3, #8]
 8002032:	60da      	str	r2, [r3, #12]
 8002034:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002036:	2300      	movs	r3, #0
 8002038:	61bb      	str	r3, [r7, #24]
 800203a:	4b40      	ldr	r3, [pc, #256]	@ (800213c <MX_GPIO_Init+0x11c>)
 800203c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800203e:	4a3f      	ldr	r2, [pc, #252]	@ (800213c <MX_GPIO_Init+0x11c>)
 8002040:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002044:	6313      	str	r3, [r2, #48]	@ 0x30
 8002046:	4b3d      	ldr	r3, [pc, #244]	@ (800213c <MX_GPIO_Init+0x11c>)
 8002048:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800204a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800204e:	61bb      	str	r3, [r7, #24]
 8002050:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002052:	2300      	movs	r3, #0
 8002054:	617b      	str	r3, [r7, #20]
 8002056:	4b39      	ldr	r3, [pc, #228]	@ (800213c <MX_GPIO_Init+0x11c>)
 8002058:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800205a:	4a38      	ldr	r2, [pc, #224]	@ (800213c <MX_GPIO_Init+0x11c>)
 800205c:	f043 0301 	orr.w	r3, r3, #1
 8002060:	6313      	str	r3, [r2, #48]	@ 0x30
 8002062:	4b36      	ldr	r3, [pc, #216]	@ (800213c <MX_GPIO_Init+0x11c>)
 8002064:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002066:	f003 0301 	and.w	r3, r3, #1
 800206a:	617b      	str	r3, [r7, #20]
 800206c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800206e:	2300      	movs	r3, #0
 8002070:	613b      	str	r3, [r7, #16]
 8002072:	4b32      	ldr	r3, [pc, #200]	@ (800213c <MX_GPIO_Init+0x11c>)
 8002074:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002076:	4a31      	ldr	r2, [pc, #196]	@ (800213c <MX_GPIO_Init+0x11c>)
 8002078:	f043 0310 	orr.w	r3, r3, #16
 800207c:	6313      	str	r3, [r2, #48]	@ 0x30
 800207e:	4b2f      	ldr	r3, [pc, #188]	@ (800213c <MX_GPIO_Init+0x11c>)
 8002080:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002082:	f003 0310 	and.w	r3, r3, #16
 8002086:	613b      	str	r3, [r7, #16]
 8002088:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800208a:	2300      	movs	r3, #0
 800208c:	60fb      	str	r3, [r7, #12]
 800208e:	4b2b      	ldr	r3, [pc, #172]	@ (800213c <MX_GPIO_Init+0x11c>)
 8002090:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002092:	4a2a      	ldr	r2, [pc, #168]	@ (800213c <MX_GPIO_Init+0x11c>)
 8002094:	f043 0308 	orr.w	r3, r3, #8
 8002098:	6313      	str	r3, [r2, #48]	@ 0x30
 800209a:	4b28      	ldr	r3, [pc, #160]	@ (800213c <MX_GPIO_Init+0x11c>)
 800209c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800209e:	f003 0308 	and.w	r3, r3, #8
 80020a2:	60fb      	str	r3, [r7, #12]
 80020a4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80020a6:	2300      	movs	r3, #0
 80020a8:	60bb      	str	r3, [r7, #8]
 80020aa:	4b24      	ldr	r3, [pc, #144]	@ (800213c <MX_GPIO_Init+0x11c>)
 80020ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020ae:	4a23      	ldr	r2, [pc, #140]	@ (800213c <MX_GPIO_Init+0x11c>)
 80020b0:	f043 0304 	orr.w	r3, r3, #4
 80020b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80020b6:	4b21      	ldr	r3, [pc, #132]	@ (800213c <MX_GPIO_Init+0x11c>)
 80020b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020ba:	f003 0304 	and.w	r3, r3, #4
 80020be:	60bb      	str	r3, [r7, #8]
 80020c0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80020c2:	2300      	movs	r3, #0
 80020c4:	607b      	str	r3, [r7, #4]
 80020c6:	4b1d      	ldr	r3, [pc, #116]	@ (800213c <MX_GPIO_Init+0x11c>)
 80020c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020ca:	4a1c      	ldr	r2, [pc, #112]	@ (800213c <MX_GPIO_Init+0x11c>)
 80020cc:	f043 0302 	orr.w	r3, r3, #2
 80020d0:	6313      	str	r3, [r2, #48]	@ 0x30
 80020d2:	4b1a      	ldr	r3, [pc, #104]	@ (800213c <MX_GPIO_Init+0x11c>)
 80020d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020d6:	f003 0302 	and.w	r3, r3, #2
 80020da:	607b      	str	r3, [r7, #4]
 80020dc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_11|GPIO_PIN_12, GPIO_PIN_SET);
 80020de:	2201      	movs	r2, #1
 80020e0:	f44f 51d8 	mov.w	r1, #6912	@ 0x1b00
 80020e4:	4816      	ldr	r0, [pc, #88]	@ (8002140 <MX_GPIO_Init+0x120>)
 80020e6:	f000 feaf 	bl	8002e48 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 80020ea:	2200      	movs	r2, #0
 80020ec:	f44f 4170 	mov.w	r1, #61440	@ 0xf000
 80020f0:	4814      	ldr	r0, [pc, #80]	@ (8002144 <MX_GPIO_Init+0x124>)
 80020f2:	f000 fea9 	bl	8002e48 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PE8 PE9 PE11 PE12 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_11|GPIO_PIN_12;
 80020f6:	f44f 53d8 	mov.w	r3, #6912	@ 0x1b00
 80020fa:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80020fc:	2301      	movs	r3, #1
 80020fe:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002100:	2300      	movs	r3, #0
 8002102:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002104:	2303      	movs	r3, #3
 8002106:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002108:	f107 031c 	add.w	r3, r7, #28
 800210c:	4619      	mov	r1, r3
 800210e:	480c      	ldr	r0, [pc, #48]	@ (8002140 <MX_GPIO_Init+0x120>)
 8002110:	f000 fcfe 	bl	8002b10 <HAL_GPIO_Init>

  /*Configure GPIO pins : PD12 PD13 PD14 PD15 */
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 8002114:	f44f 4370 	mov.w	r3, #61440	@ 0xf000
 8002118:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800211a:	2301      	movs	r3, #1
 800211c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800211e:	2300      	movs	r3, #0
 8002120:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002122:	2303      	movs	r3, #3
 8002124:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002126:	f107 031c 	add.w	r3, r7, #28
 800212a:	4619      	mov	r1, r3
 800212c:	4805      	ldr	r0, [pc, #20]	@ (8002144 <MX_GPIO_Init+0x124>)
 800212e:	f000 fcef 	bl	8002b10 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8002132:	bf00      	nop
 8002134:	3730      	adds	r7, #48	@ 0x30
 8002136:	46bd      	mov	sp, r7
 8002138:	bd80      	pop	{r7, pc}
 800213a:	bf00      	nop
 800213c:	40023800 	.word	0x40023800
 8002140:	40021000 	.word	0x40021000
 8002144:	40020c00 	.word	0x40020c00

08002148 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8002148:	b580      	push	{r7, lr}
 800214a:	b082      	sub	sp, #8
 800214c:	af00      	add	r7, sp, #0
 800214e:	6078      	str	r0, [r7, #4]
	Raspberry_DatPpars(RP_message.Rx_data);
 8002150:	4807      	ldr	r0, [pc, #28]	@ (8002170 <HAL_UART_RxCpltCallback+0x28>)
 8002152:	f7ff f9c5 	bl	80014e0 <Raspberry_DatPpars>
	HAL_UART_Receive_IT(RP_message.UART_port, (uint8_t*)RP_message.Rx_data, Size_Rx_UART);
 8002156:	4b07      	ldr	r3, [pc, #28]	@ (8002174 <HAL_UART_RxCpltCallback+0x2c>)
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	4a07      	ldr	r2, [pc, #28]	@ (8002178 <HAL_UART_RxCpltCallback+0x30>)
 800215c:	6812      	ldr	r2, [r2, #0]
 800215e:	b292      	uxth	r2, r2
 8002160:	4903      	ldr	r1, [pc, #12]	@ (8002170 <HAL_UART_RxCpltCallback+0x28>)
 8002162:	4618      	mov	r0, r3
 8002164:	f002 fb1e 	bl	80047a4 <HAL_UART_Receive_IT>
};
 8002168:	bf00      	nop
 800216a:	3708      	adds	r7, #8
 800216c:	46bd      	mov	sp, r7
 800216e:	bd80      	pop	{r7, pc}
 8002170:	20000135 	.word	0x20000135
 8002174:	20000130 	.word	0x20000130
 8002178:	20000314 	.word	0x20000314

0800217c <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {RP_message.transmitting = 0;}
 800217c:	b480      	push	{r7}
 800217e:	b083      	sub	sp, #12
 8002180:	af00      	add	r7, sp, #0
 8002182:	6078      	str	r0, [r7, #4]
 8002184:	4b04      	ldr	r3, [pc, #16]	@ (8002198 <HAL_UART_TxCpltCallback+0x1c>)
 8002186:	2200      	movs	r2, #0
 8002188:	711a      	strb	r2, [r3, #4]
 800218a:	bf00      	nop
 800218c:	370c      	adds	r7, #12
 800218e:	46bd      	mov	sp, r7
 8002190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002194:	4770      	bx	lr
 8002196:	bf00      	nop
 8002198:	20000130 	.word	0x20000130

0800219c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800219c:	b580      	push	{r7, lr}
 800219e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET);
 80021a0:	2200      	movs	r2, #0
 80021a2:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80021a6:	4816      	ldr	r0, [pc, #88]	@ (8002200 <Error_Handler+0x64>)
 80021a8:	f000 fe4e 	bl	8002e48 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80021ac:	2200      	movs	r2, #0
 80021ae:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80021b2:	4813      	ldr	r0, [pc, #76]	@ (8002200 <Error_Handler+0x64>)
 80021b4:	f000 fe48 	bl	8002e48 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET);
 80021b8:	2200      	movs	r2, #0
 80021ba:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80021be:	4810      	ldr	r0, [pc, #64]	@ (8002200 <Error_Handler+0x64>)
 80021c0:	f000 fe42 	bl	8002e48 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_RESET);
 80021c4:	2200      	movs	r2, #0
 80021c6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80021ca:	480d      	ldr	r0, [pc, #52]	@ (8002200 <Error_Handler+0x64>)
 80021cc:	f000 fe3c 	bl	8002e48 <HAL_GPIO_WritePin>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80021d0:	b672      	cpsid	i
}
 80021d2:	bf00      	nop
  __disable_irq();
  while (1)
  {
    HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_SET);
 80021d4:	2201      	movs	r2, #1
 80021d6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80021da:	4809      	ldr	r0, [pc, #36]	@ (8002200 <Error_Handler+0x64>)
 80021dc:	f000 fe34 	bl	8002e48 <HAL_GPIO_WritePin>
    HAL_Delay(500);
 80021e0:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80021e4:	f000 facc 	bl	8002780 <HAL_Delay>
    HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_RESET);
 80021e8:	2200      	movs	r2, #0
 80021ea:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80021ee:	4804      	ldr	r0, [pc, #16]	@ (8002200 <Error_Handler+0x64>)
 80021f0:	f000 fe2a 	bl	8002e48 <HAL_GPIO_WritePin>
    HAL_Delay(500);
 80021f4:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80021f8:	f000 fac2 	bl	8002780 <HAL_Delay>
    HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_SET);
 80021fc:	bf00      	nop
 80021fe:	e7e9      	b.n	80021d4 <Error_Handler+0x38>
 8002200:	40020c00 	.word	0x40020c00

08002204 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002204:	b480      	push	{r7}
 8002206:	b083      	sub	sp, #12
 8002208:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800220a:	2300      	movs	r3, #0
 800220c:	607b      	str	r3, [r7, #4]
 800220e:	4b10      	ldr	r3, [pc, #64]	@ (8002250 <HAL_MspInit+0x4c>)
 8002210:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002212:	4a0f      	ldr	r2, [pc, #60]	@ (8002250 <HAL_MspInit+0x4c>)
 8002214:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002218:	6453      	str	r3, [r2, #68]	@ 0x44
 800221a:	4b0d      	ldr	r3, [pc, #52]	@ (8002250 <HAL_MspInit+0x4c>)
 800221c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800221e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002222:	607b      	str	r3, [r7, #4]
 8002224:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002226:	2300      	movs	r3, #0
 8002228:	603b      	str	r3, [r7, #0]
 800222a:	4b09      	ldr	r3, [pc, #36]	@ (8002250 <HAL_MspInit+0x4c>)
 800222c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800222e:	4a08      	ldr	r2, [pc, #32]	@ (8002250 <HAL_MspInit+0x4c>)
 8002230:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002234:	6413      	str	r3, [r2, #64]	@ 0x40
 8002236:	4b06      	ldr	r3, [pc, #24]	@ (8002250 <HAL_MspInit+0x4c>)
 8002238:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800223a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800223e:	603b      	str	r3, [r7, #0]
 8002240:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002242:	bf00      	nop
 8002244:	370c      	adds	r7, #12
 8002246:	46bd      	mov	sp, r7
 8002248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800224c:	4770      	bx	lr
 800224e:	bf00      	nop
 8002250:	40023800 	.word	0x40023800

08002254 <HAL_TIM_PWM_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_pwm: TIM_PWM handle pointer
  * @retval None
  */
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8002254:	b580      	push	{r7, lr}
 8002256:	b086      	sub	sp, #24
 8002258:	af00      	add	r7, sp, #0
 800225a:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM2)
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002264:	d10e      	bne.n	8002284 <HAL_TIM_PWM_MspInit+0x30>
  {
    /* USER CODE BEGIN TIM2_MspInit 0 */

    /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002266:	2300      	movs	r3, #0
 8002268:	617b      	str	r3, [r7, #20]
 800226a:	4b20      	ldr	r3, [pc, #128]	@ (80022ec <HAL_TIM_PWM_MspInit+0x98>)
 800226c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800226e:	4a1f      	ldr	r2, [pc, #124]	@ (80022ec <HAL_TIM_PWM_MspInit+0x98>)
 8002270:	f043 0301 	orr.w	r3, r3, #1
 8002274:	6413      	str	r3, [r2, #64]	@ 0x40
 8002276:	4b1d      	ldr	r3, [pc, #116]	@ (80022ec <HAL_TIM_PWM_MspInit+0x98>)
 8002278:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800227a:	f003 0301 	and.w	r3, r3, #1
 800227e:	617b      	str	r3, [r7, #20]
 8002280:	697b      	ldr	r3, [r7, #20]
    /* USER CODE BEGIN TIM5_MspInit 1 */

    /* USER CODE END TIM5_MspInit 1 */
  }

}
 8002282:	e02e      	b.n	80022e2 <HAL_TIM_PWM_MspInit+0x8e>
  else if(htim_pwm->Instance==TIM3)
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	4a19      	ldr	r2, [pc, #100]	@ (80022f0 <HAL_TIM_PWM_MspInit+0x9c>)
 800228a:	4293      	cmp	r3, r2
 800228c:	d10e      	bne.n	80022ac <HAL_TIM_PWM_MspInit+0x58>
    __HAL_RCC_TIM3_CLK_ENABLE();
 800228e:	2300      	movs	r3, #0
 8002290:	613b      	str	r3, [r7, #16]
 8002292:	4b16      	ldr	r3, [pc, #88]	@ (80022ec <HAL_TIM_PWM_MspInit+0x98>)
 8002294:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002296:	4a15      	ldr	r2, [pc, #84]	@ (80022ec <HAL_TIM_PWM_MspInit+0x98>)
 8002298:	f043 0302 	orr.w	r3, r3, #2
 800229c:	6413      	str	r3, [r2, #64]	@ 0x40
 800229e:	4b13      	ldr	r3, [pc, #76]	@ (80022ec <HAL_TIM_PWM_MspInit+0x98>)
 80022a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022a2:	f003 0302 	and.w	r3, r3, #2
 80022a6:	613b      	str	r3, [r7, #16]
 80022a8:	693b      	ldr	r3, [r7, #16]
}
 80022aa:	e01a      	b.n	80022e2 <HAL_TIM_PWM_MspInit+0x8e>
  else if(htim_pwm->Instance==TIM5)
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	4a10      	ldr	r2, [pc, #64]	@ (80022f4 <HAL_TIM_PWM_MspInit+0xa0>)
 80022b2:	4293      	cmp	r3, r2
 80022b4:	d115      	bne.n	80022e2 <HAL_TIM_PWM_MspInit+0x8e>
    __HAL_RCC_TIM5_CLK_ENABLE();
 80022b6:	2300      	movs	r3, #0
 80022b8:	60fb      	str	r3, [r7, #12]
 80022ba:	4b0c      	ldr	r3, [pc, #48]	@ (80022ec <HAL_TIM_PWM_MspInit+0x98>)
 80022bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022be:	4a0b      	ldr	r2, [pc, #44]	@ (80022ec <HAL_TIM_PWM_MspInit+0x98>)
 80022c0:	f043 0308 	orr.w	r3, r3, #8
 80022c4:	6413      	str	r3, [r2, #64]	@ 0x40
 80022c6:	4b09      	ldr	r3, [pc, #36]	@ (80022ec <HAL_TIM_PWM_MspInit+0x98>)
 80022c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022ca:	f003 0308 	and.w	r3, r3, #8
 80022ce:	60fb      	str	r3, [r7, #12]
 80022d0:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM5_IRQn, 0, 0);
 80022d2:	2200      	movs	r2, #0
 80022d4:	2100      	movs	r1, #0
 80022d6:	2032      	movs	r0, #50	@ 0x32
 80022d8:	f000 fb51 	bl	800297e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM5_IRQn);
 80022dc:	2032      	movs	r0, #50	@ 0x32
 80022de:	f000 fb6a 	bl	80029b6 <HAL_NVIC_EnableIRQ>
}
 80022e2:	bf00      	nop
 80022e4:	3718      	adds	r7, #24
 80022e6:	46bd      	mov	sp, r7
 80022e8:	bd80      	pop	{r7, pc}
 80022ea:	bf00      	nop
 80022ec:	40023800 	.word	0x40023800
 80022f0:	40000400 	.word	0x40000400
 80022f4:	40000c00 	.word	0x40000c00

080022f8 <HAL_TIM_Encoder_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_encoder: TIM_Encoder handle pointer
  * @retval None
  */
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 80022f8:	b580      	push	{r7, lr}
 80022fa:	b08c      	sub	sp, #48	@ 0x30
 80022fc:	af00      	add	r7, sp, #0
 80022fe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002300:	f107 031c 	add.w	r3, r7, #28
 8002304:	2200      	movs	r2, #0
 8002306:	601a      	str	r2, [r3, #0]
 8002308:	605a      	str	r2, [r3, #4]
 800230a:	609a      	str	r2, [r3, #8]
 800230c:	60da      	str	r2, [r3, #12]
 800230e:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM4)
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	681b      	ldr	r3, [r3, #0]
 8002314:	4a32      	ldr	r2, [pc, #200]	@ (80023e0 <HAL_TIM_Encoder_MspInit+0xe8>)
 8002316:	4293      	cmp	r3, r2
 8002318:	d12c      	bne.n	8002374 <HAL_TIM_Encoder_MspInit+0x7c>
  {
    /* USER CODE BEGIN TIM4_MspInit 0 */

    /* USER CODE END TIM4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 800231a:	2300      	movs	r3, #0
 800231c:	61bb      	str	r3, [r7, #24]
 800231e:	4b31      	ldr	r3, [pc, #196]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 8002320:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002322:	4a30      	ldr	r2, [pc, #192]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 8002324:	f043 0304 	orr.w	r3, r3, #4
 8002328:	6413      	str	r3, [r2, #64]	@ 0x40
 800232a:	4b2e      	ldr	r3, [pc, #184]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 800232c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800232e:	f003 0304 	and.w	r3, r3, #4
 8002332:	61bb      	str	r3, [r7, #24]
 8002334:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002336:	2300      	movs	r3, #0
 8002338:	617b      	str	r3, [r7, #20]
 800233a:	4b2a      	ldr	r3, [pc, #168]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 800233c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800233e:	4a29      	ldr	r2, [pc, #164]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 8002340:	f043 0302 	orr.w	r3, r3, #2
 8002344:	6313      	str	r3, [r2, #48]	@ 0x30
 8002346:	4b27      	ldr	r3, [pc, #156]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 8002348:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800234a:	f003 0302 	and.w	r3, r3, #2
 800234e:	617b      	str	r3, [r7, #20]
 8002350:	697b      	ldr	r3, [r7, #20]
    /**TIM4 GPIO Configuration
    PB6     ------> TIM4_CH1
    PB7     ------> TIM4_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002352:	23c0      	movs	r3, #192	@ 0xc0
 8002354:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002356:	2302      	movs	r3, #2
 8002358:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800235a:	2301      	movs	r3, #1
 800235c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800235e:	2303      	movs	r3, #3
 8002360:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8002362:	2302      	movs	r3, #2
 8002364:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002366:	f107 031c 	add.w	r3, r7, #28
 800236a:	4619      	mov	r1, r3
 800236c:	481e      	ldr	r0, [pc, #120]	@ (80023e8 <HAL_TIM_Encoder_MspInit+0xf0>)
 800236e:	f000 fbcf 	bl	8002b10 <HAL_GPIO_Init>
    /* USER CODE BEGIN TIM8_MspInit 1 */

    /* USER CODE END TIM8_MspInit 1 */
  }

}
 8002372:	e030      	b.n	80023d6 <HAL_TIM_Encoder_MspInit+0xde>
  else if(htim_encoder->Instance==TIM8)
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	4a1c      	ldr	r2, [pc, #112]	@ (80023ec <HAL_TIM_Encoder_MspInit+0xf4>)
 800237a:	4293      	cmp	r3, r2
 800237c:	d12b      	bne.n	80023d6 <HAL_TIM_Encoder_MspInit+0xde>
    __HAL_RCC_TIM8_CLK_ENABLE();
 800237e:	2300      	movs	r3, #0
 8002380:	613b      	str	r3, [r7, #16]
 8002382:	4b18      	ldr	r3, [pc, #96]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 8002384:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002386:	4a17      	ldr	r2, [pc, #92]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 8002388:	f043 0302 	orr.w	r3, r3, #2
 800238c:	6453      	str	r3, [r2, #68]	@ 0x44
 800238e:	4b15      	ldr	r3, [pc, #84]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 8002390:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002392:	f003 0302 	and.w	r3, r3, #2
 8002396:	613b      	str	r3, [r7, #16]
 8002398:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800239a:	2300      	movs	r3, #0
 800239c:	60fb      	str	r3, [r7, #12]
 800239e:	4b11      	ldr	r3, [pc, #68]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 80023a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023a2:	4a10      	ldr	r2, [pc, #64]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 80023a4:	f043 0304 	orr.w	r3, r3, #4
 80023a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80023aa:	4b0e      	ldr	r3, [pc, #56]	@ (80023e4 <HAL_TIM_Encoder_MspInit+0xec>)
 80023ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023ae:	f003 0304 	and.w	r3, r3, #4
 80023b2:	60fb      	str	r3, [r7, #12]
 80023b4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80023b6:	23c0      	movs	r3, #192	@ 0xc0
 80023b8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023ba:	2302      	movs	r3, #2
 80023bc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80023be:	2301      	movs	r3, #1
 80023c0:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023c2:	2303      	movs	r3, #3
 80023c4:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 80023c6:	2303      	movs	r3, #3
 80023c8:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023ca:	f107 031c 	add.w	r3, r7, #28
 80023ce:	4619      	mov	r1, r3
 80023d0:	4807      	ldr	r0, [pc, #28]	@ (80023f0 <HAL_TIM_Encoder_MspInit+0xf8>)
 80023d2:	f000 fb9d 	bl	8002b10 <HAL_GPIO_Init>
}
 80023d6:	bf00      	nop
 80023d8:	3730      	adds	r7, #48	@ 0x30
 80023da:	46bd      	mov	sp, r7
 80023dc:	bd80      	pop	{r7, pc}
 80023de:	bf00      	nop
 80023e0:	40000800 	.word	0x40000800
 80023e4:	40023800 	.word	0x40023800
 80023e8:	40020400 	.word	0x40020400
 80023ec:	40010400 	.word	0x40010400
 80023f0:	40020800 	.word	0x40020800

080023f4 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80023f4:	b580      	push	{r7, lr}
 80023f6:	b08a      	sub	sp, #40	@ 0x28
 80023f8:	af00      	add	r7, sp, #0
 80023fa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023fc:	f107 0314 	add.w	r3, r7, #20
 8002400:	2200      	movs	r2, #0
 8002402:	601a      	str	r2, [r3, #0]
 8002404:	605a      	str	r2, [r3, #4]
 8002406:	609a      	str	r2, [r3, #8]
 8002408:	60da      	str	r2, [r3, #12]
 800240a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 800240c:	687b      	ldr	r3, [r7, #4]
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002414:	d11e      	bne.n	8002454 <HAL_TIM_MspPostInit+0x60>
  {
    /* USER CODE BEGIN TIM2_MspPostInit 0 */

    /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002416:	2300      	movs	r3, #0
 8002418:	613b      	str	r3, [r7, #16]
 800241a:	4b34      	ldr	r3, [pc, #208]	@ (80024ec <HAL_TIM_MspPostInit+0xf8>)
 800241c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800241e:	4a33      	ldr	r2, [pc, #204]	@ (80024ec <HAL_TIM_MspPostInit+0xf8>)
 8002420:	f043 0301 	orr.w	r3, r3, #1
 8002424:	6313      	str	r3, [r2, #48]	@ 0x30
 8002426:	4b31      	ldr	r3, [pc, #196]	@ (80024ec <HAL_TIM_MspPostInit+0xf8>)
 8002428:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800242a:	f003 0301 	and.w	r3, r3, #1
 800242e:	613b      	str	r3, [r7, #16]
 8002430:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA5     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8002432:	2320      	movs	r3, #32
 8002434:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002436:	2302      	movs	r3, #2
 8002438:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800243a:	2300      	movs	r3, #0
 800243c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800243e:	2300      	movs	r3, #0
 8002440:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002442:	2301      	movs	r3, #1
 8002444:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002446:	f107 0314 	add.w	r3, r7, #20
 800244a:	4619      	mov	r1, r3
 800244c:	4828      	ldr	r0, [pc, #160]	@ (80024f0 <HAL_TIM_MspPostInit+0xfc>)
 800244e:	f000 fb5f 	bl	8002b10 <HAL_GPIO_Init>
    /* USER CODE BEGIN TIM5_MspPostInit 1 */

    /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 8002452:	e046      	b.n	80024e2 <HAL_TIM_MspPostInit+0xee>
  else if(htim->Instance==TIM3)
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	4a26      	ldr	r2, [pc, #152]	@ (80024f4 <HAL_TIM_MspPostInit+0x100>)
 800245a:	4293      	cmp	r3, r2
 800245c:	d11e      	bne.n	800249c <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800245e:	2300      	movs	r3, #0
 8002460:	60fb      	str	r3, [r7, #12]
 8002462:	4b22      	ldr	r3, [pc, #136]	@ (80024ec <HAL_TIM_MspPostInit+0xf8>)
 8002464:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002466:	4a21      	ldr	r2, [pc, #132]	@ (80024ec <HAL_TIM_MspPostInit+0xf8>)
 8002468:	f043 0301 	orr.w	r3, r3, #1
 800246c:	6313      	str	r3, [r2, #48]	@ 0x30
 800246e:	4b1f      	ldr	r3, [pc, #124]	@ (80024ec <HAL_TIM_MspPostInit+0xf8>)
 8002470:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002472:	f003 0301 	and.w	r3, r3, #1
 8002476:	60fb      	str	r3, [r7, #12]
 8002478:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 800247a:	2340      	movs	r3, #64	@ 0x40
 800247c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800247e:	2302      	movs	r3, #2
 8002480:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002482:	2300      	movs	r3, #0
 8002484:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002486:	2300      	movs	r3, #0
 8002488:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800248a:	2302      	movs	r3, #2
 800248c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800248e:	f107 0314 	add.w	r3, r7, #20
 8002492:	4619      	mov	r1, r3
 8002494:	4816      	ldr	r0, [pc, #88]	@ (80024f0 <HAL_TIM_MspPostInit+0xfc>)
 8002496:	f000 fb3b 	bl	8002b10 <HAL_GPIO_Init>
}
 800249a:	e022      	b.n	80024e2 <HAL_TIM_MspPostInit+0xee>
  else if(htim->Instance==TIM5)
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	681b      	ldr	r3, [r3, #0]
 80024a0:	4a15      	ldr	r2, [pc, #84]	@ (80024f8 <HAL_TIM_MspPostInit+0x104>)
 80024a2:	4293      	cmp	r3, r2
 80024a4:	d11d      	bne.n	80024e2 <HAL_TIM_MspPostInit+0xee>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024a6:	2300      	movs	r3, #0
 80024a8:	60bb      	str	r3, [r7, #8]
 80024aa:	4b10      	ldr	r3, [pc, #64]	@ (80024ec <HAL_TIM_MspPostInit+0xf8>)
 80024ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024ae:	4a0f      	ldr	r2, [pc, #60]	@ (80024ec <HAL_TIM_MspPostInit+0xf8>)
 80024b0:	f043 0301 	orr.w	r3, r3, #1
 80024b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80024b6:	4b0d      	ldr	r3, [pc, #52]	@ (80024ec <HAL_TIM_MspPostInit+0xf8>)
 80024b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024ba:	f003 0301 	and.w	r3, r3, #1
 80024be:	60bb      	str	r3, [r7, #8]
 80024c0:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80024c2:	2301      	movs	r3, #1
 80024c4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024c6:	2302      	movs	r3, #2
 80024c8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024ca:	2300      	movs	r3, #0
 80024cc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024ce:	2303      	movs	r3, #3
 80024d0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 80024d2:	2302      	movs	r3, #2
 80024d4:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024d6:	f107 0314 	add.w	r3, r7, #20
 80024da:	4619      	mov	r1, r3
 80024dc:	4804      	ldr	r0, [pc, #16]	@ (80024f0 <HAL_TIM_MspPostInit+0xfc>)
 80024de:	f000 fb17 	bl	8002b10 <HAL_GPIO_Init>
}
 80024e2:	bf00      	nop
 80024e4:	3728      	adds	r7, #40	@ 0x28
 80024e6:	46bd      	mov	sp, r7
 80024e8:	bd80      	pop	{r7, pc}
 80024ea:	bf00      	nop
 80024ec:	40023800 	.word	0x40023800
 80024f0:	40020000 	.word	0x40020000
 80024f4:	40000400 	.word	0x40000400
 80024f8:	40000c00 	.word	0x40000c00

080024fc <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80024fc:	b580      	push	{r7, lr}
 80024fe:	b08a      	sub	sp, #40	@ 0x28
 8002500:	af00      	add	r7, sp, #0
 8002502:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002504:	f107 0314 	add.w	r3, r7, #20
 8002508:	2200      	movs	r2, #0
 800250a:	601a      	str	r2, [r3, #0]
 800250c:	605a      	str	r2, [r3, #4]
 800250e:	609a      	str	r2, [r3, #8]
 8002510:	60da      	str	r2, [r3, #12]
 8002512:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	681b      	ldr	r3, [r3, #0]
 8002518:	4a1d      	ldr	r2, [pc, #116]	@ (8002590 <HAL_UART_MspInit+0x94>)
 800251a:	4293      	cmp	r3, r2
 800251c:	d133      	bne.n	8002586 <HAL_UART_MspInit+0x8a>
  {
    /* USER CODE BEGIN USART2_MspInit 0 */

    /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 800251e:	2300      	movs	r3, #0
 8002520:	613b      	str	r3, [r7, #16]
 8002522:	4b1c      	ldr	r3, [pc, #112]	@ (8002594 <HAL_UART_MspInit+0x98>)
 8002524:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002526:	4a1b      	ldr	r2, [pc, #108]	@ (8002594 <HAL_UART_MspInit+0x98>)
 8002528:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800252c:	6413      	str	r3, [r2, #64]	@ 0x40
 800252e:	4b19      	ldr	r3, [pc, #100]	@ (8002594 <HAL_UART_MspInit+0x98>)
 8002530:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002532:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002536:	613b      	str	r3, [r7, #16]
 8002538:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 800253a:	2300      	movs	r3, #0
 800253c:	60fb      	str	r3, [r7, #12]
 800253e:	4b15      	ldr	r3, [pc, #84]	@ (8002594 <HAL_UART_MspInit+0x98>)
 8002540:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002542:	4a14      	ldr	r2, [pc, #80]	@ (8002594 <HAL_UART_MspInit+0x98>)
 8002544:	f043 0308 	orr.w	r3, r3, #8
 8002548:	6313      	str	r3, [r2, #48]	@ 0x30
 800254a:	4b12      	ldr	r3, [pc, #72]	@ (8002594 <HAL_UART_MspInit+0x98>)
 800254c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800254e:	f003 0308 	and.w	r3, r3, #8
 8002552:	60fb      	str	r3, [r7, #12]
 8002554:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PD5     ------> USART2_TX
    PD6     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002556:	2360      	movs	r3, #96	@ 0x60
 8002558:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800255a:	2302      	movs	r3, #2
 800255c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800255e:	2300      	movs	r3, #0
 8002560:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002562:	2303      	movs	r3, #3
 8002564:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002566:	2307      	movs	r3, #7
 8002568:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800256a:	f107 0314 	add.w	r3, r7, #20
 800256e:	4619      	mov	r1, r3
 8002570:	4809      	ldr	r0, [pc, #36]	@ (8002598 <HAL_UART_MspInit+0x9c>)
 8002572:	f000 facd 	bl	8002b10 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8002576:	2200      	movs	r2, #0
 8002578:	2100      	movs	r1, #0
 800257a:	2026      	movs	r0, #38	@ 0x26
 800257c:	f000 f9ff 	bl	800297e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002580:	2026      	movs	r0, #38	@ 0x26
 8002582:	f000 fa18 	bl	80029b6 <HAL_NVIC_EnableIRQ>

    /* USER CODE END USART2_MspInit 1 */

  }

}
 8002586:	bf00      	nop
 8002588:	3728      	adds	r7, #40	@ 0x28
 800258a:	46bd      	mov	sp, r7
 800258c:	bd80      	pop	{r7, pc}
 800258e:	bf00      	nop
 8002590:	40004400 	.word	0x40004400
 8002594:	40023800 	.word	0x40023800
 8002598:	40020c00 	.word	0x40020c00

0800259c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800259c:	b480      	push	{r7}
 800259e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80025a0:	bf00      	nop
 80025a2:	e7fd      	b.n	80025a0 <NMI_Handler+0x4>

080025a4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80025a4:	b480      	push	{r7}
 80025a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80025a8:	bf00      	nop
 80025aa:	e7fd      	b.n	80025a8 <HardFault_Handler+0x4>

080025ac <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80025ac:	b480      	push	{r7}
 80025ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80025b0:	bf00      	nop
 80025b2:	e7fd      	b.n	80025b0 <MemManage_Handler+0x4>

080025b4 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80025b4:	b480      	push	{r7}
 80025b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80025b8:	bf00      	nop
 80025ba:	e7fd      	b.n	80025b8 <BusFault_Handler+0x4>

080025bc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80025bc:	b480      	push	{r7}
 80025be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80025c0:	bf00      	nop
 80025c2:	e7fd      	b.n	80025c0 <UsageFault_Handler+0x4>

080025c4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80025c4:	b480      	push	{r7}
 80025c6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80025c8:	bf00      	nop
 80025ca:	46bd      	mov	sp, r7
 80025cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025d0:	4770      	bx	lr

080025d2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80025d2:	b480      	push	{r7}
 80025d4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80025d6:	bf00      	nop
 80025d8:	46bd      	mov	sp, r7
 80025da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025de:	4770      	bx	lr

080025e0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80025e0:	b480      	push	{r7}
 80025e2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80025e4:	bf00      	nop
 80025e6:	46bd      	mov	sp, r7
 80025e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ec:	4770      	bx	lr

080025ee <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80025ee:	b580      	push	{r7, lr}
 80025f0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80025f2:	f000 f8a5 	bl	8002740 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80025f6:	bf00      	nop
 80025f8:	bd80      	pop	{r7, pc}
	...

080025fc <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 80025fc:	b580      	push	{r7, lr}
 80025fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002600:	4802      	ldr	r0, [pc, #8]	@ (800260c <USART2_IRQHandler+0x10>)
 8002602:	f002 f8f5 	bl	80047f0 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8002606:	bf00      	nop
 8002608:	bd80      	pop	{r7, pc}
 800260a:	bf00      	nop
 800260c:	200002cc 	.word	0x200002cc

08002610 <TIM5_IRQHandler>:

/**
  * @brief This function handles TIM5 global interrupt.
  */
void TIM5_IRQHandler(void)
{
 8002610:	b580      	push	{r7, lr}
 8002612:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM5_IRQn 0 */

  /* USER CODE END TIM5_IRQn 0 */
  HAL_TIM_IRQHandler(&htim5);
 8002614:	4802      	ldr	r0, [pc, #8]	@ (8002620 <TIM5_IRQHandler+0x10>)
 8002616:	f001 fb85 	bl	8003d24 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM5_IRQn 1 */

  /* USER CODE END TIM5_IRQn 1 */
}
 800261a:	bf00      	nop
 800261c:	bd80      	pop	{r7, pc}
 800261e:	bf00      	nop
 8002620:	2000023c 	.word	0x2000023c

08002624 <SystemInit>:
 8002624:	b480      	push	{r7}
 8002626:	af00      	add	r7, sp, #0
 8002628:	4b06      	ldr	r3, [pc, #24]	@ (8002644 <SystemInit+0x20>)
 800262a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800262e:	4a05      	ldr	r2, [pc, #20]	@ (8002644 <SystemInit+0x20>)
 8002630:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002634:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002638:	bf00      	nop
 800263a:	46bd      	mov	sp, r7
 800263c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002640:	4770      	bx	lr
 8002642:	bf00      	nop
 8002644:	e000ed00 	.word	0xe000ed00

08002648 <Reset_Handler>:
 8002648:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002680 <LoopFillZerobss+0xe>
 800264c:	f7ff ffea 	bl	8002624 <SystemInit>
 8002650:	480c      	ldr	r0, [pc, #48]	@ (8002684 <LoopFillZerobss+0x12>)
 8002652:	490d      	ldr	r1, [pc, #52]	@ (8002688 <LoopFillZerobss+0x16>)
 8002654:	4a0d      	ldr	r2, [pc, #52]	@ (800268c <LoopFillZerobss+0x1a>)
 8002656:	2300      	movs	r3, #0
 8002658:	e002      	b.n	8002660 <LoopCopyDataInit>

0800265a <CopyDataInit>:
 800265a:	58d4      	ldr	r4, [r2, r3]
 800265c:	50c4      	str	r4, [r0, r3]
 800265e:	3304      	adds	r3, #4

08002660 <LoopCopyDataInit>:
 8002660:	18c4      	adds	r4, r0, r3
 8002662:	428c      	cmp	r4, r1
 8002664:	d3f9      	bcc.n	800265a <CopyDataInit>
 8002666:	4a0a      	ldr	r2, [pc, #40]	@ (8002690 <LoopFillZerobss+0x1e>)
 8002668:	4c0a      	ldr	r4, [pc, #40]	@ (8002694 <LoopFillZerobss+0x22>)
 800266a:	2300      	movs	r3, #0
 800266c:	e001      	b.n	8002672 <LoopFillZerobss>

0800266e <FillZerobss>:
 800266e:	6013      	str	r3, [r2, #0]
 8002670:	3204      	adds	r2, #4

08002672 <LoopFillZerobss>:
 8002672:	42a2      	cmp	r2, r4
 8002674:	d3fb      	bcc.n	800266e <FillZerobss>
 8002676:	f002 ffd1 	bl	800561c <__libc_init_array>
 800267a:	f7ff f91f 	bl	80018bc <main>
 800267e:	4770      	bx	lr
 8002680:	20020000 	.word	0x20020000
 8002684:	20000000 	.word	0x20000000
 8002688:	20000114 	.word	0x20000114
 800268c:	080058b8 	.word	0x080058b8
 8002690:	20000114 	.word	0x20000114
 8002694:	20000470 	.word	0x20000470

08002698 <ADC_IRQHandler>:
 8002698:	e7fe      	b.n	8002698 <ADC_IRQHandler>
	...

0800269c <HAL_Init>:
 800269c:	b580      	push	{r7, lr}
 800269e:	af00      	add	r7, sp, #0
 80026a0:	4b0e      	ldr	r3, [pc, #56]	@ (80026dc <HAL_Init+0x40>)
 80026a2:	681b      	ldr	r3, [r3, #0]
 80026a4:	4a0d      	ldr	r2, [pc, #52]	@ (80026dc <HAL_Init+0x40>)
 80026a6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80026aa:	6013      	str	r3, [r2, #0]
 80026ac:	4b0b      	ldr	r3, [pc, #44]	@ (80026dc <HAL_Init+0x40>)
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	4a0a      	ldr	r2, [pc, #40]	@ (80026dc <HAL_Init+0x40>)
 80026b2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80026b6:	6013      	str	r3, [r2, #0]
 80026b8:	4b08      	ldr	r3, [pc, #32]	@ (80026dc <HAL_Init+0x40>)
 80026ba:	681b      	ldr	r3, [r3, #0]
 80026bc:	4a07      	ldr	r2, [pc, #28]	@ (80026dc <HAL_Init+0x40>)
 80026be:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80026c2:	6013      	str	r3, [r2, #0]
 80026c4:	2003      	movs	r0, #3
 80026c6:	f000 f94f 	bl	8002968 <HAL_NVIC_SetPriorityGrouping>
 80026ca:	200f      	movs	r0, #15
 80026cc:	f000 f808 	bl	80026e0 <HAL_InitTick>
 80026d0:	f7ff fd98 	bl	8002204 <HAL_MspInit>
 80026d4:	2300      	movs	r3, #0
 80026d6:	4618      	mov	r0, r3
 80026d8:	bd80      	pop	{r7, pc}
 80026da:	bf00      	nop
 80026dc:	40023c00 	.word	0x40023c00

080026e0 <HAL_InitTick>:
 80026e0:	b580      	push	{r7, lr}
 80026e2:	b082      	sub	sp, #8
 80026e4:	af00      	add	r7, sp, #0
 80026e6:	6078      	str	r0, [r7, #4]
 80026e8:	4b12      	ldr	r3, [pc, #72]	@ (8002734 <HAL_InitTick+0x54>)
 80026ea:	681a      	ldr	r2, [r3, #0]
 80026ec:	4b12      	ldr	r3, [pc, #72]	@ (8002738 <HAL_InitTick+0x58>)
 80026ee:	781b      	ldrb	r3, [r3, #0]
 80026f0:	4619      	mov	r1, r3
 80026f2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80026f6:	fbb3 f3f1 	udiv	r3, r3, r1
 80026fa:	fbb2 f3f3 	udiv	r3, r2, r3
 80026fe:	4618      	mov	r0, r3
 8002700:	f000 f967 	bl	80029d2 <HAL_SYSTICK_Config>
 8002704:	4603      	mov	r3, r0
 8002706:	2b00      	cmp	r3, #0
 8002708:	d001      	beq.n	800270e <HAL_InitTick+0x2e>
 800270a:	2301      	movs	r3, #1
 800270c:	e00e      	b.n	800272c <HAL_InitTick+0x4c>
 800270e:	687b      	ldr	r3, [r7, #4]
 8002710:	2b0f      	cmp	r3, #15
 8002712:	d80a      	bhi.n	800272a <HAL_InitTick+0x4a>
 8002714:	2200      	movs	r2, #0
 8002716:	6879      	ldr	r1, [r7, #4]
 8002718:	f04f 30ff 	mov.w	r0, #4294967295
 800271c:	f000 f92f 	bl	800297e <HAL_NVIC_SetPriority>
 8002720:	4a06      	ldr	r2, [pc, #24]	@ (800273c <HAL_InitTick+0x5c>)
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	6013      	str	r3, [r2, #0]
 8002726:	2300      	movs	r3, #0
 8002728:	e000      	b.n	800272c <HAL_InitTick+0x4c>
 800272a:	2301      	movs	r3, #1
 800272c:	4618      	mov	r0, r3
 800272e:	3708      	adds	r7, #8
 8002730:	46bd      	mov	sp, r7
 8002732:	bd80      	pop	{r7, pc}
 8002734:	200000b8 	.word	0x200000b8
 8002738:	200000c0 	.word	0x200000c0
 800273c:	200000bc 	.word	0x200000bc

08002740 <HAL_IncTick>:
 8002740:	b480      	push	{r7}
 8002742:	af00      	add	r7, sp, #0
 8002744:	4b06      	ldr	r3, [pc, #24]	@ (8002760 <HAL_IncTick+0x20>)
 8002746:	781b      	ldrb	r3, [r3, #0]
 8002748:	461a      	mov	r2, r3
 800274a:	4b06      	ldr	r3, [pc, #24]	@ (8002764 <HAL_IncTick+0x24>)
 800274c:	681b      	ldr	r3, [r3, #0]
 800274e:	4413      	add	r3, r2
 8002750:	4a04      	ldr	r2, [pc, #16]	@ (8002764 <HAL_IncTick+0x24>)
 8002752:	6013      	str	r3, [r2, #0]
 8002754:	bf00      	nop
 8002756:	46bd      	mov	sp, r7
 8002758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800275c:	4770      	bx	lr
 800275e:	bf00      	nop
 8002760:	200000c0 	.word	0x200000c0
 8002764:	20000334 	.word	0x20000334

08002768 <HAL_GetTick>:
 8002768:	b480      	push	{r7}
 800276a:	af00      	add	r7, sp, #0
 800276c:	4b03      	ldr	r3, [pc, #12]	@ (800277c <HAL_GetTick+0x14>)
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	4618      	mov	r0, r3
 8002772:	46bd      	mov	sp, r7
 8002774:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002778:	4770      	bx	lr
 800277a:	bf00      	nop
 800277c:	20000334 	.word	0x20000334

08002780 <HAL_Delay>:
 8002780:	b580      	push	{r7, lr}
 8002782:	b084      	sub	sp, #16
 8002784:	af00      	add	r7, sp, #0
 8002786:	6078      	str	r0, [r7, #4]
 8002788:	f7ff ffee 	bl	8002768 <HAL_GetTick>
 800278c:	60b8      	str	r0, [r7, #8]
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	60fb      	str	r3, [r7, #12]
 8002792:	68fb      	ldr	r3, [r7, #12]
 8002794:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002798:	d005      	beq.n	80027a6 <HAL_Delay+0x26>
 800279a:	4b0a      	ldr	r3, [pc, #40]	@ (80027c4 <HAL_Delay+0x44>)
 800279c:	781b      	ldrb	r3, [r3, #0]
 800279e:	461a      	mov	r2, r3
 80027a0:	68fb      	ldr	r3, [r7, #12]
 80027a2:	4413      	add	r3, r2
 80027a4:	60fb      	str	r3, [r7, #12]
 80027a6:	bf00      	nop
 80027a8:	f7ff ffde 	bl	8002768 <HAL_GetTick>
 80027ac:	4602      	mov	r2, r0
 80027ae:	68bb      	ldr	r3, [r7, #8]
 80027b0:	1ad3      	subs	r3, r2, r3
 80027b2:	68fa      	ldr	r2, [r7, #12]
 80027b4:	429a      	cmp	r2, r3
 80027b6:	d8f7      	bhi.n	80027a8 <HAL_Delay+0x28>
 80027b8:	bf00      	nop
 80027ba:	bf00      	nop
 80027bc:	3710      	adds	r7, #16
 80027be:	46bd      	mov	sp, r7
 80027c0:	bd80      	pop	{r7, pc}
 80027c2:	bf00      	nop
 80027c4:	200000c0 	.word	0x200000c0

080027c8 <__NVIC_SetPriorityGrouping>:
 80027c8:	b480      	push	{r7}
 80027ca:	b085      	sub	sp, #20
 80027cc:	af00      	add	r7, sp, #0
 80027ce:	6078      	str	r0, [r7, #4]
 80027d0:	687b      	ldr	r3, [r7, #4]
 80027d2:	f003 0307 	and.w	r3, r3, #7
 80027d6:	60fb      	str	r3, [r7, #12]
 80027d8:	4b0c      	ldr	r3, [pc, #48]	@ (800280c <__NVIC_SetPriorityGrouping+0x44>)
 80027da:	68db      	ldr	r3, [r3, #12]
 80027dc:	60bb      	str	r3, [r7, #8]
 80027de:	68ba      	ldr	r2, [r7, #8]
 80027e0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80027e4:	4013      	ands	r3, r2
 80027e6:	60bb      	str	r3, [r7, #8]
 80027e8:	68fb      	ldr	r3, [r7, #12]
 80027ea:	021a      	lsls	r2, r3, #8
 80027ec:	68bb      	ldr	r3, [r7, #8]
 80027ee:	4313      	orrs	r3, r2
 80027f0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80027f4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80027f8:	60bb      	str	r3, [r7, #8]
 80027fa:	4a04      	ldr	r2, [pc, #16]	@ (800280c <__NVIC_SetPriorityGrouping+0x44>)
 80027fc:	68bb      	ldr	r3, [r7, #8]
 80027fe:	60d3      	str	r3, [r2, #12]
 8002800:	bf00      	nop
 8002802:	3714      	adds	r7, #20
 8002804:	46bd      	mov	sp, r7
 8002806:	f85d 7b04 	ldr.w	r7, [sp], #4
 800280a:	4770      	bx	lr
 800280c:	e000ed00 	.word	0xe000ed00

08002810 <__NVIC_GetPriorityGrouping>:
 8002810:	b480      	push	{r7}
 8002812:	af00      	add	r7, sp, #0
 8002814:	4b04      	ldr	r3, [pc, #16]	@ (8002828 <__NVIC_GetPriorityGrouping+0x18>)
 8002816:	68db      	ldr	r3, [r3, #12]
 8002818:	0a1b      	lsrs	r3, r3, #8
 800281a:	f003 0307 	and.w	r3, r3, #7
 800281e:	4618      	mov	r0, r3
 8002820:	46bd      	mov	sp, r7
 8002822:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002826:	4770      	bx	lr
 8002828:	e000ed00 	.word	0xe000ed00

0800282c <__NVIC_EnableIRQ>:
 800282c:	b480      	push	{r7}
 800282e:	b083      	sub	sp, #12
 8002830:	af00      	add	r7, sp, #0
 8002832:	4603      	mov	r3, r0
 8002834:	71fb      	strb	r3, [r7, #7]
 8002836:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800283a:	2b00      	cmp	r3, #0
 800283c:	db0b      	blt.n	8002856 <__NVIC_EnableIRQ+0x2a>
 800283e:	79fb      	ldrb	r3, [r7, #7]
 8002840:	f003 021f 	and.w	r2, r3, #31
 8002844:	4907      	ldr	r1, [pc, #28]	@ (8002864 <__NVIC_EnableIRQ+0x38>)
 8002846:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800284a:	095b      	lsrs	r3, r3, #5
 800284c:	2001      	movs	r0, #1
 800284e:	fa00 f202 	lsl.w	r2, r0, r2
 8002852:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002856:	bf00      	nop
 8002858:	370c      	adds	r7, #12
 800285a:	46bd      	mov	sp, r7
 800285c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002860:	4770      	bx	lr
 8002862:	bf00      	nop
 8002864:	e000e100 	.word	0xe000e100

08002868 <__NVIC_SetPriority>:
 8002868:	b480      	push	{r7}
 800286a:	b083      	sub	sp, #12
 800286c:	af00      	add	r7, sp, #0
 800286e:	4603      	mov	r3, r0
 8002870:	6039      	str	r1, [r7, #0]
 8002872:	71fb      	strb	r3, [r7, #7]
 8002874:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002878:	2b00      	cmp	r3, #0
 800287a:	db0a      	blt.n	8002892 <__NVIC_SetPriority+0x2a>
 800287c:	683b      	ldr	r3, [r7, #0]
 800287e:	b2da      	uxtb	r2, r3
 8002880:	490c      	ldr	r1, [pc, #48]	@ (80028b4 <__NVIC_SetPriority+0x4c>)
 8002882:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002886:	0112      	lsls	r2, r2, #4
 8002888:	b2d2      	uxtb	r2, r2
 800288a:	440b      	add	r3, r1
 800288c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002890:	e00a      	b.n	80028a8 <__NVIC_SetPriority+0x40>
 8002892:	683b      	ldr	r3, [r7, #0]
 8002894:	b2da      	uxtb	r2, r3
 8002896:	4908      	ldr	r1, [pc, #32]	@ (80028b8 <__NVIC_SetPriority+0x50>)
 8002898:	79fb      	ldrb	r3, [r7, #7]
 800289a:	f003 030f 	and.w	r3, r3, #15
 800289e:	3b04      	subs	r3, #4
 80028a0:	0112      	lsls	r2, r2, #4
 80028a2:	b2d2      	uxtb	r2, r2
 80028a4:	440b      	add	r3, r1
 80028a6:	761a      	strb	r2, [r3, #24]
 80028a8:	bf00      	nop
 80028aa:	370c      	adds	r7, #12
 80028ac:	46bd      	mov	sp, r7
 80028ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028b2:	4770      	bx	lr
 80028b4:	e000e100 	.word	0xe000e100
 80028b8:	e000ed00 	.word	0xe000ed00

080028bc <NVIC_EncodePriority>:
 80028bc:	b480      	push	{r7}
 80028be:	b089      	sub	sp, #36	@ 0x24
 80028c0:	af00      	add	r7, sp, #0
 80028c2:	60f8      	str	r0, [r7, #12]
 80028c4:	60b9      	str	r1, [r7, #8]
 80028c6:	607a      	str	r2, [r7, #4]
 80028c8:	68fb      	ldr	r3, [r7, #12]
 80028ca:	f003 0307 	and.w	r3, r3, #7
 80028ce:	61fb      	str	r3, [r7, #28]
 80028d0:	69fb      	ldr	r3, [r7, #28]
 80028d2:	f1c3 0307 	rsb	r3, r3, #7
 80028d6:	2b04      	cmp	r3, #4
 80028d8:	bf28      	it	cs
 80028da:	2304      	movcs	r3, #4
 80028dc:	61bb      	str	r3, [r7, #24]
 80028de:	69fb      	ldr	r3, [r7, #28]
 80028e0:	3304      	adds	r3, #4
 80028e2:	2b06      	cmp	r3, #6
 80028e4:	d902      	bls.n	80028ec <NVIC_EncodePriority+0x30>
 80028e6:	69fb      	ldr	r3, [r7, #28]
 80028e8:	3b03      	subs	r3, #3
 80028ea:	e000      	b.n	80028ee <NVIC_EncodePriority+0x32>
 80028ec:	2300      	movs	r3, #0
 80028ee:	617b      	str	r3, [r7, #20]
 80028f0:	f04f 32ff 	mov.w	r2, #4294967295
 80028f4:	69bb      	ldr	r3, [r7, #24]
 80028f6:	fa02 f303 	lsl.w	r3, r2, r3
 80028fa:	43da      	mvns	r2, r3
 80028fc:	68bb      	ldr	r3, [r7, #8]
 80028fe:	401a      	ands	r2, r3
 8002900:	697b      	ldr	r3, [r7, #20]
 8002902:	409a      	lsls	r2, r3
 8002904:	f04f 31ff 	mov.w	r1, #4294967295
 8002908:	697b      	ldr	r3, [r7, #20]
 800290a:	fa01 f303 	lsl.w	r3, r1, r3
 800290e:	43d9      	mvns	r1, r3
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	400b      	ands	r3, r1
 8002914:	4313      	orrs	r3, r2
 8002916:	4618      	mov	r0, r3
 8002918:	3724      	adds	r7, #36	@ 0x24
 800291a:	46bd      	mov	sp, r7
 800291c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002920:	4770      	bx	lr
	...

08002924 <SysTick_Config>:
 8002924:	b580      	push	{r7, lr}
 8002926:	b082      	sub	sp, #8
 8002928:	af00      	add	r7, sp, #0
 800292a:	6078      	str	r0, [r7, #4]
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	3b01      	subs	r3, #1
 8002930:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002934:	d301      	bcc.n	800293a <SysTick_Config+0x16>
 8002936:	2301      	movs	r3, #1
 8002938:	e00f      	b.n	800295a <SysTick_Config+0x36>
 800293a:	4a0a      	ldr	r2, [pc, #40]	@ (8002964 <SysTick_Config+0x40>)
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	3b01      	subs	r3, #1
 8002940:	6053      	str	r3, [r2, #4]
 8002942:	210f      	movs	r1, #15
 8002944:	f04f 30ff 	mov.w	r0, #4294967295
 8002948:	f7ff ff8e 	bl	8002868 <__NVIC_SetPriority>
 800294c:	4b05      	ldr	r3, [pc, #20]	@ (8002964 <SysTick_Config+0x40>)
 800294e:	2200      	movs	r2, #0
 8002950:	609a      	str	r2, [r3, #8]
 8002952:	4b04      	ldr	r3, [pc, #16]	@ (8002964 <SysTick_Config+0x40>)
 8002954:	2207      	movs	r2, #7
 8002956:	601a      	str	r2, [r3, #0]
 8002958:	2300      	movs	r3, #0
 800295a:	4618      	mov	r0, r3
 800295c:	3708      	adds	r7, #8
 800295e:	46bd      	mov	sp, r7
 8002960:	bd80      	pop	{r7, pc}
 8002962:	bf00      	nop
 8002964:	e000e010 	.word	0xe000e010

08002968 <HAL_NVIC_SetPriorityGrouping>:
 8002968:	b580      	push	{r7, lr}
 800296a:	b082      	sub	sp, #8
 800296c:	af00      	add	r7, sp, #0
 800296e:	6078      	str	r0, [r7, #4]
 8002970:	6878      	ldr	r0, [r7, #4]
 8002972:	f7ff ff29 	bl	80027c8 <__NVIC_SetPriorityGrouping>
 8002976:	bf00      	nop
 8002978:	3708      	adds	r7, #8
 800297a:	46bd      	mov	sp, r7
 800297c:	bd80      	pop	{r7, pc}

0800297e <HAL_NVIC_SetPriority>:
 800297e:	b580      	push	{r7, lr}
 8002980:	b086      	sub	sp, #24
 8002982:	af00      	add	r7, sp, #0
 8002984:	4603      	mov	r3, r0
 8002986:	60b9      	str	r1, [r7, #8]
 8002988:	607a      	str	r2, [r7, #4]
 800298a:	73fb      	strb	r3, [r7, #15]
 800298c:	2300      	movs	r3, #0
 800298e:	617b      	str	r3, [r7, #20]
 8002990:	f7ff ff3e 	bl	8002810 <__NVIC_GetPriorityGrouping>
 8002994:	6178      	str	r0, [r7, #20]
 8002996:	687a      	ldr	r2, [r7, #4]
 8002998:	68b9      	ldr	r1, [r7, #8]
 800299a:	6978      	ldr	r0, [r7, #20]
 800299c:	f7ff ff8e 	bl	80028bc <NVIC_EncodePriority>
 80029a0:	4602      	mov	r2, r0
 80029a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80029a6:	4611      	mov	r1, r2
 80029a8:	4618      	mov	r0, r3
 80029aa:	f7ff ff5d 	bl	8002868 <__NVIC_SetPriority>
 80029ae:	bf00      	nop
 80029b0:	3718      	adds	r7, #24
 80029b2:	46bd      	mov	sp, r7
 80029b4:	bd80      	pop	{r7, pc}

080029b6 <HAL_NVIC_EnableIRQ>:
 80029b6:	b580      	push	{r7, lr}
 80029b8:	b082      	sub	sp, #8
 80029ba:	af00      	add	r7, sp, #0
 80029bc:	4603      	mov	r3, r0
 80029be:	71fb      	strb	r3, [r7, #7]
 80029c0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029c4:	4618      	mov	r0, r3
 80029c6:	f7ff ff31 	bl	800282c <__NVIC_EnableIRQ>
 80029ca:	bf00      	nop
 80029cc:	3708      	adds	r7, #8
 80029ce:	46bd      	mov	sp, r7
 80029d0:	bd80      	pop	{r7, pc}

080029d2 <HAL_SYSTICK_Config>:
 80029d2:	b580      	push	{r7, lr}
 80029d4:	b082      	sub	sp, #8
 80029d6:	af00      	add	r7, sp, #0
 80029d8:	6078      	str	r0, [r7, #4]
 80029da:	6878      	ldr	r0, [r7, #4]
 80029dc:	f7ff ffa2 	bl	8002924 <SysTick_Config>
 80029e0:	4603      	mov	r3, r0
 80029e2:	4618      	mov	r0, r3
 80029e4:	3708      	adds	r7, #8
 80029e6:	46bd      	mov	sp, r7
 80029e8:	bd80      	pop	{r7, pc}

080029ea <HAL_DMA_Abort>:
 80029ea:	b580      	push	{r7, lr}
 80029ec:	b084      	sub	sp, #16
 80029ee:	af00      	add	r7, sp, #0
 80029f0:	6078      	str	r0, [r7, #4]
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80029f6:	60fb      	str	r3, [r7, #12]
 80029f8:	f7ff feb6 	bl	8002768 <HAL_GetTick>
 80029fc:	60b8      	str	r0, [r7, #8]
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002a04:	b2db      	uxtb	r3, r3
 8002a06:	2b02      	cmp	r3, #2
 8002a08:	d008      	beq.n	8002a1c <HAL_DMA_Abort+0x32>
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	2280      	movs	r2, #128	@ 0x80
 8002a0e:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a10:	687b      	ldr	r3, [r7, #4]
 8002a12:	2200      	movs	r2, #0
 8002a14:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002a18:	2301      	movs	r3, #1
 8002a1a:	e052      	b.n	8002ac2 <HAL_DMA_Abort+0xd8>
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	681a      	ldr	r2, [r3, #0]
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	681b      	ldr	r3, [r3, #0]
 8002a26:	f022 0216 	bic.w	r2, r2, #22
 8002a2a:	601a      	str	r2, [r3, #0]
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	681b      	ldr	r3, [r3, #0]
 8002a30:	695a      	ldr	r2, [r3, #20]
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	681b      	ldr	r3, [r3, #0]
 8002a36:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002a3a:	615a      	str	r2, [r3, #20]
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a40:	2b00      	cmp	r3, #0
 8002a42:	d103      	bne.n	8002a4c <HAL_DMA_Abort+0x62>
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d007      	beq.n	8002a5c <HAL_DMA_Abort+0x72>
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	681a      	ldr	r2, [r3, #0]
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	f022 0208 	bic.w	r2, r2, #8
 8002a5a:	601a      	str	r2, [r3, #0]
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	681b      	ldr	r3, [r3, #0]
 8002a60:	681a      	ldr	r2, [r3, #0]
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	681b      	ldr	r3, [r3, #0]
 8002a66:	f022 0201 	bic.w	r2, r2, #1
 8002a6a:	601a      	str	r2, [r3, #0]
 8002a6c:	e013      	b.n	8002a96 <HAL_DMA_Abort+0xac>
 8002a6e:	f7ff fe7b 	bl	8002768 <HAL_GetTick>
 8002a72:	4602      	mov	r2, r0
 8002a74:	68bb      	ldr	r3, [r7, #8]
 8002a76:	1ad3      	subs	r3, r2, r3
 8002a78:	2b05      	cmp	r3, #5
 8002a7a:	d90c      	bls.n	8002a96 <HAL_DMA_Abort+0xac>
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	2220      	movs	r2, #32
 8002a80:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	2203      	movs	r2, #3
 8002a86:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	2200      	movs	r2, #0
 8002a8e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002a92:	2303      	movs	r3, #3
 8002a94:	e015      	b.n	8002ac2 <HAL_DMA_Abort+0xd8>
 8002a96:	687b      	ldr	r3, [r7, #4]
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	f003 0301 	and.w	r3, r3, #1
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d1e4      	bne.n	8002a6e <HAL_DMA_Abort+0x84>
 8002aa4:	687b      	ldr	r3, [r7, #4]
 8002aa6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002aa8:	223f      	movs	r2, #63	@ 0x3f
 8002aaa:	409a      	lsls	r2, r3
 8002aac:	68fb      	ldr	r3, [r7, #12]
 8002aae:	609a      	str	r2, [r3, #8]
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	2201      	movs	r2, #1
 8002ab4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	2200      	movs	r2, #0
 8002abc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002ac0:	2300      	movs	r3, #0
 8002ac2:	4618      	mov	r0, r3
 8002ac4:	3710      	adds	r7, #16
 8002ac6:	46bd      	mov	sp, r7
 8002ac8:	bd80      	pop	{r7, pc}

08002aca <HAL_DMA_Abort_IT>:
 8002aca:	b480      	push	{r7}
 8002acc:	b083      	sub	sp, #12
 8002ace:	af00      	add	r7, sp, #0
 8002ad0:	6078      	str	r0, [r7, #4]
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002ad8:	b2db      	uxtb	r3, r3
 8002ada:	2b02      	cmp	r3, #2
 8002adc:	d004      	beq.n	8002ae8 <HAL_DMA_Abort_IT+0x1e>
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	2280      	movs	r2, #128	@ 0x80
 8002ae2:	655a      	str	r2, [r3, #84]	@ 0x54
 8002ae4:	2301      	movs	r3, #1
 8002ae6:	e00c      	b.n	8002b02 <HAL_DMA_Abort_IT+0x38>
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	2205      	movs	r2, #5
 8002aec:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	681a      	ldr	r2, [r3, #0]
 8002af6:	687b      	ldr	r3, [r7, #4]
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	f022 0201 	bic.w	r2, r2, #1
 8002afe:	601a      	str	r2, [r3, #0]
 8002b00:	2300      	movs	r3, #0
 8002b02:	4618      	mov	r0, r3
 8002b04:	370c      	adds	r7, #12
 8002b06:	46bd      	mov	sp, r7
 8002b08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b0c:	4770      	bx	lr
	...

08002b10 <HAL_GPIO_Init>:
 8002b10:	b480      	push	{r7}
 8002b12:	b089      	sub	sp, #36	@ 0x24
 8002b14:	af00      	add	r7, sp, #0
 8002b16:	6078      	str	r0, [r7, #4]
 8002b18:	6039      	str	r1, [r7, #0]
 8002b1a:	2300      	movs	r3, #0
 8002b1c:	617b      	str	r3, [r7, #20]
 8002b1e:	2300      	movs	r3, #0
 8002b20:	613b      	str	r3, [r7, #16]
 8002b22:	2300      	movs	r3, #0
 8002b24:	61bb      	str	r3, [r7, #24]
 8002b26:	2300      	movs	r3, #0
 8002b28:	61fb      	str	r3, [r7, #28]
 8002b2a:	e16b      	b.n	8002e04 <HAL_GPIO_Init+0x2f4>
 8002b2c:	2201      	movs	r2, #1
 8002b2e:	69fb      	ldr	r3, [r7, #28]
 8002b30:	fa02 f303 	lsl.w	r3, r2, r3
 8002b34:	617b      	str	r3, [r7, #20]
 8002b36:	683b      	ldr	r3, [r7, #0]
 8002b38:	681b      	ldr	r3, [r3, #0]
 8002b3a:	697a      	ldr	r2, [r7, #20]
 8002b3c:	4013      	ands	r3, r2
 8002b3e:	613b      	str	r3, [r7, #16]
 8002b40:	693a      	ldr	r2, [r7, #16]
 8002b42:	697b      	ldr	r3, [r7, #20]
 8002b44:	429a      	cmp	r2, r3
 8002b46:	f040 815a 	bne.w	8002dfe <HAL_GPIO_Init+0x2ee>
 8002b4a:	683b      	ldr	r3, [r7, #0]
 8002b4c:	685b      	ldr	r3, [r3, #4]
 8002b4e:	f003 0303 	and.w	r3, r3, #3
 8002b52:	2b01      	cmp	r3, #1
 8002b54:	d005      	beq.n	8002b62 <HAL_GPIO_Init+0x52>
 8002b56:	683b      	ldr	r3, [r7, #0]
 8002b58:	685b      	ldr	r3, [r3, #4]
 8002b5a:	f003 0303 	and.w	r3, r3, #3
 8002b5e:	2b02      	cmp	r3, #2
 8002b60:	d130      	bne.n	8002bc4 <HAL_GPIO_Init+0xb4>
 8002b62:	687b      	ldr	r3, [r7, #4]
 8002b64:	689b      	ldr	r3, [r3, #8]
 8002b66:	61bb      	str	r3, [r7, #24]
 8002b68:	69fb      	ldr	r3, [r7, #28]
 8002b6a:	005b      	lsls	r3, r3, #1
 8002b6c:	2203      	movs	r2, #3
 8002b6e:	fa02 f303 	lsl.w	r3, r2, r3
 8002b72:	43db      	mvns	r3, r3
 8002b74:	69ba      	ldr	r2, [r7, #24]
 8002b76:	4013      	ands	r3, r2
 8002b78:	61bb      	str	r3, [r7, #24]
 8002b7a:	683b      	ldr	r3, [r7, #0]
 8002b7c:	68da      	ldr	r2, [r3, #12]
 8002b7e:	69fb      	ldr	r3, [r7, #28]
 8002b80:	005b      	lsls	r3, r3, #1
 8002b82:	fa02 f303 	lsl.w	r3, r2, r3
 8002b86:	69ba      	ldr	r2, [r7, #24]
 8002b88:	4313      	orrs	r3, r2
 8002b8a:	61bb      	str	r3, [r7, #24]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	69ba      	ldr	r2, [r7, #24]
 8002b90:	609a      	str	r2, [r3, #8]
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	685b      	ldr	r3, [r3, #4]
 8002b96:	61bb      	str	r3, [r7, #24]
 8002b98:	2201      	movs	r2, #1
 8002b9a:	69fb      	ldr	r3, [r7, #28]
 8002b9c:	fa02 f303 	lsl.w	r3, r2, r3
 8002ba0:	43db      	mvns	r3, r3
 8002ba2:	69ba      	ldr	r2, [r7, #24]
 8002ba4:	4013      	ands	r3, r2
 8002ba6:	61bb      	str	r3, [r7, #24]
 8002ba8:	683b      	ldr	r3, [r7, #0]
 8002baa:	685b      	ldr	r3, [r3, #4]
 8002bac:	091b      	lsrs	r3, r3, #4
 8002bae:	f003 0201 	and.w	r2, r3, #1
 8002bb2:	69fb      	ldr	r3, [r7, #28]
 8002bb4:	fa02 f303 	lsl.w	r3, r2, r3
 8002bb8:	69ba      	ldr	r2, [r7, #24]
 8002bba:	4313      	orrs	r3, r2
 8002bbc:	61bb      	str	r3, [r7, #24]
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	69ba      	ldr	r2, [r7, #24]
 8002bc2:	605a      	str	r2, [r3, #4]
 8002bc4:	683b      	ldr	r3, [r7, #0]
 8002bc6:	685b      	ldr	r3, [r3, #4]
 8002bc8:	f003 0303 	and.w	r3, r3, #3
 8002bcc:	2b03      	cmp	r3, #3
 8002bce:	d017      	beq.n	8002c00 <HAL_GPIO_Init+0xf0>
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	68db      	ldr	r3, [r3, #12]
 8002bd4:	61bb      	str	r3, [r7, #24]
 8002bd6:	69fb      	ldr	r3, [r7, #28]
 8002bd8:	005b      	lsls	r3, r3, #1
 8002bda:	2203      	movs	r2, #3
 8002bdc:	fa02 f303 	lsl.w	r3, r2, r3
 8002be0:	43db      	mvns	r3, r3
 8002be2:	69ba      	ldr	r2, [r7, #24]
 8002be4:	4013      	ands	r3, r2
 8002be6:	61bb      	str	r3, [r7, #24]
 8002be8:	683b      	ldr	r3, [r7, #0]
 8002bea:	689a      	ldr	r2, [r3, #8]
 8002bec:	69fb      	ldr	r3, [r7, #28]
 8002bee:	005b      	lsls	r3, r3, #1
 8002bf0:	fa02 f303 	lsl.w	r3, r2, r3
 8002bf4:	69ba      	ldr	r2, [r7, #24]
 8002bf6:	4313      	orrs	r3, r2
 8002bf8:	61bb      	str	r3, [r7, #24]
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	69ba      	ldr	r2, [r7, #24]
 8002bfe:	60da      	str	r2, [r3, #12]
 8002c00:	683b      	ldr	r3, [r7, #0]
 8002c02:	685b      	ldr	r3, [r3, #4]
 8002c04:	f003 0303 	and.w	r3, r3, #3
 8002c08:	2b02      	cmp	r3, #2
 8002c0a:	d123      	bne.n	8002c54 <HAL_GPIO_Init+0x144>
 8002c0c:	69fb      	ldr	r3, [r7, #28]
 8002c0e:	08da      	lsrs	r2, r3, #3
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	3208      	adds	r2, #8
 8002c14:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002c18:	61bb      	str	r3, [r7, #24]
 8002c1a:	69fb      	ldr	r3, [r7, #28]
 8002c1c:	f003 0307 	and.w	r3, r3, #7
 8002c20:	009b      	lsls	r3, r3, #2
 8002c22:	220f      	movs	r2, #15
 8002c24:	fa02 f303 	lsl.w	r3, r2, r3
 8002c28:	43db      	mvns	r3, r3
 8002c2a:	69ba      	ldr	r2, [r7, #24]
 8002c2c:	4013      	ands	r3, r2
 8002c2e:	61bb      	str	r3, [r7, #24]
 8002c30:	683b      	ldr	r3, [r7, #0]
 8002c32:	691a      	ldr	r2, [r3, #16]
 8002c34:	69fb      	ldr	r3, [r7, #28]
 8002c36:	f003 0307 	and.w	r3, r3, #7
 8002c3a:	009b      	lsls	r3, r3, #2
 8002c3c:	fa02 f303 	lsl.w	r3, r2, r3
 8002c40:	69ba      	ldr	r2, [r7, #24]
 8002c42:	4313      	orrs	r3, r2
 8002c44:	61bb      	str	r3, [r7, #24]
 8002c46:	69fb      	ldr	r3, [r7, #28]
 8002c48:	08da      	lsrs	r2, r3, #3
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	3208      	adds	r2, #8
 8002c4e:	69b9      	ldr	r1, [r7, #24]
 8002c50:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	61bb      	str	r3, [r7, #24]
 8002c5a:	69fb      	ldr	r3, [r7, #28]
 8002c5c:	005b      	lsls	r3, r3, #1
 8002c5e:	2203      	movs	r2, #3
 8002c60:	fa02 f303 	lsl.w	r3, r2, r3
 8002c64:	43db      	mvns	r3, r3
 8002c66:	69ba      	ldr	r2, [r7, #24]
 8002c68:	4013      	ands	r3, r2
 8002c6a:	61bb      	str	r3, [r7, #24]
 8002c6c:	683b      	ldr	r3, [r7, #0]
 8002c6e:	685b      	ldr	r3, [r3, #4]
 8002c70:	f003 0203 	and.w	r2, r3, #3
 8002c74:	69fb      	ldr	r3, [r7, #28]
 8002c76:	005b      	lsls	r3, r3, #1
 8002c78:	fa02 f303 	lsl.w	r3, r2, r3
 8002c7c:	69ba      	ldr	r2, [r7, #24]
 8002c7e:	4313      	orrs	r3, r2
 8002c80:	61bb      	str	r3, [r7, #24]
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	69ba      	ldr	r2, [r7, #24]
 8002c86:	601a      	str	r2, [r3, #0]
 8002c88:	683b      	ldr	r3, [r7, #0]
 8002c8a:	685b      	ldr	r3, [r3, #4]
 8002c8c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002c90:	2b00      	cmp	r3, #0
 8002c92:	f000 80b4 	beq.w	8002dfe <HAL_GPIO_Init+0x2ee>
 8002c96:	2300      	movs	r3, #0
 8002c98:	60fb      	str	r3, [r7, #12]
 8002c9a:	4b60      	ldr	r3, [pc, #384]	@ (8002e1c <HAL_GPIO_Init+0x30c>)
 8002c9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002c9e:	4a5f      	ldr	r2, [pc, #380]	@ (8002e1c <HAL_GPIO_Init+0x30c>)
 8002ca0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002ca4:	6453      	str	r3, [r2, #68]	@ 0x44
 8002ca6:	4b5d      	ldr	r3, [pc, #372]	@ (8002e1c <HAL_GPIO_Init+0x30c>)
 8002ca8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002caa:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002cae:	60fb      	str	r3, [r7, #12]
 8002cb0:	68fb      	ldr	r3, [r7, #12]
 8002cb2:	4a5b      	ldr	r2, [pc, #364]	@ (8002e20 <HAL_GPIO_Init+0x310>)
 8002cb4:	69fb      	ldr	r3, [r7, #28]
 8002cb6:	089b      	lsrs	r3, r3, #2
 8002cb8:	3302      	adds	r3, #2
 8002cba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002cbe:	61bb      	str	r3, [r7, #24]
 8002cc0:	69fb      	ldr	r3, [r7, #28]
 8002cc2:	f003 0303 	and.w	r3, r3, #3
 8002cc6:	009b      	lsls	r3, r3, #2
 8002cc8:	220f      	movs	r2, #15
 8002cca:	fa02 f303 	lsl.w	r3, r2, r3
 8002cce:	43db      	mvns	r3, r3
 8002cd0:	69ba      	ldr	r2, [r7, #24]
 8002cd2:	4013      	ands	r3, r2
 8002cd4:	61bb      	str	r3, [r7, #24]
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	4a52      	ldr	r2, [pc, #328]	@ (8002e24 <HAL_GPIO_Init+0x314>)
 8002cda:	4293      	cmp	r3, r2
 8002cdc:	d02b      	beq.n	8002d36 <HAL_GPIO_Init+0x226>
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	4a51      	ldr	r2, [pc, #324]	@ (8002e28 <HAL_GPIO_Init+0x318>)
 8002ce2:	4293      	cmp	r3, r2
 8002ce4:	d025      	beq.n	8002d32 <HAL_GPIO_Init+0x222>
 8002ce6:	687b      	ldr	r3, [r7, #4]
 8002ce8:	4a50      	ldr	r2, [pc, #320]	@ (8002e2c <HAL_GPIO_Init+0x31c>)
 8002cea:	4293      	cmp	r3, r2
 8002cec:	d01f      	beq.n	8002d2e <HAL_GPIO_Init+0x21e>
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	4a4f      	ldr	r2, [pc, #316]	@ (8002e30 <HAL_GPIO_Init+0x320>)
 8002cf2:	4293      	cmp	r3, r2
 8002cf4:	d019      	beq.n	8002d2a <HAL_GPIO_Init+0x21a>
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	4a4e      	ldr	r2, [pc, #312]	@ (8002e34 <HAL_GPIO_Init+0x324>)
 8002cfa:	4293      	cmp	r3, r2
 8002cfc:	d013      	beq.n	8002d26 <HAL_GPIO_Init+0x216>
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	4a4d      	ldr	r2, [pc, #308]	@ (8002e38 <HAL_GPIO_Init+0x328>)
 8002d02:	4293      	cmp	r3, r2
 8002d04:	d00d      	beq.n	8002d22 <HAL_GPIO_Init+0x212>
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	4a4c      	ldr	r2, [pc, #304]	@ (8002e3c <HAL_GPIO_Init+0x32c>)
 8002d0a:	4293      	cmp	r3, r2
 8002d0c:	d007      	beq.n	8002d1e <HAL_GPIO_Init+0x20e>
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	4a4b      	ldr	r2, [pc, #300]	@ (8002e40 <HAL_GPIO_Init+0x330>)
 8002d12:	4293      	cmp	r3, r2
 8002d14:	d101      	bne.n	8002d1a <HAL_GPIO_Init+0x20a>
 8002d16:	2307      	movs	r3, #7
 8002d18:	e00e      	b.n	8002d38 <HAL_GPIO_Init+0x228>
 8002d1a:	2308      	movs	r3, #8
 8002d1c:	e00c      	b.n	8002d38 <HAL_GPIO_Init+0x228>
 8002d1e:	2306      	movs	r3, #6
 8002d20:	e00a      	b.n	8002d38 <HAL_GPIO_Init+0x228>
 8002d22:	2305      	movs	r3, #5
 8002d24:	e008      	b.n	8002d38 <HAL_GPIO_Init+0x228>
 8002d26:	2304      	movs	r3, #4
 8002d28:	e006      	b.n	8002d38 <HAL_GPIO_Init+0x228>
 8002d2a:	2303      	movs	r3, #3
 8002d2c:	e004      	b.n	8002d38 <HAL_GPIO_Init+0x228>
 8002d2e:	2302      	movs	r3, #2
 8002d30:	e002      	b.n	8002d38 <HAL_GPIO_Init+0x228>
 8002d32:	2301      	movs	r3, #1
 8002d34:	e000      	b.n	8002d38 <HAL_GPIO_Init+0x228>
 8002d36:	2300      	movs	r3, #0
 8002d38:	69fa      	ldr	r2, [r7, #28]
 8002d3a:	f002 0203 	and.w	r2, r2, #3
 8002d3e:	0092      	lsls	r2, r2, #2
 8002d40:	4093      	lsls	r3, r2
 8002d42:	69ba      	ldr	r2, [r7, #24]
 8002d44:	4313      	orrs	r3, r2
 8002d46:	61bb      	str	r3, [r7, #24]
 8002d48:	4935      	ldr	r1, [pc, #212]	@ (8002e20 <HAL_GPIO_Init+0x310>)
 8002d4a:	69fb      	ldr	r3, [r7, #28]
 8002d4c:	089b      	lsrs	r3, r3, #2
 8002d4e:	3302      	adds	r3, #2
 8002d50:	69ba      	ldr	r2, [r7, #24]
 8002d52:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002d56:	4b3b      	ldr	r3, [pc, #236]	@ (8002e44 <HAL_GPIO_Init+0x334>)
 8002d58:	689b      	ldr	r3, [r3, #8]
 8002d5a:	61bb      	str	r3, [r7, #24]
 8002d5c:	693b      	ldr	r3, [r7, #16]
 8002d5e:	43db      	mvns	r3, r3
 8002d60:	69ba      	ldr	r2, [r7, #24]
 8002d62:	4013      	ands	r3, r2
 8002d64:	61bb      	str	r3, [r7, #24]
 8002d66:	683b      	ldr	r3, [r7, #0]
 8002d68:	685b      	ldr	r3, [r3, #4]
 8002d6a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	d003      	beq.n	8002d7a <HAL_GPIO_Init+0x26a>
 8002d72:	69ba      	ldr	r2, [r7, #24]
 8002d74:	693b      	ldr	r3, [r7, #16]
 8002d76:	4313      	orrs	r3, r2
 8002d78:	61bb      	str	r3, [r7, #24]
 8002d7a:	4a32      	ldr	r2, [pc, #200]	@ (8002e44 <HAL_GPIO_Init+0x334>)
 8002d7c:	69bb      	ldr	r3, [r7, #24]
 8002d7e:	6093      	str	r3, [r2, #8]
 8002d80:	4b30      	ldr	r3, [pc, #192]	@ (8002e44 <HAL_GPIO_Init+0x334>)
 8002d82:	68db      	ldr	r3, [r3, #12]
 8002d84:	61bb      	str	r3, [r7, #24]
 8002d86:	693b      	ldr	r3, [r7, #16]
 8002d88:	43db      	mvns	r3, r3
 8002d8a:	69ba      	ldr	r2, [r7, #24]
 8002d8c:	4013      	ands	r3, r2
 8002d8e:	61bb      	str	r3, [r7, #24]
 8002d90:	683b      	ldr	r3, [r7, #0]
 8002d92:	685b      	ldr	r3, [r3, #4]
 8002d94:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002d98:	2b00      	cmp	r3, #0
 8002d9a:	d003      	beq.n	8002da4 <HAL_GPIO_Init+0x294>
 8002d9c:	69ba      	ldr	r2, [r7, #24]
 8002d9e:	693b      	ldr	r3, [r7, #16]
 8002da0:	4313      	orrs	r3, r2
 8002da2:	61bb      	str	r3, [r7, #24]
 8002da4:	4a27      	ldr	r2, [pc, #156]	@ (8002e44 <HAL_GPIO_Init+0x334>)
 8002da6:	69bb      	ldr	r3, [r7, #24]
 8002da8:	60d3      	str	r3, [r2, #12]
 8002daa:	4b26      	ldr	r3, [pc, #152]	@ (8002e44 <HAL_GPIO_Init+0x334>)
 8002dac:	685b      	ldr	r3, [r3, #4]
 8002dae:	61bb      	str	r3, [r7, #24]
 8002db0:	693b      	ldr	r3, [r7, #16]
 8002db2:	43db      	mvns	r3, r3
 8002db4:	69ba      	ldr	r2, [r7, #24]
 8002db6:	4013      	ands	r3, r2
 8002db8:	61bb      	str	r3, [r7, #24]
 8002dba:	683b      	ldr	r3, [r7, #0]
 8002dbc:	685b      	ldr	r3, [r3, #4]
 8002dbe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	d003      	beq.n	8002dce <HAL_GPIO_Init+0x2be>
 8002dc6:	69ba      	ldr	r2, [r7, #24]
 8002dc8:	693b      	ldr	r3, [r7, #16]
 8002dca:	4313      	orrs	r3, r2
 8002dcc:	61bb      	str	r3, [r7, #24]
 8002dce:	4a1d      	ldr	r2, [pc, #116]	@ (8002e44 <HAL_GPIO_Init+0x334>)
 8002dd0:	69bb      	ldr	r3, [r7, #24]
 8002dd2:	6053      	str	r3, [r2, #4]
 8002dd4:	4b1b      	ldr	r3, [pc, #108]	@ (8002e44 <HAL_GPIO_Init+0x334>)
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	61bb      	str	r3, [r7, #24]
 8002dda:	693b      	ldr	r3, [r7, #16]
 8002ddc:	43db      	mvns	r3, r3
 8002dde:	69ba      	ldr	r2, [r7, #24]
 8002de0:	4013      	ands	r3, r2
 8002de2:	61bb      	str	r3, [r7, #24]
 8002de4:	683b      	ldr	r3, [r7, #0]
 8002de6:	685b      	ldr	r3, [r3, #4]
 8002de8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002dec:	2b00      	cmp	r3, #0
 8002dee:	d003      	beq.n	8002df8 <HAL_GPIO_Init+0x2e8>
 8002df0:	69ba      	ldr	r2, [r7, #24]
 8002df2:	693b      	ldr	r3, [r7, #16]
 8002df4:	4313      	orrs	r3, r2
 8002df6:	61bb      	str	r3, [r7, #24]
 8002df8:	4a12      	ldr	r2, [pc, #72]	@ (8002e44 <HAL_GPIO_Init+0x334>)
 8002dfa:	69bb      	ldr	r3, [r7, #24]
 8002dfc:	6013      	str	r3, [r2, #0]
 8002dfe:	69fb      	ldr	r3, [r7, #28]
 8002e00:	3301      	adds	r3, #1
 8002e02:	61fb      	str	r3, [r7, #28]
 8002e04:	69fb      	ldr	r3, [r7, #28]
 8002e06:	2b0f      	cmp	r3, #15
 8002e08:	f67f ae90 	bls.w	8002b2c <HAL_GPIO_Init+0x1c>
 8002e0c:	bf00      	nop
 8002e0e:	bf00      	nop
 8002e10:	3724      	adds	r7, #36	@ 0x24
 8002e12:	46bd      	mov	sp, r7
 8002e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e18:	4770      	bx	lr
 8002e1a:	bf00      	nop
 8002e1c:	40023800 	.word	0x40023800
 8002e20:	40013800 	.word	0x40013800
 8002e24:	40020000 	.word	0x40020000
 8002e28:	40020400 	.word	0x40020400
 8002e2c:	40020800 	.word	0x40020800
 8002e30:	40020c00 	.word	0x40020c00
 8002e34:	40021000 	.word	0x40021000
 8002e38:	40021400 	.word	0x40021400
 8002e3c:	40021800 	.word	0x40021800
 8002e40:	40021c00 	.word	0x40021c00
 8002e44:	40013c00 	.word	0x40013c00

08002e48 <HAL_GPIO_WritePin>:
 8002e48:	b480      	push	{r7}
 8002e4a:	b083      	sub	sp, #12
 8002e4c:	af00      	add	r7, sp, #0
 8002e4e:	6078      	str	r0, [r7, #4]
 8002e50:	460b      	mov	r3, r1
 8002e52:	807b      	strh	r3, [r7, #2]
 8002e54:	4613      	mov	r3, r2
 8002e56:	707b      	strb	r3, [r7, #1]
 8002e58:	787b      	ldrb	r3, [r7, #1]
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d003      	beq.n	8002e66 <HAL_GPIO_WritePin+0x1e>
 8002e5e:	887a      	ldrh	r2, [r7, #2]
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	619a      	str	r2, [r3, #24]
 8002e64:	e003      	b.n	8002e6e <HAL_GPIO_WritePin+0x26>
 8002e66:	887b      	ldrh	r3, [r7, #2]
 8002e68:	041a      	lsls	r2, r3, #16
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	619a      	str	r2, [r3, #24]
 8002e6e:	bf00      	nop
 8002e70:	370c      	adds	r7, #12
 8002e72:	46bd      	mov	sp, r7
 8002e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e78:	4770      	bx	lr
	...

08002e7c <HAL_RCC_OscConfig>:
 8002e7c:	b580      	push	{r7, lr}
 8002e7e:	b086      	sub	sp, #24
 8002e80:	af00      	add	r7, sp, #0
 8002e82:	6078      	str	r0, [r7, #4]
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	2b00      	cmp	r3, #0
 8002e88:	d101      	bne.n	8002e8e <HAL_RCC_OscConfig+0x12>
 8002e8a:	2301      	movs	r3, #1
 8002e8c:	e267      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	f003 0301 	and.w	r3, r3, #1
 8002e96:	2b00      	cmp	r3, #0
 8002e98:	d075      	beq.n	8002f86 <HAL_RCC_OscConfig+0x10a>
 8002e9a:	4b88      	ldr	r3, [pc, #544]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002e9c:	689b      	ldr	r3, [r3, #8]
 8002e9e:	f003 030c 	and.w	r3, r3, #12
 8002ea2:	2b04      	cmp	r3, #4
 8002ea4:	d00c      	beq.n	8002ec0 <HAL_RCC_OscConfig+0x44>
 8002ea6:	4b85      	ldr	r3, [pc, #532]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002ea8:	689b      	ldr	r3, [r3, #8]
 8002eaa:	f003 030c 	and.w	r3, r3, #12
 8002eae:	2b08      	cmp	r3, #8
 8002eb0:	d112      	bne.n	8002ed8 <HAL_RCC_OscConfig+0x5c>
 8002eb2:	4b82      	ldr	r3, [pc, #520]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002eb4:	685b      	ldr	r3, [r3, #4]
 8002eb6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002eba:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002ebe:	d10b      	bne.n	8002ed8 <HAL_RCC_OscConfig+0x5c>
 8002ec0:	4b7e      	ldr	r3, [pc, #504]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002ec8:	2b00      	cmp	r3, #0
 8002eca:	d05b      	beq.n	8002f84 <HAL_RCC_OscConfig+0x108>
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	685b      	ldr	r3, [r3, #4]
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d157      	bne.n	8002f84 <HAL_RCC_OscConfig+0x108>
 8002ed4:	2301      	movs	r3, #1
 8002ed6:	e242      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	685b      	ldr	r3, [r3, #4]
 8002edc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002ee0:	d106      	bne.n	8002ef0 <HAL_RCC_OscConfig+0x74>
 8002ee2:	4b76      	ldr	r3, [pc, #472]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	4a75      	ldr	r2, [pc, #468]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002ee8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002eec:	6013      	str	r3, [r2, #0]
 8002eee:	e01d      	b.n	8002f2c <HAL_RCC_OscConfig+0xb0>
 8002ef0:	687b      	ldr	r3, [r7, #4]
 8002ef2:	685b      	ldr	r3, [r3, #4]
 8002ef4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002ef8:	d10c      	bne.n	8002f14 <HAL_RCC_OscConfig+0x98>
 8002efa:	4b70      	ldr	r3, [pc, #448]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	4a6f      	ldr	r2, [pc, #444]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002f00:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002f04:	6013      	str	r3, [r2, #0]
 8002f06:	4b6d      	ldr	r3, [pc, #436]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	4a6c      	ldr	r2, [pc, #432]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002f0c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002f10:	6013      	str	r3, [r2, #0]
 8002f12:	e00b      	b.n	8002f2c <HAL_RCC_OscConfig+0xb0>
 8002f14:	4b69      	ldr	r3, [pc, #420]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	4a68      	ldr	r2, [pc, #416]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002f1a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002f1e:	6013      	str	r3, [r2, #0]
 8002f20:	4b66      	ldr	r3, [pc, #408]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	4a65      	ldr	r2, [pc, #404]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002f26:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002f2a:	6013      	str	r3, [r2, #0]
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	685b      	ldr	r3, [r3, #4]
 8002f30:	2b00      	cmp	r3, #0
 8002f32:	d013      	beq.n	8002f5c <HAL_RCC_OscConfig+0xe0>
 8002f34:	f7ff fc18 	bl	8002768 <HAL_GetTick>
 8002f38:	6138      	str	r0, [r7, #16]
 8002f3a:	e008      	b.n	8002f4e <HAL_RCC_OscConfig+0xd2>
 8002f3c:	f7ff fc14 	bl	8002768 <HAL_GetTick>
 8002f40:	4602      	mov	r2, r0
 8002f42:	693b      	ldr	r3, [r7, #16]
 8002f44:	1ad3      	subs	r3, r2, r3
 8002f46:	2b64      	cmp	r3, #100	@ 0x64
 8002f48:	d901      	bls.n	8002f4e <HAL_RCC_OscConfig+0xd2>
 8002f4a:	2303      	movs	r3, #3
 8002f4c:	e207      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 8002f4e:	4b5b      	ldr	r3, [pc, #364]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d0f0      	beq.n	8002f3c <HAL_RCC_OscConfig+0xc0>
 8002f5a:	e014      	b.n	8002f86 <HAL_RCC_OscConfig+0x10a>
 8002f5c:	f7ff fc04 	bl	8002768 <HAL_GetTick>
 8002f60:	6138      	str	r0, [r7, #16]
 8002f62:	e008      	b.n	8002f76 <HAL_RCC_OscConfig+0xfa>
 8002f64:	f7ff fc00 	bl	8002768 <HAL_GetTick>
 8002f68:	4602      	mov	r2, r0
 8002f6a:	693b      	ldr	r3, [r7, #16]
 8002f6c:	1ad3      	subs	r3, r2, r3
 8002f6e:	2b64      	cmp	r3, #100	@ 0x64
 8002f70:	d901      	bls.n	8002f76 <HAL_RCC_OscConfig+0xfa>
 8002f72:	2303      	movs	r3, #3
 8002f74:	e1f3      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 8002f76:	4b51      	ldr	r3, [pc, #324]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d1f0      	bne.n	8002f64 <HAL_RCC_OscConfig+0xe8>
 8002f82:	e000      	b.n	8002f86 <HAL_RCC_OscConfig+0x10a>
 8002f84:	bf00      	nop
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	681b      	ldr	r3, [r3, #0]
 8002f8a:	f003 0302 	and.w	r3, r3, #2
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d063      	beq.n	800305a <HAL_RCC_OscConfig+0x1de>
 8002f92:	4b4a      	ldr	r3, [pc, #296]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002f94:	689b      	ldr	r3, [r3, #8]
 8002f96:	f003 030c 	and.w	r3, r3, #12
 8002f9a:	2b00      	cmp	r3, #0
 8002f9c:	d00b      	beq.n	8002fb6 <HAL_RCC_OscConfig+0x13a>
 8002f9e:	4b47      	ldr	r3, [pc, #284]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002fa0:	689b      	ldr	r3, [r3, #8]
 8002fa2:	f003 030c 	and.w	r3, r3, #12
 8002fa6:	2b08      	cmp	r3, #8
 8002fa8:	d11c      	bne.n	8002fe4 <HAL_RCC_OscConfig+0x168>
 8002faa:	4b44      	ldr	r3, [pc, #272]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002fac:	685b      	ldr	r3, [r3, #4]
 8002fae:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d116      	bne.n	8002fe4 <HAL_RCC_OscConfig+0x168>
 8002fb6:	4b41      	ldr	r3, [pc, #260]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002fb8:	681b      	ldr	r3, [r3, #0]
 8002fba:	f003 0302 	and.w	r3, r3, #2
 8002fbe:	2b00      	cmp	r3, #0
 8002fc0:	d005      	beq.n	8002fce <HAL_RCC_OscConfig+0x152>
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	68db      	ldr	r3, [r3, #12]
 8002fc6:	2b01      	cmp	r3, #1
 8002fc8:	d001      	beq.n	8002fce <HAL_RCC_OscConfig+0x152>
 8002fca:	2301      	movs	r3, #1
 8002fcc:	e1c7      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 8002fce:	4b3b      	ldr	r3, [pc, #236]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	691b      	ldr	r3, [r3, #16]
 8002fda:	00db      	lsls	r3, r3, #3
 8002fdc:	4937      	ldr	r1, [pc, #220]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8002fde:	4313      	orrs	r3, r2
 8002fe0:	600b      	str	r3, [r1, #0]
 8002fe2:	e03a      	b.n	800305a <HAL_RCC_OscConfig+0x1de>
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	68db      	ldr	r3, [r3, #12]
 8002fe8:	2b00      	cmp	r3, #0
 8002fea:	d020      	beq.n	800302e <HAL_RCC_OscConfig+0x1b2>
 8002fec:	4b34      	ldr	r3, [pc, #208]	@ (80030c0 <HAL_RCC_OscConfig+0x244>)
 8002fee:	2201      	movs	r2, #1
 8002ff0:	601a      	str	r2, [r3, #0]
 8002ff2:	f7ff fbb9 	bl	8002768 <HAL_GetTick>
 8002ff6:	6138      	str	r0, [r7, #16]
 8002ff8:	e008      	b.n	800300c <HAL_RCC_OscConfig+0x190>
 8002ffa:	f7ff fbb5 	bl	8002768 <HAL_GetTick>
 8002ffe:	4602      	mov	r2, r0
 8003000:	693b      	ldr	r3, [r7, #16]
 8003002:	1ad3      	subs	r3, r2, r3
 8003004:	2b02      	cmp	r3, #2
 8003006:	d901      	bls.n	800300c <HAL_RCC_OscConfig+0x190>
 8003008:	2303      	movs	r3, #3
 800300a:	e1a8      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 800300c:	4b2b      	ldr	r3, [pc, #172]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 800300e:	681b      	ldr	r3, [r3, #0]
 8003010:	f003 0302 	and.w	r3, r3, #2
 8003014:	2b00      	cmp	r3, #0
 8003016:	d0f0      	beq.n	8002ffa <HAL_RCC_OscConfig+0x17e>
 8003018:	4b28      	ldr	r3, [pc, #160]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 800301a:	681b      	ldr	r3, [r3, #0]
 800301c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	691b      	ldr	r3, [r3, #16]
 8003024:	00db      	lsls	r3, r3, #3
 8003026:	4925      	ldr	r1, [pc, #148]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8003028:	4313      	orrs	r3, r2
 800302a:	600b      	str	r3, [r1, #0]
 800302c:	e015      	b.n	800305a <HAL_RCC_OscConfig+0x1de>
 800302e:	4b24      	ldr	r3, [pc, #144]	@ (80030c0 <HAL_RCC_OscConfig+0x244>)
 8003030:	2200      	movs	r2, #0
 8003032:	601a      	str	r2, [r3, #0]
 8003034:	f7ff fb98 	bl	8002768 <HAL_GetTick>
 8003038:	6138      	str	r0, [r7, #16]
 800303a:	e008      	b.n	800304e <HAL_RCC_OscConfig+0x1d2>
 800303c:	f7ff fb94 	bl	8002768 <HAL_GetTick>
 8003040:	4602      	mov	r2, r0
 8003042:	693b      	ldr	r3, [r7, #16]
 8003044:	1ad3      	subs	r3, r2, r3
 8003046:	2b02      	cmp	r3, #2
 8003048:	d901      	bls.n	800304e <HAL_RCC_OscConfig+0x1d2>
 800304a:	2303      	movs	r3, #3
 800304c:	e187      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 800304e:	4b1b      	ldr	r3, [pc, #108]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8003050:	681b      	ldr	r3, [r3, #0]
 8003052:	f003 0302 	and.w	r3, r3, #2
 8003056:	2b00      	cmp	r3, #0
 8003058:	d1f0      	bne.n	800303c <HAL_RCC_OscConfig+0x1c0>
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	f003 0308 	and.w	r3, r3, #8
 8003062:	2b00      	cmp	r3, #0
 8003064:	d036      	beq.n	80030d4 <HAL_RCC_OscConfig+0x258>
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	695b      	ldr	r3, [r3, #20]
 800306a:	2b00      	cmp	r3, #0
 800306c:	d016      	beq.n	800309c <HAL_RCC_OscConfig+0x220>
 800306e:	4b15      	ldr	r3, [pc, #84]	@ (80030c4 <HAL_RCC_OscConfig+0x248>)
 8003070:	2201      	movs	r2, #1
 8003072:	601a      	str	r2, [r3, #0]
 8003074:	f7ff fb78 	bl	8002768 <HAL_GetTick>
 8003078:	6138      	str	r0, [r7, #16]
 800307a:	e008      	b.n	800308e <HAL_RCC_OscConfig+0x212>
 800307c:	f7ff fb74 	bl	8002768 <HAL_GetTick>
 8003080:	4602      	mov	r2, r0
 8003082:	693b      	ldr	r3, [r7, #16]
 8003084:	1ad3      	subs	r3, r2, r3
 8003086:	2b02      	cmp	r3, #2
 8003088:	d901      	bls.n	800308e <HAL_RCC_OscConfig+0x212>
 800308a:	2303      	movs	r3, #3
 800308c:	e167      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 800308e:	4b0b      	ldr	r3, [pc, #44]	@ (80030bc <HAL_RCC_OscConfig+0x240>)
 8003090:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003092:	f003 0302 	and.w	r3, r3, #2
 8003096:	2b00      	cmp	r3, #0
 8003098:	d0f0      	beq.n	800307c <HAL_RCC_OscConfig+0x200>
 800309a:	e01b      	b.n	80030d4 <HAL_RCC_OscConfig+0x258>
 800309c:	4b09      	ldr	r3, [pc, #36]	@ (80030c4 <HAL_RCC_OscConfig+0x248>)
 800309e:	2200      	movs	r2, #0
 80030a0:	601a      	str	r2, [r3, #0]
 80030a2:	f7ff fb61 	bl	8002768 <HAL_GetTick>
 80030a6:	6138      	str	r0, [r7, #16]
 80030a8:	e00e      	b.n	80030c8 <HAL_RCC_OscConfig+0x24c>
 80030aa:	f7ff fb5d 	bl	8002768 <HAL_GetTick>
 80030ae:	4602      	mov	r2, r0
 80030b0:	693b      	ldr	r3, [r7, #16]
 80030b2:	1ad3      	subs	r3, r2, r3
 80030b4:	2b02      	cmp	r3, #2
 80030b6:	d907      	bls.n	80030c8 <HAL_RCC_OscConfig+0x24c>
 80030b8:	2303      	movs	r3, #3
 80030ba:	e150      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 80030bc:	40023800 	.word	0x40023800
 80030c0:	42470000 	.word	0x42470000
 80030c4:	42470e80 	.word	0x42470e80
 80030c8:	4b88      	ldr	r3, [pc, #544]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 80030ca:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80030cc:	f003 0302 	and.w	r3, r3, #2
 80030d0:	2b00      	cmp	r3, #0
 80030d2:	d1ea      	bne.n	80030aa <HAL_RCC_OscConfig+0x22e>
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	f003 0304 	and.w	r3, r3, #4
 80030dc:	2b00      	cmp	r3, #0
 80030de:	f000 8097 	beq.w	8003210 <HAL_RCC_OscConfig+0x394>
 80030e2:	2300      	movs	r3, #0
 80030e4:	75fb      	strb	r3, [r7, #23]
 80030e6:	4b81      	ldr	r3, [pc, #516]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 80030e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030ea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80030ee:	2b00      	cmp	r3, #0
 80030f0:	d10f      	bne.n	8003112 <HAL_RCC_OscConfig+0x296>
 80030f2:	2300      	movs	r3, #0
 80030f4:	60bb      	str	r3, [r7, #8]
 80030f6:	4b7d      	ldr	r3, [pc, #500]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 80030f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030fa:	4a7c      	ldr	r2, [pc, #496]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 80030fc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003100:	6413      	str	r3, [r2, #64]	@ 0x40
 8003102:	4b7a      	ldr	r3, [pc, #488]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 8003104:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003106:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800310a:	60bb      	str	r3, [r7, #8]
 800310c:	68bb      	ldr	r3, [r7, #8]
 800310e:	2301      	movs	r3, #1
 8003110:	75fb      	strb	r3, [r7, #23]
 8003112:	4b77      	ldr	r3, [pc, #476]	@ (80032f0 <HAL_RCC_OscConfig+0x474>)
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800311a:	2b00      	cmp	r3, #0
 800311c:	d118      	bne.n	8003150 <HAL_RCC_OscConfig+0x2d4>
 800311e:	4b74      	ldr	r3, [pc, #464]	@ (80032f0 <HAL_RCC_OscConfig+0x474>)
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	4a73      	ldr	r2, [pc, #460]	@ (80032f0 <HAL_RCC_OscConfig+0x474>)
 8003124:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003128:	6013      	str	r3, [r2, #0]
 800312a:	f7ff fb1d 	bl	8002768 <HAL_GetTick>
 800312e:	6138      	str	r0, [r7, #16]
 8003130:	e008      	b.n	8003144 <HAL_RCC_OscConfig+0x2c8>
 8003132:	f7ff fb19 	bl	8002768 <HAL_GetTick>
 8003136:	4602      	mov	r2, r0
 8003138:	693b      	ldr	r3, [r7, #16]
 800313a:	1ad3      	subs	r3, r2, r3
 800313c:	2b02      	cmp	r3, #2
 800313e:	d901      	bls.n	8003144 <HAL_RCC_OscConfig+0x2c8>
 8003140:	2303      	movs	r3, #3
 8003142:	e10c      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 8003144:	4b6a      	ldr	r3, [pc, #424]	@ (80032f0 <HAL_RCC_OscConfig+0x474>)
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800314c:	2b00      	cmp	r3, #0
 800314e:	d0f0      	beq.n	8003132 <HAL_RCC_OscConfig+0x2b6>
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	689b      	ldr	r3, [r3, #8]
 8003154:	2b01      	cmp	r3, #1
 8003156:	d106      	bne.n	8003166 <HAL_RCC_OscConfig+0x2ea>
 8003158:	4b64      	ldr	r3, [pc, #400]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 800315a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800315c:	4a63      	ldr	r2, [pc, #396]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 800315e:	f043 0301 	orr.w	r3, r3, #1
 8003162:	6713      	str	r3, [r2, #112]	@ 0x70
 8003164:	e01c      	b.n	80031a0 <HAL_RCC_OscConfig+0x324>
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	689b      	ldr	r3, [r3, #8]
 800316a:	2b05      	cmp	r3, #5
 800316c:	d10c      	bne.n	8003188 <HAL_RCC_OscConfig+0x30c>
 800316e:	4b5f      	ldr	r3, [pc, #380]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 8003170:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003172:	4a5e      	ldr	r2, [pc, #376]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 8003174:	f043 0304 	orr.w	r3, r3, #4
 8003178:	6713      	str	r3, [r2, #112]	@ 0x70
 800317a:	4b5c      	ldr	r3, [pc, #368]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 800317c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800317e:	4a5b      	ldr	r2, [pc, #364]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 8003180:	f043 0301 	orr.w	r3, r3, #1
 8003184:	6713      	str	r3, [r2, #112]	@ 0x70
 8003186:	e00b      	b.n	80031a0 <HAL_RCC_OscConfig+0x324>
 8003188:	4b58      	ldr	r3, [pc, #352]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 800318a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800318c:	4a57      	ldr	r2, [pc, #348]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 800318e:	f023 0301 	bic.w	r3, r3, #1
 8003192:	6713      	str	r3, [r2, #112]	@ 0x70
 8003194:	4b55      	ldr	r3, [pc, #340]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 8003196:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003198:	4a54      	ldr	r2, [pc, #336]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 800319a:	f023 0304 	bic.w	r3, r3, #4
 800319e:	6713      	str	r3, [r2, #112]	@ 0x70
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	689b      	ldr	r3, [r3, #8]
 80031a4:	2b00      	cmp	r3, #0
 80031a6:	d015      	beq.n	80031d4 <HAL_RCC_OscConfig+0x358>
 80031a8:	f7ff fade 	bl	8002768 <HAL_GetTick>
 80031ac:	6138      	str	r0, [r7, #16]
 80031ae:	e00a      	b.n	80031c6 <HAL_RCC_OscConfig+0x34a>
 80031b0:	f7ff fada 	bl	8002768 <HAL_GetTick>
 80031b4:	4602      	mov	r2, r0
 80031b6:	693b      	ldr	r3, [r7, #16]
 80031b8:	1ad3      	subs	r3, r2, r3
 80031ba:	f241 3288 	movw	r2, #5000	@ 0x1388
 80031be:	4293      	cmp	r3, r2
 80031c0:	d901      	bls.n	80031c6 <HAL_RCC_OscConfig+0x34a>
 80031c2:	2303      	movs	r3, #3
 80031c4:	e0cb      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 80031c6:	4b49      	ldr	r3, [pc, #292]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 80031c8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80031ca:	f003 0302 	and.w	r3, r3, #2
 80031ce:	2b00      	cmp	r3, #0
 80031d0:	d0ee      	beq.n	80031b0 <HAL_RCC_OscConfig+0x334>
 80031d2:	e014      	b.n	80031fe <HAL_RCC_OscConfig+0x382>
 80031d4:	f7ff fac8 	bl	8002768 <HAL_GetTick>
 80031d8:	6138      	str	r0, [r7, #16]
 80031da:	e00a      	b.n	80031f2 <HAL_RCC_OscConfig+0x376>
 80031dc:	f7ff fac4 	bl	8002768 <HAL_GetTick>
 80031e0:	4602      	mov	r2, r0
 80031e2:	693b      	ldr	r3, [r7, #16]
 80031e4:	1ad3      	subs	r3, r2, r3
 80031e6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80031ea:	4293      	cmp	r3, r2
 80031ec:	d901      	bls.n	80031f2 <HAL_RCC_OscConfig+0x376>
 80031ee:	2303      	movs	r3, #3
 80031f0:	e0b5      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 80031f2:	4b3e      	ldr	r3, [pc, #248]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 80031f4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80031f6:	f003 0302 	and.w	r3, r3, #2
 80031fa:	2b00      	cmp	r3, #0
 80031fc:	d1ee      	bne.n	80031dc <HAL_RCC_OscConfig+0x360>
 80031fe:	7dfb      	ldrb	r3, [r7, #23]
 8003200:	2b01      	cmp	r3, #1
 8003202:	d105      	bne.n	8003210 <HAL_RCC_OscConfig+0x394>
 8003204:	4b39      	ldr	r3, [pc, #228]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 8003206:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003208:	4a38      	ldr	r2, [pc, #224]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 800320a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800320e:	6413      	str	r3, [r2, #64]	@ 0x40
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	699b      	ldr	r3, [r3, #24]
 8003214:	2b00      	cmp	r3, #0
 8003216:	f000 80a1 	beq.w	800335c <HAL_RCC_OscConfig+0x4e0>
 800321a:	4b34      	ldr	r3, [pc, #208]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 800321c:	689b      	ldr	r3, [r3, #8]
 800321e:	f003 030c 	and.w	r3, r3, #12
 8003222:	2b08      	cmp	r3, #8
 8003224:	d05c      	beq.n	80032e0 <HAL_RCC_OscConfig+0x464>
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	699b      	ldr	r3, [r3, #24]
 800322a:	2b02      	cmp	r3, #2
 800322c:	d141      	bne.n	80032b2 <HAL_RCC_OscConfig+0x436>
 800322e:	4b31      	ldr	r3, [pc, #196]	@ (80032f4 <HAL_RCC_OscConfig+0x478>)
 8003230:	2200      	movs	r2, #0
 8003232:	601a      	str	r2, [r3, #0]
 8003234:	f7ff fa98 	bl	8002768 <HAL_GetTick>
 8003238:	6138      	str	r0, [r7, #16]
 800323a:	e008      	b.n	800324e <HAL_RCC_OscConfig+0x3d2>
 800323c:	f7ff fa94 	bl	8002768 <HAL_GetTick>
 8003240:	4602      	mov	r2, r0
 8003242:	693b      	ldr	r3, [r7, #16]
 8003244:	1ad3      	subs	r3, r2, r3
 8003246:	2b02      	cmp	r3, #2
 8003248:	d901      	bls.n	800324e <HAL_RCC_OscConfig+0x3d2>
 800324a:	2303      	movs	r3, #3
 800324c:	e087      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 800324e:	4b27      	ldr	r3, [pc, #156]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003256:	2b00      	cmp	r3, #0
 8003258:	d1f0      	bne.n	800323c <HAL_RCC_OscConfig+0x3c0>
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	69da      	ldr	r2, [r3, #28]
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	6a1b      	ldr	r3, [r3, #32]
 8003262:	431a      	orrs	r2, r3
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003268:	019b      	lsls	r3, r3, #6
 800326a:	431a      	orrs	r2, r3
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003270:	085b      	lsrs	r3, r3, #1
 8003272:	3b01      	subs	r3, #1
 8003274:	041b      	lsls	r3, r3, #16
 8003276:	431a      	orrs	r2, r3
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800327c:	061b      	lsls	r3, r3, #24
 800327e:	491b      	ldr	r1, [pc, #108]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 8003280:	4313      	orrs	r3, r2
 8003282:	604b      	str	r3, [r1, #4]
 8003284:	4b1b      	ldr	r3, [pc, #108]	@ (80032f4 <HAL_RCC_OscConfig+0x478>)
 8003286:	2201      	movs	r2, #1
 8003288:	601a      	str	r2, [r3, #0]
 800328a:	f7ff fa6d 	bl	8002768 <HAL_GetTick>
 800328e:	6138      	str	r0, [r7, #16]
 8003290:	e008      	b.n	80032a4 <HAL_RCC_OscConfig+0x428>
 8003292:	f7ff fa69 	bl	8002768 <HAL_GetTick>
 8003296:	4602      	mov	r2, r0
 8003298:	693b      	ldr	r3, [r7, #16]
 800329a:	1ad3      	subs	r3, r2, r3
 800329c:	2b02      	cmp	r3, #2
 800329e:	d901      	bls.n	80032a4 <HAL_RCC_OscConfig+0x428>
 80032a0:	2303      	movs	r3, #3
 80032a2:	e05c      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 80032a4:	4b11      	ldr	r3, [pc, #68]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80032ac:	2b00      	cmp	r3, #0
 80032ae:	d0f0      	beq.n	8003292 <HAL_RCC_OscConfig+0x416>
 80032b0:	e054      	b.n	800335c <HAL_RCC_OscConfig+0x4e0>
 80032b2:	4b10      	ldr	r3, [pc, #64]	@ (80032f4 <HAL_RCC_OscConfig+0x478>)
 80032b4:	2200      	movs	r2, #0
 80032b6:	601a      	str	r2, [r3, #0]
 80032b8:	f7ff fa56 	bl	8002768 <HAL_GetTick>
 80032bc:	6138      	str	r0, [r7, #16]
 80032be:	e008      	b.n	80032d2 <HAL_RCC_OscConfig+0x456>
 80032c0:	f7ff fa52 	bl	8002768 <HAL_GetTick>
 80032c4:	4602      	mov	r2, r0
 80032c6:	693b      	ldr	r3, [r7, #16]
 80032c8:	1ad3      	subs	r3, r2, r3
 80032ca:	2b02      	cmp	r3, #2
 80032cc:	d901      	bls.n	80032d2 <HAL_RCC_OscConfig+0x456>
 80032ce:	2303      	movs	r3, #3
 80032d0:	e045      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 80032d2:	4b06      	ldr	r3, [pc, #24]	@ (80032ec <HAL_RCC_OscConfig+0x470>)
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80032da:	2b00      	cmp	r3, #0
 80032dc:	d1f0      	bne.n	80032c0 <HAL_RCC_OscConfig+0x444>
 80032de:	e03d      	b.n	800335c <HAL_RCC_OscConfig+0x4e0>
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	699b      	ldr	r3, [r3, #24]
 80032e4:	2b01      	cmp	r3, #1
 80032e6:	d107      	bne.n	80032f8 <HAL_RCC_OscConfig+0x47c>
 80032e8:	2301      	movs	r3, #1
 80032ea:	e038      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 80032ec:	40023800 	.word	0x40023800
 80032f0:	40007000 	.word	0x40007000
 80032f4:	42470060 	.word	0x42470060
 80032f8:	4b1b      	ldr	r3, [pc, #108]	@ (8003368 <HAL_RCC_OscConfig+0x4ec>)
 80032fa:	685b      	ldr	r3, [r3, #4]
 80032fc:	60fb      	str	r3, [r7, #12]
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	699b      	ldr	r3, [r3, #24]
 8003302:	2b01      	cmp	r3, #1
 8003304:	d028      	beq.n	8003358 <HAL_RCC_OscConfig+0x4dc>
 8003306:	68fb      	ldr	r3, [r7, #12]
 8003308:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	69db      	ldr	r3, [r3, #28]
 8003310:	429a      	cmp	r2, r3
 8003312:	d121      	bne.n	8003358 <HAL_RCC_OscConfig+0x4dc>
 8003314:	68fb      	ldr	r3, [r7, #12]
 8003316:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	6a1b      	ldr	r3, [r3, #32]
 800331e:	429a      	cmp	r2, r3
 8003320:	d11a      	bne.n	8003358 <HAL_RCC_OscConfig+0x4dc>
 8003322:	68fa      	ldr	r2, [r7, #12]
 8003324:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8003328:	4013      	ands	r3, r2
 800332a:	687a      	ldr	r2, [r7, #4]
 800332c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800332e:	0192      	lsls	r2, r2, #6
 8003330:	4293      	cmp	r3, r2
 8003332:	d111      	bne.n	8003358 <HAL_RCC_OscConfig+0x4dc>
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800333e:	085b      	lsrs	r3, r3, #1
 8003340:	3b01      	subs	r3, #1
 8003342:	041b      	lsls	r3, r3, #16
 8003344:	429a      	cmp	r2, r3
 8003346:	d107      	bne.n	8003358 <HAL_RCC_OscConfig+0x4dc>
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003352:	061b      	lsls	r3, r3, #24
 8003354:	429a      	cmp	r2, r3
 8003356:	d001      	beq.n	800335c <HAL_RCC_OscConfig+0x4e0>
 8003358:	2301      	movs	r3, #1
 800335a:	e000      	b.n	800335e <HAL_RCC_OscConfig+0x4e2>
 800335c:	2300      	movs	r3, #0
 800335e:	4618      	mov	r0, r3
 8003360:	3718      	adds	r7, #24
 8003362:	46bd      	mov	sp, r7
 8003364:	bd80      	pop	{r7, pc}
 8003366:	bf00      	nop
 8003368:	40023800 	.word	0x40023800

0800336c <HAL_RCC_ClockConfig>:
 800336c:	b580      	push	{r7, lr}
 800336e:	b084      	sub	sp, #16
 8003370:	af00      	add	r7, sp, #0
 8003372:	6078      	str	r0, [r7, #4]
 8003374:	6039      	str	r1, [r7, #0]
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	2b00      	cmp	r3, #0
 800337a:	d101      	bne.n	8003380 <HAL_RCC_ClockConfig+0x14>
 800337c:	2301      	movs	r3, #1
 800337e:	e0cc      	b.n	800351a <HAL_RCC_ClockConfig+0x1ae>
 8003380:	4b68      	ldr	r3, [pc, #416]	@ (8003524 <HAL_RCC_ClockConfig+0x1b8>)
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	f003 0307 	and.w	r3, r3, #7
 8003388:	683a      	ldr	r2, [r7, #0]
 800338a:	429a      	cmp	r2, r3
 800338c:	d90c      	bls.n	80033a8 <HAL_RCC_ClockConfig+0x3c>
 800338e:	4b65      	ldr	r3, [pc, #404]	@ (8003524 <HAL_RCC_ClockConfig+0x1b8>)
 8003390:	683a      	ldr	r2, [r7, #0]
 8003392:	b2d2      	uxtb	r2, r2
 8003394:	701a      	strb	r2, [r3, #0]
 8003396:	4b63      	ldr	r3, [pc, #396]	@ (8003524 <HAL_RCC_ClockConfig+0x1b8>)
 8003398:	681b      	ldr	r3, [r3, #0]
 800339a:	f003 0307 	and.w	r3, r3, #7
 800339e:	683a      	ldr	r2, [r7, #0]
 80033a0:	429a      	cmp	r2, r3
 80033a2:	d001      	beq.n	80033a8 <HAL_RCC_ClockConfig+0x3c>
 80033a4:	2301      	movs	r3, #1
 80033a6:	e0b8      	b.n	800351a <HAL_RCC_ClockConfig+0x1ae>
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	f003 0302 	and.w	r3, r3, #2
 80033b0:	2b00      	cmp	r3, #0
 80033b2:	d020      	beq.n	80033f6 <HAL_RCC_ClockConfig+0x8a>
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	681b      	ldr	r3, [r3, #0]
 80033b8:	f003 0304 	and.w	r3, r3, #4
 80033bc:	2b00      	cmp	r3, #0
 80033be:	d005      	beq.n	80033cc <HAL_RCC_ClockConfig+0x60>
 80033c0:	4b59      	ldr	r3, [pc, #356]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80033c2:	689b      	ldr	r3, [r3, #8]
 80033c4:	4a58      	ldr	r2, [pc, #352]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80033c6:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80033ca:	6093      	str	r3, [r2, #8]
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	681b      	ldr	r3, [r3, #0]
 80033d0:	f003 0308 	and.w	r3, r3, #8
 80033d4:	2b00      	cmp	r3, #0
 80033d6:	d005      	beq.n	80033e4 <HAL_RCC_ClockConfig+0x78>
 80033d8:	4b53      	ldr	r3, [pc, #332]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80033da:	689b      	ldr	r3, [r3, #8]
 80033dc:	4a52      	ldr	r2, [pc, #328]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80033de:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80033e2:	6093      	str	r3, [r2, #8]
 80033e4:	4b50      	ldr	r3, [pc, #320]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80033e6:	689b      	ldr	r3, [r3, #8]
 80033e8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	689b      	ldr	r3, [r3, #8]
 80033f0:	494d      	ldr	r1, [pc, #308]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80033f2:	4313      	orrs	r3, r2
 80033f4:	608b      	str	r3, [r1, #8]
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	f003 0301 	and.w	r3, r3, #1
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d044      	beq.n	800348c <HAL_RCC_ClockConfig+0x120>
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	685b      	ldr	r3, [r3, #4]
 8003406:	2b01      	cmp	r3, #1
 8003408:	d107      	bne.n	800341a <HAL_RCC_ClockConfig+0xae>
 800340a:	4b47      	ldr	r3, [pc, #284]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003412:	2b00      	cmp	r3, #0
 8003414:	d119      	bne.n	800344a <HAL_RCC_ClockConfig+0xde>
 8003416:	2301      	movs	r3, #1
 8003418:	e07f      	b.n	800351a <HAL_RCC_ClockConfig+0x1ae>
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	685b      	ldr	r3, [r3, #4]
 800341e:	2b02      	cmp	r3, #2
 8003420:	d003      	beq.n	800342a <HAL_RCC_ClockConfig+0xbe>
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	685b      	ldr	r3, [r3, #4]
 8003426:	2b03      	cmp	r3, #3
 8003428:	d107      	bne.n	800343a <HAL_RCC_ClockConfig+0xce>
 800342a:	4b3f      	ldr	r3, [pc, #252]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003432:	2b00      	cmp	r3, #0
 8003434:	d109      	bne.n	800344a <HAL_RCC_ClockConfig+0xde>
 8003436:	2301      	movs	r3, #1
 8003438:	e06f      	b.n	800351a <HAL_RCC_ClockConfig+0x1ae>
 800343a:	4b3b      	ldr	r3, [pc, #236]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 800343c:	681b      	ldr	r3, [r3, #0]
 800343e:	f003 0302 	and.w	r3, r3, #2
 8003442:	2b00      	cmp	r3, #0
 8003444:	d101      	bne.n	800344a <HAL_RCC_ClockConfig+0xde>
 8003446:	2301      	movs	r3, #1
 8003448:	e067      	b.n	800351a <HAL_RCC_ClockConfig+0x1ae>
 800344a:	4b37      	ldr	r3, [pc, #220]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 800344c:	689b      	ldr	r3, [r3, #8]
 800344e:	f023 0203 	bic.w	r2, r3, #3
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	685b      	ldr	r3, [r3, #4]
 8003456:	4934      	ldr	r1, [pc, #208]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 8003458:	4313      	orrs	r3, r2
 800345a:	608b      	str	r3, [r1, #8]
 800345c:	f7ff f984 	bl	8002768 <HAL_GetTick>
 8003460:	60f8      	str	r0, [r7, #12]
 8003462:	e00a      	b.n	800347a <HAL_RCC_ClockConfig+0x10e>
 8003464:	f7ff f980 	bl	8002768 <HAL_GetTick>
 8003468:	4602      	mov	r2, r0
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	1ad3      	subs	r3, r2, r3
 800346e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003472:	4293      	cmp	r3, r2
 8003474:	d901      	bls.n	800347a <HAL_RCC_ClockConfig+0x10e>
 8003476:	2303      	movs	r3, #3
 8003478:	e04f      	b.n	800351a <HAL_RCC_ClockConfig+0x1ae>
 800347a:	4b2b      	ldr	r3, [pc, #172]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 800347c:	689b      	ldr	r3, [r3, #8]
 800347e:	f003 020c 	and.w	r2, r3, #12
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	685b      	ldr	r3, [r3, #4]
 8003486:	009b      	lsls	r3, r3, #2
 8003488:	429a      	cmp	r2, r3
 800348a:	d1eb      	bne.n	8003464 <HAL_RCC_ClockConfig+0xf8>
 800348c:	4b25      	ldr	r3, [pc, #148]	@ (8003524 <HAL_RCC_ClockConfig+0x1b8>)
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	f003 0307 	and.w	r3, r3, #7
 8003494:	683a      	ldr	r2, [r7, #0]
 8003496:	429a      	cmp	r2, r3
 8003498:	d20c      	bcs.n	80034b4 <HAL_RCC_ClockConfig+0x148>
 800349a:	4b22      	ldr	r3, [pc, #136]	@ (8003524 <HAL_RCC_ClockConfig+0x1b8>)
 800349c:	683a      	ldr	r2, [r7, #0]
 800349e:	b2d2      	uxtb	r2, r2
 80034a0:	701a      	strb	r2, [r3, #0]
 80034a2:	4b20      	ldr	r3, [pc, #128]	@ (8003524 <HAL_RCC_ClockConfig+0x1b8>)
 80034a4:	681b      	ldr	r3, [r3, #0]
 80034a6:	f003 0307 	and.w	r3, r3, #7
 80034aa:	683a      	ldr	r2, [r7, #0]
 80034ac:	429a      	cmp	r2, r3
 80034ae:	d001      	beq.n	80034b4 <HAL_RCC_ClockConfig+0x148>
 80034b0:	2301      	movs	r3, #1
 80034b2:	e032      	b.n	800351a <HAL_RCC_ClockConfig+0x1ae>
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	f003 0304 	and.w	r3, r3, #4
 80034bc:	2b00      	cmp	r3, #0
 80034be:	d008      	beq.n	80034d2 <HAL_RCC_ClockConfig+0x166>
 80034c0:	4b19      	ldr	r3, [pc, #100]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80034c2:	689b      	ldr	r3, [r3, #8]
 80034c4:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	68db      	ldr	r3, [r3, #12]
 80034cc:	4916      	ldr	r1, [pc, #88]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80034ce:	4313      	orrs	r3, r2
 80034d0:	608b      	str	r3, [r1, #8]
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	f003 0308 	and.w	r3, r3, #8
 80034da:	2b00      	cmp	r3, #0
 80034dc:	d009      	beq.n	80034f2 <HAL_RCC_ClockConfig+0x186>
 80034de:	4b12      	ldr	r3, [pc, #72]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80034e0:	689b      	ldr	r3, [r3, #8]
 80034e2:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	691b      	ldr	r3, [r3, #16]
 80034ea:	00db      	lsls	r3, r3, #3
 80034ec:	490e      	ldr	r1, [pc, #56]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80034ee:	4313      	orrs	r3, r2
 80034f0:	608b      	str	r3, [r1, #8]
 80034f2:	f000 f821 	bl	8003538 <HAL_RCC_GetSysClockFreq>
 80034f6:	4602      	mov	r2, r0
 80034f8:	4b0b      	ldr	r3, [pc, #44]	@ (8003528 <HAL_RCC_ClockConfig+0x1bc>)
 80034fa:	689b      	ldr	r3, [r3, #8]
 80034fc:	091b      	lsrs	r3, r3, #4
 80034fe:	f003 030f 	and.w	r3, r3, #15
 8003502:	490a      	ldr	r1, [pc, #40]	@ (800352c <HAL_RCC_ClockConfig+0x1c0>)
 8003504:	5ccb      	ldrb	r3, [r1, r3]
 8003506:	fa22 f303 	lsr.w	r3, r2, r3
 800350a:	4a09      	ldr	r2, [pc, #36]	@ (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 800350c:	6013      	str	r3, [r2, #0]
 800350e:	4b09      	ldr	r3, [pc, #36]	@ (8003534 <HAL_RCC_ClockConfig+0x1c8>)
 8003510:	681b      	ldr	r3, [r3, #0]
 8003512:	4618      	mov	r0, r3
 8003514:	f7ff f8e4 	bl	80026e0 <HAL_InitTick>
 8003518:	2300      	movs	r3, #0
 800351a:	4618      	mov	r0, r3
 800351c:	3710      	adds	r7, #16
 800351e:	46bd      	mov	sp, r7
 8003520:	bd80      	pop	{r7, pc}
 8003522:	bf00      	nop
 8003524:	40023c00 	.word	0x40023c00
 8003528:	40023800 	.word	0x40023800
 800352c:	08005880 	.word	0x08005880
 8003530:	200000b8 	.word	0x200000b8
 8003534:	200000bc 	.word	0x200000bc

08003538 <HAL_RCC_GetSysClockFreq>:
 8003538:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800353c:	b094      	sub	sp, #80	@ 0x50
 800353e:	af00      	add	r7, sp, #0
 8003540:	2300      	movs	r3, #0
 8003542:	647b      	str	r3, [r7, #68]	@ 0x44
 8003544:	2300      	movs	r3, #0
 8003546:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003548:	2300      	movs	r3, #0
 800354a:	643b      	str	r3, [r7, #64]	@ 0x40
 800354c:	2300      	movs	r3, #0
 800354e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003550:	4b79      	ldr	r3, [pc, #484]	@ (8003738 <HAL_RCC_GetSysClockFreq+0x200>)
 8003552:	689b      	ldr	r3, [r3, #8]
 8003554:	f003 030c 	and.w	r3, r3, #12
 8003558:	2b08      	cmp	r3, #8
 800355a:	d00d      	beq.n	8003578 <HAL_RCC_GetSysClockFreq+0x40>
 800355c:	2b08      	cmp	r3, #8
 800355e:	f200 80e1 	bhi.w	8003724 <HAL_RCC_GetSysClockFreq+0x1ec>
 8003562:	2b00      	cmp	r3, #0
 8003564:	d002      	beq.n	800356c <HAL_RCC_GetSysClockFreq+0x34>
 8003566:	2b04      	cmp	r3, #4
 8003568:	d003      	beq.n	8003572 <HAL_RCC_GetSysClockFreq+0x3a>
 800356a:	e0db      	b.n	8003724 <HAL_RCC_GetSysClockFreq+0x1ec>
 800356c:	4b73      	ldr	r3, [pc, #460]	@ (800373c <HAL_RCC_GetSysClockFreq+0x204>)
 800356e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003570:	e0db      	b.n	800372a <HAL_RCC_GetSysClockFreq+0x1f2>
 8003572:	4b73      	ldr	r3, [pc, #460]	@ (8003740 <HAL_RCC_GetSysClockFreq+0x208>)
 8003574:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003576:	e0d8      	b.n	800372a <HAL_RCC_GetSysClockFreq+0x1f2>
 8003578:	4b6f      	ldr	r3, [pc, #444]	@ (8003738 <HAL_RCC_GetSysClockFreq+0x200>)
 800357a:	685b      	ldr	r3, [r3, #4]
 800357c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003580:	647b      	str	r3, [r7, #68]	@ 0x44
 8003582:	4b6d      	ldr	r3, [pc, #436]	@ (8003738 <HAL_RCC_GetSysClockFreq+0x200>)
 8003584:	685b      	ldr	r3, [r3, #4]
 8003586:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800358a:	2b00      	cmp	r3, #0
 800358c:	d063      	beq.n	8003656 <HAL_RCC_GetSysClockFreq+0x11e>
 800358e:	4b6a      	ldr	r3, [pc, #424]	@ (8003738 <HAL_RCC_GetSysClockFreq+0x200>)
 8003590:	685b      	ldr	r3, [r3, #4]
 8003592:	099b      	lsrs	r3, r3, #6
 8003594:	2200      	movs	r2, #0
 8003596:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003598:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800359a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800359c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80035a0:	633b      	str	r3, [r7, #48]	@ 0x30
 80035a2:	2300      	movs	r3, #0
 80035a4:	637b      	str	r3, [r7, #52]	@ 0x34
 80035a6:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 80035aa:	4622      	mov	r2, r4
 80035ac:	462b      	mov	r3, r5
 80035ae:	f04f 0000 	mov.w	r0, #0
 80035b2:	f04f 0100 	mov.w	r1, #0
 80035b6:	0159      	lsls	r1, r3, #5
 80035b8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80035bc:	0150      	lsls	r0, r2, #5
 80035be:	4602      	mov	r2, r0
 80035c0:	460b      	mov	r3, r1
 80035c2:	4621      	mov	r1, r4
 80035c4:	1a51      	subs	r1, r2, r1
 80035c6:	6139      	str	r1, [r7, #16]
 80035c8:	4629      	mov	r1, r5
 80035ca:	eb63 0301 	sbc.w	r3, r3, r1
 80035ce:	617b      	str	r3, [r7, #20]
 80035d0:	f04f 0200 	mov.w	r2, #0
 80035d4:	f04f 0300 	mov.w	r3, #0
 80035d8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80035dc:	4659      	mov	r1, fp
 80035de:	018b      	lsls	r3, r1, #6
 80035e0:	4651      	mov	r1, sl
 80035e2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80035e6:	4651      	mov	r1, sl
 80035e8:	018a      	lsls	r2, r1, #6
 80035ea:	4651      	mov	r1, sl
 80035ec:	ebb2 0801 	subs.w	r8, r2, r1
 80035f0:	4659      	mov	r1, fp
 80035f2:	eb63 0901 	sbc.w	r9, r3, r1
 80035f6:	f04f 0200 	mov.w	r2, #0
 80035fa:	f04f 0300 	mov.w	r3, #0
 80035fe:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003602:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003606:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800360a:	4690      	mov	r8, r2
 800360c:	4699      	mov	r9, r3
 800360e:	4623      	mov	r3, r4
 8003610:	eb18 0303 	adds.w	r3, r8, r3
 8003614:	60bb      	str	r3, [r7, #8]
 8003616:	462b      	mov	r3, r5
 8003618:	eb49 0303 	adc.w	r3, r9, r3
 800361c:	60fb      	str	r3, [r7, #12]
 800361e:	f04f 0200 	mov.w	r2, #0
 8003622:	f04f 0300 	mov.w	r3, #0
 8003626:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800362a:	4629      	mov	r1, r5
 800362c:	024b      	lsls	r3, r1, #9
 800362e:	4621      	mov	r1, r4
 8003630:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8003634:	4621      	mov	r1, r4
 8003636:	024a      	lsls	r2, r1, #9
 8003638:	4610      	mov	r0, r2
 800363a:	4619      	mov	r1, r3
 800363c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800363e:	2200      	movs	r2, #0
 8003640:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003642:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003644:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8003648:	f7fd fa4a 	bl	8000ae0 <__aeabi_uldivmod>
 800364c:	4602      	mov	r2, r0
 800364e:	460b      	mov	r3, r1
 8003650:	4613      	mov	r3, r2
 8003652:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003654:	e058      	b.n	8003708 <HAL_RCC_GetSysClockFreq+0x1d0>
 8003656:	4b38      	ldr	r3, [pc, #224]	@ (8003738 <HAL_RCC_GetSysClockFreq+0x200>)
 8003658:	685b      	ldr	r3, [r3, #4]
 800365a:	099b      	lsrs	r3, r3, #6
 800365c:	2200      	movs	r2, #0
 800365e:	4618      	mov	r0, r3
 8003660:	4611      	mov	r1, r2
 8003662:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8003666:	623b      	str	r3, [r7, #32]
 8003668:	2300      	movs	r3, #0
 800366a:	627b      	str	r3, [r7, #36]	@ 0x24
 800366c:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8003670:	4642      	mov	r2, r8
 8003672:	464b      	mov	r3, r9
 8003674:	f04f 0000 	mov.w	r0, #0
 8003678:	f04f 0100 	mov.w	r1, #0
 800367c:	0159      	lsls	r1, r3, #5
 800367e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003682:	0150      	lsls	r0, r2, #5
 8003684:	4602      	mov	r2, r0
 8003686:	460b      	mov	r3, r1
 8003688:	4641      	mov	r1, r8
 800368a:	ebb2 0a01 	subs.w	sl, r2, r1
 800368e:	4649      	mov	r1, r9
 8003690:	eb63 0b01 	sbc.w	fp, r3, r1
 8003694:	f04f 0200 	mov.w	r2, #0
 8003698:	f04f 0300 	mov.w	r3, #0
 800369c:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80036a0:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80036a4:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80036a8:	ebb2 040a 	subs.w	r4, r2, sl
 80036ac:	eb63 050b 	sbc.w	r5, r3, fp
 80036b0:	f04f 0200 	mov.w	r2, #0
 80036b4:	f04f 0300 	mov.w	r3, #0
 80036b8:	00eb      	lsls	r3, r5, #3
 80036ba:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80036be:	00e2      	lsls	r2, r4, #3
 80036c0:	4614      	mov	r4, r2
 80036c2:	461d      	mov	r5, r3
 80036c4:	4643      	mov	r3, r8
 80036c6:	18e3      	adds	r3, r4, r3
 80036c8:	603b      	str	r3, [r7, #0]
 80036ca:	464b      	mov	r3, r9
 80036cc:	eb45 0303 	adc.w	r3, r5, r3
 80036d0:	607b      	str	r3, [r7, #4]
 80036d2:	f04f 0200 	mov.w	r2, #0
 80036d6:	f04f 0300 	mov.w	r3, #0
 80036da:	e9d7 4500 	ldrd	r4, r5, [r7]
 80036de:	4629      	mov	r1, r5
 80036e0:	028b      	lsls	r3, r1, #10
 80036e2:	4621      	mov	r1, r4
 80036e4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80036e8:	4621      	mov	r1, r4
 80036ea:	028a      	lsls	r2, r1, #10
 80036ec:	4610      	mov	r0, r2
 80036ee:	4619      	mov	r1, r3
 80036f0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80036f2:	2200      	movs	r2, #0
 80036f4:	61bb      	str	r3, [r7, #24]
 80036f6:	61fa      	str	r2, [r7, #28]
 80036f8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80036fc:	f7fd f9f0 	bl	8000ae0 <__aeabi_uldivmod>
 8003700:	4602      	mov	r2, r0
 8003702:	460b      	mov	r3, r1
 8003704:	4613      	mov	r3, r2
 8003706:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003708:	4b0b      	ldr	r3, [pc, #44]	@ (8003738 <HAL_RCC_GetSysClockFreq+0x200>)
 800370a:	685b      	ldr	r3, [r3, #4]
 800370c:	0c1b      	lsrs	r3, r3, #16
 800370e:	f003 0303 	and.w	r3, r3, #3
 8003712:	3301      	adds	r3, #1
 8003714:	005b      	lsls	r3, r3, #1
 8003716:	643b      	str	r3, [r7, #64]	@ 0x40
 8003718:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800371a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800371c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003720:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003722:	e002      	b.n	800372a <HAL_RCC_GetSysClockFreq+0x1f2>
 8003724:	4b05      	ldr	r3, [pc, #20]	@ (800373c <HAL_RCC_GetSysClockFreq+0x204>)
 8003726:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003728:	bf00      	nop
 800372a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800372c:	4618      	mov	r0, r3
 800372e:	3750      	adds	r7, #80	@ 0x50
 8003730:	46bd      	mov	sp, r7
 8003732:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003736:	bf00      	nop
 8003738:	40023800 	.word	0x40023800
 800373c:	00f42400 	.word	0x00f42400
 8003740:	007a1200 	.word	0x007a1200

08003744 <HAL_RCC_GetHCLKFreq>:
 8003744:	b480      	push	{r7}
 8003746:	af00      	add	r7, sp, #0
 8003748:	4b03      	ldr	r3, [pc, #12]	@ (8003758 <HAL_RCC_GetHCLKFreq+0x14>)
 800374a:	681b      	ldr	r3, [r3, #0]
 800374c:	4618      	mov	r0, r3
 800374e:	46bd      	mov	sp, r7
 8003750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003754:	4770      	bx	lr
 8003756:	bf00      	nop
 8003758:	200000b8 	.word	0x200000b8

0800375c <HAL_RCC_GetPCLK1Freq>:
 800375c:	b580      	push	{r7, lr}
 800375e:	af00      	add	r7, sp, #0
 8003760:	f7ff fff0 	bl	8003744 <HAL_RCC_GetHCLKFreq>
 8003764:	4602      	mov	r2, r0
 8003766:	4b05      	ldr	r3, [pc, #20]	@ (800377c <HAL_RCC_GetPCLK1Freq+0x20>)
 8003768:	689b      	ldr	r3, [r3, #8]
 800376a:	0a9b      	lsrs	r3, r3, #10
 800376c:	f003 0307 	and.w	r3, r3, #7
 8003770:	4903      	ldr	r1, [pc, #12]	@ (8003780 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003772:	5ccb      	ldrb	r3, [r1, r3]
 8003774:	fa22 f303 	lsr.w	r3, r2, r3
 8003778:	4618      	mov	r0, r3
 800377a:	bd80      	pop	{r7, pc}
 800377c:	40023800 	.word	0x40023800
 8003780:	08005890 	.word	0x08005890

08003784 <HAL_RCC_GetPCLK2Freq>:
 8003784:	b580      	push	{r7, lr}
 8003786:	af00      	add	r7, sp, #0
 8003788:	f7ff ffdc 	bl	8003744 <HAL_RCC_GetHCLKFreq>
 800378c:	4602      	mov	r2, r0
 800378e:	4b05      	ldr	r3, [pc, #20]	@ (80037a4 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003790:	689b      	ldr	r3, [r3, #8]
 8003792:	0b5b      	lsrs	r3, r3, #13
 8003794:	f003 0307 	and.w	r3, r3, #7
 8003798:	4903      	ldr	r1, [pc, #12]	@ (80037a8 <HAL_RCC_GetPCLK2Freq+0x24>)
 800379a:	5ccb      	ldrb	r3, [r1, r3]
 800379c:	fa22 f303 	lsr.w	r3, r2, r3
 80037a0:	4618      	mov	r0, r3
 80037a2:	bd80      	pop	{r7, pc}
 80037a4:	40023800 	.word	0x40023800
 80037a8:	08005890 	.word	0x08005890

080037ac <HAL_TIM_PWM_Init>:
 80037ac:	b580      	push	{r7, lr}
 80037ae:	b082      	sub	sp, #8
 80037b0:	af00      	add	r7, sp, #0
 80037b2:	6078      	str	r0, [r7, #4]
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	d101      	bne.n	80037be <HAL_TIM_PWM_Init+0x12>
 80037ba:	2301      	movs	r3, #1
 80037bc:	e041      	b.n	8003842 <HAL_TIM_PWM_Init+0x96>
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80037c4:	b2db      	uxtb	r3, r3
 80037c6:	2b00      	cmp	r3, #0
 80037c8:	d106      	bne.n	80037d8 <HAL_TIM_PWM_Init+0x2c>
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	2200      	movs	r2, #0
 80037ce:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80037d2:	6878      	ldr	r0, [r7, #4]
 80037d4:	f7fe fd3e 	bl	8002254 <HAL_TIM_PWM_MspInit>
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	2202      	movs	r2, #2
 80037dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	681a      	ldr	r2, [r3, #0]
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	3304      	adds	r3, #4
 80037e8:	4619      	mov	r1, r3
 80037ea:	4610      	mov	r0, r2
 80037ec:	f000 fc7e 	bl	80040ec <TIM_Base_SetConfig>
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	2201      	movs	r2, #1
 80037f4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	2201      	movs	r2, #1
 80037fc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	2201      	movs	r2, #1
 8003804:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	2201      	movs	r2, #1
 800380c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	2201      	movs	r2, #1
 8003814:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	2201      	movs	r2, #1
 800381c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	2201      	movs	r2, #1
 8003824:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	2201      	movs	r2, #1
 800382c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	2201      	movs	r2, #1
 8003834:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	2201      	movs	r2, #1
 800383c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003840:	2300      	movs	r3, #0
 8003842:	4618      	mov	r0, r3
 8003844:	3708      	adds	r7, #8
 8003846:	46bd      	mov	sp, r7
 8003848:	bd80      	pop	{r7, pc}
	...

0800384c <HAL_TIM_PWM_Start>:
 800384c:	b580      	push	{r7, lr}
 800384e:	b084      	sub	sp, #16
 8003850:	af00      	add	r7, sp, #0
 8003852:	6078      	str	r0, [r7, #4]
 8003854:	6039      	str	r1, [r7, #0]
 8003856:	683b      	ldr	r3, [r7, #0]
 8003858:	2b00      	cmp	r3, #0
 800385a:	d109      	bne.n	8003870 <HAL_TIM_PWM_Start+0x24>
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8003862:	b2db      	uxtb	r3, r3
 8003864:	2b01      	cmp	r3, #1
 8003866:	bf14      	ite	ne
 8003868:	2301      	movne	r3, #1
 800386a:	2300      	moveq	r3, #0
 800386c:	b2db      	uxtb	r3, r3
 800386e:	e022      	b.n	80038b6 <HAL_TIM_PWM_Start+0x6a>
 8003870:	683b      	ldr	r3, [r7, #0]
 8003872:	2b04      	cmp	r3, #4
 8003874:	d109      	bne.n	800388a <HAL_TIM_PWM_Start+0x3e>
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800387c:	b2db      	uxtb	r3, r3
 800387e:	2b01      	cmp	r3, #1
 8003880:	bf14      	ite	ne
 8003882:	2301      	movne	r3, #1
 8003884:	2300      	moveq	r3, #0
 8003886:	b2db      	uxtb	r3, r3
 8003888:	e015      	b.n	80038b6 <HAL_TIM_PWM_Start+0x6a>
 800388a:	683b      	ldr	r3, [r7, #0]
 800388c:	2b08      	cmp	r3, #8
 800388e:	d109      	bne.n	80038a4 <HAL_TIM_PWM_Start+0x58>
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003896:	b2db      	uxtb	r3, r3
 8003898:	2b01      	cmp	r3, #1
 800389a:	bf14      	ite	ne
 800389c:	2301      	movne	r3, #1
 800389e:	2300      	moveq	r3, #0
 80038a0:	b2db      	uxtb	r3, r3
 80038a2:	e008      	b.n	80038b6 <HAL_TIM_PWM_Start+0x6a>
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80038aa:	b2db      	uxtb	r3, r3
 80038ac:	2b01      	cmp	r3, #1
 80038ae:	bf14      	ite	ne
 80038b0:	2301      	movne	r3, #1
 80038b2:	2300      	moveq	r3, #0
 80038b4:	b2db      	uxtb	r3, r3
 80038b6:	2b00      	cmp	r3, #0
 80038b8:	d001      	beq.n	80038be <HAL_TIM_PWM_Start+0x72>
 80038ba:	2301      	movs	r3, #1
 80038bc:	e07c      	b.n	80039b8 <HAL_TIM_PWM_Start+0x16c>
 80038be:	683b      	ldr	r3, [r7, #0]
 80038c0:	2b00      	cmp	r3, #0
 80038c2:	d104      	bne.n	80038ce <HAL_TIM_PWM_Start+0x82>
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	2202      	movs	r2, #2
 80038c8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80038cc:	e013      	b.n	80038f6 <HAL_TIM_PWM_Start+0xaa>
 80038ce:	683b      	ldr	r3, [r7, #0]
 80038d0:	2b04      	cmp	r3, #4
 80038d2:	d104      	bne.n	80038de <HAL_TIM_PWM_Start+0x92>
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	2202      	movs	r2, #2
 80038d8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80038dc:	e00b      	b.n	80038f6 <HAL_TIM_PWM_Start+0xaa>
 80038de:	683b      	ldr	r3, [r7, #0]
 80038e0:	2b08      	cmp	r3, #8
 80038e2:	d104      	bne.n	80038ee <HAL_TIM_PWM_Start+0xa2>
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	2202      	movs	r2, #2
 80038e8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80038ec:	e003      	b.n	80038f6 <HAL_TIM_PWM_Start+0xaa>
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	2202      	movs	r2, #2
 80038f2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	2201      	movs	r2, #1
 80038fc:	6839      	ldr	r1, [r7, #0]
 80038fe:	4618      	mov	r0, r3
 8003900:	f000 fe4a 	bl	8004598 <TIM_CCxChannelCmd>
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	4a2d      	ldr	r2, [pc, #180]	@ (80039c0 <HAL_TIM_PWM_Start+0x174>)
 800390a:	4293      	cmp	r3, r2
 800390c:	d004      	beq.n	8003918 <HAL_TIM_PWM_Start+0xcc>
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	4a2c      	ldr	r2, [pc, #176]	@ (80039c4 <HAL_TIM_PWM_Start+0x178>)
 8003914:	4293      	cmp	r3, r2
 8003916:	d101      	bne.n	800391c <HAL_TIM_PWM_Start+0xd0>
 8003918:	2301      	movs	r3, #1
 800391a:	e000      	b.n	800391e <HAL_TIM_PWM_Start+0xd2>
 800391c:	2300      	movs	r3, #0
 800391e:	2b00      	cmp	r3, #0
 8003920:	d007      	beq.n	8003932 <HAL_TIM_PWM_Start+0xe6>
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	681b      	ldr	r3, [r3, #0]
 800392c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8003930:	645a      	str	r2, [r3, #68]	@ 0x44
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	4a22      	ldr	r2, [pc, #136]	@ (80039c0 <HAL_TIM_PWM_Start+0x174>)
 8003938:	4293      	cmp	r3, r2
 800393a:	d022      	beq.n	8003982 <HAL_TIM_PWM_Start+0x136>
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003944:	d01d      	beq.n	8003982 <HAL_TIM_PWM_Start+0x136>
 8003946:	687b      	ldr	r3, [r7, #4]
 8003948:	681b      	ldr	r3, [r3, #0]
 800394a:	4a1f      	ldr	r2, [pc, #124]	@ (80039c8 <HAL_TIM_PWM_Start+0x17c>)
 800394c:	4293      	cmp	r3, r2
 800394e:	d018      	beq.n	8003982 <HAL_TIM_PWM_Start+0x136>
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	681b      	ldr	r3, [r3, #0]
 8003954:	4a1d      	ldr	r2, [pc, #116]	@ (80039cc <HAL_TIM_PWM_Start+0x180>)
 8003956:	4293      	cmp	r3, r2
 8003958:	d013      	beq.n	8003982 <HAL_TIM_PWM_Start+0x136>
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	4a1c      	ldr	r2, [pc, #112]	@ (80039d0 <HAL_TIM_PWM_Start+0x184>)
 8003960:	4293      	cmp	r3, r2
 8003962:	d00e      	beq.n	8003982 <HAL_TIM_PWM_Start+0x136>
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	681b      	ldr	r3, [r3, #0]
 8003968:	4a16      	ldr	r2, [pc, #88]	@ (80039c4 <HAL_TIM_PWM_Start+0x178>)
 800396a:	4293      	cmp	r3, r2
 800396c:	d009      	beq.n	8003982 <HAL_TIM_PWM_Start+0x136>
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	4a18      	ldr	r2, [pc, #96]	@ (80039d4 <HAL_TIM_PWM_Start+0x188>)
 8003974:	4293      	cmp	r3, r2
 8003976:	d004      	beq.n	8003982 <HAL_TIM_PWM_Start+0x136>
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	4a16      	ldr	r2, [pc, #88]	@ (80039d8 <HAL_TIM_PWM_Start+0x18c>)
 800397e:	4293      	cmp	r3, r2
 8003980:	d111      	bne.n	80039a6 <HAL_TIM_PWM_Start+0x15a>
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	681b      	ldr	r3, [r3, #0]
 8003986:	689b      	ldr	r3, [r3, #8]
 8003988:	f003 0307 	and.w	r3, r3, #7
 800398c:	60fb      	str	r3, [r7, #12]
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	2b06      	cmp	r3, #6
 8003992:	d010      	beq.n	80039b6 <HAL_TIM_PWM_Start+0x16a>
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	681b      	ldr	r3, [r3, #0]
 8003998:	681a      	ldr	r2, [r3, #0]
 800399a:	687b      	ldr	r3, [r7, #4]
 800399c:	681b      	ldr	r3, [r3, #0]
 800399e:	f042 0201 	orr.w	r2, r2, #1
 80039a2:	601a      	str	r2, [r3, #0]
 80039a4:	e007      	b.n	80039b6 <HAL_TIM_PWM_Start+0x16a>
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	681a      	ldr	r2, [r3, #0]
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	f042 0201 	orr.w	r2, r2, #1
 80039b4:	601a      	str	r2, [r3, #0]
 80039b6:	2300      	movs	r3, #0
 80039b8:	4618      	mov	r0, r3
 80039ba:	3710      	adds	r7, #16
 80039bc:	46bd      	mov	sp, r7
 80039be:	bd80      	pop	{r7, pc}
 80039c0:	40010000 	.word	0x40010000
 80039c4:	40010400 	.word	0x40010400
 80039c8:	40000400 	.word	0x40000400
 80039cc:	40000800 	.word	0x40000800
 80039d0:	40000c00 	.word	0x40000c00
 80039d4:	40014000 	.word	0x40014000
 80039d8:	40001800 	.word	0x40001800

080039dc <HAL_TIM_PWM_Stop>:
 80039dc:	b580      	push	{r7, lr}
 80039de:	b082      	sub	sp, #8
 80039e0:	af00      	add	r7, sp, #0
 80039e2:	6078      	str	r0, [r7, #4]
 80039e4:	6039      	str	r1, [r7, #0]
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	2200      	movs	r2, #0
 80039ec:	6839      	ldr	r1, [r7, #0]
 80039ee:	4618      	mov	r0, r3
 80039f0:	f000 fdd2 	bl	8004598 <TIM_CCxChannelCmd>
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	4a2e      	ldr	r2, [pc, #184]	@ (8003ab4 <HAL_TIM_PWM_Stop+0xd8>)
 80039fa:	4293      	cmp	r3, r2
 80039fc:	d004      	beq.n	8003a08 <HAL_TIM_PWM_Stop+0x2c>
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	681b      	ldr	r3, [r3, #0]
 8003a02:	4a2d      	ldr	r2, [pc, #180]	@ (8003ab8 <HAL_TIM_PWM_Stop+0xdc>)
 8003a04:	4293      	cmp	r3, r2
 8003a06:	d101      	bne.n	8003a0c <HAL_TIM_PWM_Stop+0x30>
 8003a08:	2301      	movs	r3, #1
 8003a0a:	e000      	b.n	8003a0e <HAL_TIM_PWM_Stop+0x32>
 8003a0c:	2300      	movs	r3, #0
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d017      	beq.n	8003a42 <HAL_TIM_PWM_Stop+0x66>
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	6a1a      	ldr	r2, [r3, #32]
 8003a18:	f241 1311 	movw	r3, #4369	@ 0x1111
 8003a1c:	4013      	ands	r3, r2
 8003a1e:	2b00      	cmp	r3, #0
 8003a20:	d10f      	bne.n	8003a42 <HAL_TIM_PWM_Stop+0x66>
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	681b      	ldr	r3, [r3, #0]
 8003a26:	6a1a      	ldr	r2, [r3, #32]
 8003a28:	f240 4344 	movw	r3, #1092	@ 0x444
 8003a2c:	4013      	ands	r3, r2
 8003a2e:	2b00      	cmp	r3, #0
 8003a30:	d107      	bne.n	8003a42 <HAL_TIM_PWM_Stop+0x66>
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003a40:	645a      	str	r2, [r3, #68]	@ 0x44
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	681b      	ldr	r3, [r3, #0]
 8003a46:	6a1a      	ldr	r2, [r3, #32]
 8003a48:	f241 1311 	movw	r3, #4369	@ 0x1111
 8003a4c:	4013      	ands	r3, r2
 8003a4e:	2b00      	cmp	r3, #0
 8003a50:	d10f      	bne.n	8003a72 <HAL_TIM_PWM_Stop+0x96>
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	6a1a      	ldr	r2, [r3, #32]
 8003a58:	f240 4344 	movw	r3, #1092	@ 0x444
 8003a5c:	4013      	ands	r3, r2
 8003a5e:	2b00      	cmp	r3, #0
 8003a60:	d107      	bne.n	8003a72 <HAL_TIM_PWM_Stop+0x96>
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	681b      	ldr	r3, [r3, #0]
 8003a66:	681a      	ldr	r2, [r3, #0]
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	681b      	ldr	r3, [r3, #0]
 8003a6c:	f022 0201 	bic.w	r2, r2, #1
 8003a70:	601a      	str	r2, [r3, #0]
 8003a72:	683b      	ldr	r3, [r7, #0]
 8003a74:	2b00      	cmp	r3, #0
 8003a76:	d104      	bne.n	8003a82 <HAL_TIM_PWM_Stop+0xa6>
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	2201      	movs	r2, #1
 8003a7c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003a80:	e013      	b.n	8003aaa <HAL_TIM_PWM_Stop+0xce>
 8003a82:	683b      	ldr	r3, [r7, #0]
 8003a84:	2b04      	cmp	r3, #4
 8003a86:	d104      	bne.n	8003a92 <HAL_TIM_PWM_Stop+0xb6>
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	2201      	movs	r2, #1
 8003a8c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003a90:	e00b      	b.n	8003aaa <HAL_TIM_PWM_Stop+0xce>
 8003a92:	683b      	ldr	r3, [r7, #0]
 8003a94:	2b08      	cmp	r3, #8
 8003a96:	d104      	bne.n	8003aa2 <HAL_TIM_PWM_Stop+0xc6>
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	2201      	movs	r2, #1
 8003a9c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003aa0:	e003      	b.n	8003aaa <HAL_TIM_PWM_Stop+0xce>
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	2201      	movs	r2, #1
 8003aa6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003aaa:	2300      	movs	r3, #0
 8003aac:	4618      	mov	r0, r3
 8003aae:	3708      	adds	r7, #8
 8003ab0:	46bd      	mov	sp, r7
 8003ab2:	bd80      	pop	{r7, pc}
 8003ab4:	40010000 	.word	0x40010000
 8003ab8:	40010400 	.word	0x40010400

08003abc <HAL_TIM_Encoder_Init>:
 8003abc:	b580      	push	{r7, lr}
 8003abe:	b086      	sub	sp, #24
 8003ac0:	af00      	add	r7, sp, #0
 8003ac2:	6078      	str	r0, [r7, #4]
 8003ac4:	6039      	str	r1, [r7, #0]
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	2b00      	cmp	r3, #0
 8003aca:	d101      	bne.n	8003ad0 <HAL_TIM_Encoder_Init+0x14>
 8003acc:	2301      	movs	r3, #1
 8003ace:	e097      	b.n	8003c00 <HAL_TIM_Encoder_Init+0x144>
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003ad6:	b2db      	uxtb	r3, r3
 8003ad8:	2b00      	cmp	r3, #0
 8003ada:	d106      	bne.n	8003aea <HAL_TIM_Encoder_Init+0x2e>
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	2200      	movs	r2, #0
 8003ae0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ae4:	6878      	ldr	r0, [r7, #4]
 8003ae6:	f7fe fc07 	bl	80022f8 <HAL_TIM_Encoder_MspInit>
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	2202      	movs	r2, #2
 8003aee:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	681b      	ldr	r3, [r3, #0]
 8003af6:	689b      	ldr	r3, [r3, #8]
 8003af8:	687a      	ldr	r2, [r7, #4]
 8003afa:	6812      	ldr	r2, [r2, #0]
 8003afc:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003b00:	f023 0307 	bic.w	r3, r3, #7
 8003b04:	6093      	str	r3, [r2, #8]
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	681a      	ldr	r2, [r3, #0]
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	3304      	adds	r3, #4
 8003b0e:	4619      	mov	r1, r3
 8003b10:	4610      	mov	r0, r2
 8003b12:	f000 faeb 	bl	80040ec <TIM_Base_SetConfig>
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	689b      	ldr	r3, [r3, #8]
 8003b1c:	617b      	str	r3, [r7, #20]
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	699b      	ldr	r3, [r3, #24]
 8003b24:	613b      	str	r3, [r7, #16]
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	681b      	ldr	r3, [r3, #0]
 8003b2a:	6a1b      	ldr	r3, [r3, #32]
 8003b2c:	60fb      	str	r3, [r7, #12]
 8003b2e:	683b      	ldr	r3, [r7, #0]
 8003b30:	681b      	ldr	r3, [r3, #0]
 8003b32:	697a      	ldr	r2, [r7, #20]
 8003b34:	4313      	orrs	r3, r2
 8003b36:	617b      	str	r3, [r7, #20]
 8003b38:	693b      	ldr	r3, [r7, #16]
 8003b3a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003b3e:	f023 0303 	bic.w	r3, r3, #3
 8003b42:	613b      	str	r3, [r7, #16]
 8003b44:	683b      	ldr	r3, [r7, #0]
 8003b46:	689a      	ldr	r2, [r3, #8]
 8003b48:	683b      	ldr	r3, [r7, #0]
 8003b4a:	699b      	ldr	r3, [r3, #24]
 8003b4c:	021b      	lsls	r3, r3, #8
 8003b4e:	4313      	orrs	r3, r2
 8003b50:	693a      	ldr	r2, [r7, #16]
 8003b52:	4313      	orrs	r3, r2
 8003b54:	613b      	str	r3, [r7, #16]
 8003b56:	693b      	ldr	r3, [r7, #16]
 8003b58:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8003b5c:	f023 030c 	bic.w	r3, r3, #12
 8003b60:	613b      	str	r3, [r7, #16]
 8003b62:	693b      	ldr	r3, [r7, #16]
 8003b64:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8003b68:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8003b6c:	613b      	str	r3, [r7, #16]
 8003b6e:	683b      	ldr	r3, [r7, #0]
 8003b70:	68da      	ldr	r2, [r3, #12]
 8003b72:	683b      	ldr	r3, [r7, #0]
 8003b74:	69db      	ldr	r3, [r3, #28]
 8003b76:	021b      	lsls	r3, r3, #8
 8003b78:	4313      	orrs	r3, r2
 8003b7a:	693a      	ldr	r2, [r7, #16]
 8003b7c:	4313      	orrs	r3, r2
 8003b7e:	613b      	str	r3, [r7, #16]
 8003b80:	683b      	ldr	r3, [r7, #0]
 8003b82:	691b      	ldr	r3, [r3, #16]
 8003b84:	011a      	lsls	r2, r3, #4
 8003b86:	683b      	ldr	r3, [r7, #0]
 8003b88:	6a1b      	ldr	r3, [r3, #32]
 8003b8a:	031b      	lsls	r3, r3, #12
 8003b8c:	4313      	orrs	r3, r2
 8003b8e:	693a      	ldr	r2, [r7, #16]
 8003b90:	4313      	orrs	r3, r2
 8003b92:	613b      	str	r3, [r7, #16]
 8003b94:	68fb      	ldr	r3, [r7, #12]
 8003b96:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 8003b9a:	60fb      	str	r3, [r7, #12]
 8003b9c:	68fb      	ldr	r3, [r7, #12]
 8003b9e:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 8003ba2:	60fb      	str	r3, [r7, #12]
 8003ba4:	683b      	ldr	r3, [r7, #0]
 8003ba6:	685a      	ldr	r2, [r3, #4]
 8003ba8:	683b      	ldr	r3, [r7, #0]
 8003baa:	695b      	ldr	r3, [r3, #20]
 8003bac:	011b      	lsls	r3, r3, #4
 8003bae:	4313      	orrs	r3, r2
 8003bb0:	68fa      	ldr	r2, [r7, #12]
 8003bb2:	4313      	orrs	r3, r2
 8003bb4:	60fb      	str	r3, [r7, #12]
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	681b      	ldr	r3, [r3, #0]
 8003bba:	697a      	ldr	r2, [r7, #20]
 8003bbc:	609a      	str	r2, [r3, #8]
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	681b      	ldr	r3, [r3, #0]
 8003bc2:	693a      	ldr	r2, [r7, #16]
 8003bc4:	619a      	str	r2, [r3, #24]
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	68fa      	ldr	r2, [r7, #12]
 8003bcc:	621a      	str	r2, [r3, #32]
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	2201      	movs	r2, #1
 8003bd2:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	2201      	movs	r2, #1
 8003bda:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	2201      	movs	r2, #1
 8003be2:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	2201      	movs	r2, #1
 8003bea:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	2201      	movs	r2, #1
 8003bf2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	2201      	movs	r2, #1
 8003bfa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003bfe:	2300      	movs	r3, #0
 8003c00:	4618      	mov	r0, r3
 8003c02:	3718      	adds	r7, #24
 8003c04:	46bd      	mov	sp, r7
 8003c06:	bd80      	pop	{r7, pc}

08003c08 <HAL_TIM_Encoder_Start>:
 8003c08:	b580      	push	{r7, lr}
 8003c0a:	b084      	sub	sp, #16
 8003c0c:	af00      	add	r7, sp, #0
 8003c0e:	6078      	str	r0, [r7, #4]
 8003c10:	6039      	str	r1, [r7, #0]
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8003c18:	73fb      	strb	r3, [r7, #15]
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8003c20:	73bb      	strb	r3, [r7, #14]
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003c28:	737b      	strb	r3, [r7, #13]
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8003c30:	733b      	strb	r3, [r7, #12]
 8003c32:	683b      	ldr	r3, [r7, #0]
 8003c34:	2b00      	cmp	r3, #0
 8003c36:	d110      	bne.n	8003c5a <HAL_TIM_Encoder_Start+0x52>
 8003c38:	7bfb      	ldrb	r3, [r7, #15]
 8003c3a:	2b01      	cmp	r3, #1
 8003c3c:	d102      	bne.n	8003c44 <HAL_TIM_Encoder_Start+0x3c>
 8003c3e:	7b7b      	ldrb	r3, [r7, #13]
 8003c40:	2b01      	cmp	r3, #1
 8003c42:	d001      	beq.n	8003c48 <HAL_TIM_Encoder_Start+0x40>
 8003c44:	2301      	movs	r3, #1
 8003c46:	e069      	b.n	8003d1c <HAL_TIM_Encoder_Start+0x114>
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	2202      	movs	r2, #2
 8003c4c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	2202      	movs	r2, #2
 8003c54:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c58:	e031      	b.n	8003cbe <HAL_TIM_Encoder_Start+0xb6>
 8003c5a:	683b      	ldr	r3, [r7, #0]
 8003c5c:	2b04      	cmp	r3, #4
 8003c5e:	d110      	bne.n	8003c82 <HAL_TIM_Encoder_Start+0x7a>
 8003c60:	7bbb      	ldrb	r3, [r7, #14]
 8003c62:	2b01      	cmp	r3, #1
 8003c64:	d102      	bne.n	8003c6c <HAL_TIM_Encoder_Start+0x64>
 8003c66:	7b3b      	ldrb	r3, [r7, #12]
 8003c68:	2b01      	cmp	r3, #1
 8003c6a:	d001      	beq.n	8003c70 <HAL_TIM_Encoder_Start+0x68>
 8003c6c:	2301      	movs	r3, #1
 8003c6e:	e055      	b.n	8003d1c <HAL_TIM_Encoder_Start+0x114>
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	2202      	movs	r2, #2
 8003c74:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	2202      	movs	r2, #2
 8003c7c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003c80:	e01d      	b.n	8003cbe <HAL_TIM_Encoder_Start+0xb6>
 8003c82:	7bfb      	ldrb	r3, [r7, #15]
 8003c84:	2b01      	cmp	r3, #1
 8003c86:	d108      	bne.n	8003c9a <HAL_TIM_Encoder_Start+0x92>
 8003c88:	7bbb      	ldrb	r3, [r7, #14]
 8003c8a:	2b01      	cmp	r3, #1
 8003c8c:	d105      	bne.n	8003c9a <HAL_TIM_Encoder_Start+0x92>
 8003c8e:	7b7b      	ldrb	r3, [r7, #13]
 8003c90:	2b01      	cmp	r3, #1
 8003c92:	d102      	bne.n	8003c9a <HAL_TIM_Encoder_Start+0x92>
 8003c94:	7b3b      	ldrb	r3, [r7, #12]
 8003c96:	2b01      	cmp	r3, #1
 8003c98:	d001      	beq.n	8003c9e <HAL_TIM_Encoder_Start+0x96>
 8003c9a:	2301      	movs	r3, #1
 8003c9c:	e03e      	b.n	8003d1c <HAL_TIM_Encoder_Start+0x114>
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	2202      	movs	r2, #2
 8003ca2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	2202      	movs	r2, #2
 8003caa:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	2202      	movs	r2, #2
 8003cb2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	2202      	movs	r2, #2
 8003cba:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003cbe:	683b      	ldr	r3, [r7, #0]
 8003cc0:	2b00      	cmp	r3, #0
 8003cc2:	d003      	beq.n	8003ccc <HAL_TIM_Encoder_Start+0xc4>
 8003cc4:	683b      	ldr	r3, [r7, #0]
 8003cc6:	2b04      	cmp	r3, #4
 8003cc8:	d008      	beq.n	8003cdc <HAL_TIM_Encoder_Start+0xd4>
 8003cca:	e00f      	b.n	8003cec <HAL_TIM_Encoder_Start+0xe4>
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	681b      	ldr	r3, [r3, #0]
 8003cd0:	2201      	movs	r2, #1
 8003cd2:	2100      	movs	r1, #0
 8003cd4:	4618      	mov	r0, r3
 8003cd6:	f000 fc5f 	bl	8004598 <TIM_CCxChannelCmd>
 8003cda:	e016      	b.n	8003d0a <HAL_TIM_Encoder_Start+0x102>
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	2201      	movs	r2, #1
 8003ce2:	2104      	movs	r1, #4
 8003ce4:	4618      	mov	r0, r3
 8003ce6:	f000 fc57 	bl	8004598 <TIM_CCxChannelCmd>
 8003cea:	e00e      	b.n	8003d0a <HAL_TIM_Encoder_Start+0x102>
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	2201      	movs	r2, #1
 8003cf2:	2100      	movs	r1, #0
 8003cf4:	4618      	mov	r0, r3
 8003cf6:	f000 fc4f 	bl	8004598 <TIM_CCxChannelCmd>
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	681b      	ldr	r3, [r3, #0]
 8003cfe:	2201      	movs	r2, #1
 8003d00:	2104      	movs	r1, #4
 8003d02:	4618      	mov	r0, r3
 8003d04:	f000 fc48 	bl	8004598 <TIM_CCxChannelCmd>
 8003d08:	bf00      	nop
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	681b      	ldr	r3, [r3, #0]
 8003d0e:	681a      	ldr	r2, [r3, #0]
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	f042 0201 	orr.w	r2, r2, #1
 8003d18:	601a      	str	r2, [r3, #0]
 8003d1a:	2300      	movs	r3, #0
 8003d1c:	4618      	mov	r0, r3
 8003d1e:	3710      	adds	r7, #16
 8003d20:	46bd      	mov	sp, r7
 8003d22:	bd80      	pop	{r7, pc}

08003d24 <HAL_TIM_IRQHandler>:
 8003d24:	b580      	push	{r7, lr}
 8003d26:	b084      	sub	sp, #16
 8003d28:	af00      	add	r7, sp, #0
 8003d2a:	6078      	str	r0, [r7, #4]
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	68db      	ldr	r3, [r3, #12]
 8003d32:	60fb      	str	r3, [r7, #12]
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	691b      	ldr	r3, [r3, #16]
 8003d3a:	60bb      	str	r3, [r7, #8]
 8003d3c:	68bb      	ldr	r3, [r7, #8]
 8003d3e:	f003 0302 	and.w	r3, r3, #2
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	d020      	beq.n	8003d88 <HAL_TIM_IRQHandler+0x64>
 8003d46:	68fb      	ldr	r3, [r7, #12]
 8003d48:	f003 0302 	and.w	r3, r3, #2
 8003d4c:	2b00      	cmp	r3, #0
 8003d4e:	d01b      	beq.n	8003d88 <HAL_TIM_IRQHandler+0x64>
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	f06f 0202 	mvn.w	r2, #2
 8003d58:	611a      	str	r2, [r3, #16]
 8003d5a:	687b      	ldr	r3, [r7, #4]
 8003d5c:	2201      	movs	r2, #1
 8003d5e:	771a      	strb	r2, [r3, #28]
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	681b      	ldr	r3, [r3, #0]
 8003d64:	699b      	ldr	r3, [r3, #24]
 8003d66:	f003 0303 	and.w	r3, r3, #3
 8003d6a:	2b00      	cmp	r3, #0
 8003d6c:	d003      	beq.n	8003d76 <HAL_TIM_IRQHandler+0x52>
 8003d6e:	6878      	ldr	r0, [r7, #4]
 8003d70:	f000 f99e 	bl	80040b0 <HAL_TIM_IC_CaptureCallback>
 8003d74:	e005      	b.n	8003d82 <HAL_TIM_IRQHandler+0x5e>
 8003d76:	6878      	ldr	r0, [r7, #4]
 8003d78:	f000 f990 	bl	800409c <HAL_TIM_OC_DelayElapsedCallback>
 8003d7c:	6878      	ldr	r0, [r7, #4]
 8003d7e:	f000 f9a1 	bl	80040c4 <HAL_TIM_PWM_PulseFinishedCallback>
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	2200      	movs	r2, #0
 8003d86:	771a      	strb	r2, [r3, #28]
 8003d88:	68bb      	ldr	r3, [r7, #8]
 8003d8a:	f003 0304 	and.w	r3, r3, #4
 8003d8e:	2b00      	cmp	r3, #0
 8003d90:	d020      	beq.n	8003dd4 <HAL_TIM_IRQHandler+0xb0>
 8003d92:	68fb      	ldr	r3, [r7, #12]
 8003d94:	f003 0304 	and.w	r3, r3, #4
 8003d98:	2b00      	cmp	r3, #0
 8003d9a:	d01b      	beq.n	8003dd4 <HAL_TIM_IRQHandler+0xb0>
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	681b      	ldr	r3, [r3, #0]
 8003da0:	f06f 0204 	mvn.w	r2, #4
 8003da4:	611a      	str	r2, [r3, #16]
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	2202      	movs	r2, #2
 8003daa:	771a      	strb	r2, [r3, #28]
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	699b      	ldr	r3, [r3, #24]
 8003db2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003db6:	2b00      	cmp	r3, #0
 8003db8:	d003      	beq.n	8003dc2 <HAL_TIM_IRQHandler+0x9e>
 8003dba:	6878      	ldr	r0, [r7, #4]
 8003dbc:	f000 f978 	bl	80040b0 <HAL_TIM_IC_CaptureCallback>
 8003dc0:	e005      	b.n	8003dce <HAL_TIM_IRQHandler+0xaa>
 8003dc2:	6878      	ldr	r0, [r7, #4]
 8003dc4:	f000 f96a 	bl	800409c <HAL_TIM_OC_DelayElapsedCallback>
 8003dc8:	6878      	ldr	r0, [r7, #4]
 8003dca:	f000 f97b 	bl	80040c4 <HAL_TIM_PWM_PulseFinishedCallback>
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	2200      	movs	r2, #0
 8003dd2:	771a      	strb	r2, [r3, #28]
 8003dd4:	68bb      	ldr	r3, [r7, #8]
 8003dd6:	f003 0308 	and.w	r3, r3, #8
 8003dda:	2b00      	cmp	r3, #0
 8003ddc:	d020      	beq.n	8003e20 <HAL_TIM_IRQHandler+0xfc>
 8003dde:	68fb      	ldr	r3, [r7, #12]
 8003de0:	f003 0308 	and.w	r3, r3, #8
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	d01b      	beq.n	8003e20 <HAL_TIM_IRQHandler+0xfc>
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	f06f 0208 	mvn.w	r2, #8
 8003df0:	611a      	str	r2, [r3, #16]
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	2204      	movs	r2, #4
 8003df6:	771a      	strb	r2, [r3, #28]
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	69db      	ldr	r3, [r3, #28]
 8003dfe:	f003 0303 	and.w	r3, r3, #3
 8003e02:	2b00      	cmp	r3, #0
 8003e04:	d003      	beq.n	8003e0e <HAL_TIM_IRQHandler+0xea>
 8003e06:	6878      	ldr	r0, [r7, #4]
 8003e08:	f000 f952 	bl	80040b0 <HAL_TIM_IC_CaptureCallback>
 8003e0c:	e005      	b.n	8003e1a <HAL_TIM_IRQHandler+0xf6>
 8003e0e:	6878      	ldr	r0, [r7, #4]
 8003e10:	f000 f944 	bl	800409c <HAL_TIM_OC_DelayElapsedCallback>
 8003e14:	6878      	ldr	r0, [r7, #4]
 8003e16:	f000 f955 	bl	80040c4 <HAL_TIM_PWM_PulseFinishedCallback>
 8003e1a:	687b      	ldr	r3, [r7, #4]
 8003e1c:	2200      	movs	r2, #0
 8003e1e:	771a      	strb	r2, [r3, #28]
 8003e20:	68bb      	ldr	r3, [r7, #8]
 8003e22:	f003 0310 	and.w	r3, r3, #16
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	d020      	beq.n	8003e6c <HAL_TIM_IRQHandler+0x148>
 8003e2a:	68fb      	ldr	r3, [r7, #12]
 8003e2c:	f003 0310 	and.w	r3, r3, #16
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	d01b      	beq.n	8003e6c <HAL_TIM_IRQHandler+0x148>
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	f06f 0210 	mvn.w	r2, #16
 8003e3c:	611a      	str	r2, [r3, #16]
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	2208      	movs	r2, #8
 8003e42:	771a      	strb	r2, [r3, #28]
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	69db      	ldr	r3, [r3, #28]
 8003e4a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	d003      	beq.n	8003e5a <HAL_TIM_IRQHandler+0x136>
 8003e52:	6878      	ldr	r0, [r7, #4]
 8003e54:	f000 f92c 	bl	80040b0 <HAL_TIM_IC_CaptureCallback>
 8003e58:	e005      	b.n	8003e66 <HAL_TIM_IRQHandler+0x142>
 8003e5a:	6878      	ldr	r0, [r7, #4]
 8003e5c:	f000 f91e 	bl	800409c <HAL_TIM_OC_DelayElapsedCallback>
 8003e60:	6878      	ldr	r0, [r7, #4]
 8003e62:	f000 f92f 	bl	80040c4 <HAL_TIM_PWM_PulseFinishedCallback>
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	2200      	movs	r2, #0
 8003e6a:	771a      	strb	r2, [r3, #28]
 8003e6c:	68bb      	ldr	r3, [r7, #8]
 8003e6e:	f003 0301 	and.w	r3, r3, #1
 8003e72:	2b00      	cmp	r3, #0
 8003e74:	d00c      	beq.n	8003e90 <HAL_TIM_IRQHandler+0x16c>
 8003e76:	68fb      	ldr	r3, [r7, #12]
 8003e78:	f003 0301 	and.w	r3, r3, #1
 8003e7c:	2b00      	cmp	r3, #0
 8003e7e:	d007      	beq.n	8003e90 <HAL_TIM_IRQHandler+0x16c>
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	681b      	ldr	r3, [r3, #0]
 8003e84:	f06f 0201 	mvn.w	r2, #1
 8003e88:	611a      	str	r2, [r3, #16]
 8003e8a:	6878      	ldr	r0, [r7, #4]
 8003e8c:	f000 f8fc 	bl	8004088 <HAL_TIM_PeriodElapsedCallback>
 8003e90:	68bb      	ldr	r3, [r7, #8]
 8003e92:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003e96:	2b00      	cmp	r3, #0
 8003e98:	d00c      	beq.n	8003eb4 <HAL_TIM_IRQHandler+0x190>
 8003e9a:	68fb      	ldr	r3, [r7, #12]
 8003e9c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	d007      	beq.n	8003eb4 <HAL_TIM_IRQHandler+0x190>
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8003eac:	611a      	str	r2, [r3, #16]
 8003eae:	6878      	ldr	r0, [r7, #4]
 8003eb0:	f000 fc1e 	bl	80046f0 <HAL_TIMEx_BreakCallback>
 8003eb4:	68bb      	ldr	r3, [r7, #8]
 8003eb6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	d00c      	beq.n	8003ed8 <HAL_TIM_IRQHandler+0x1b4>
 8003ebe:	68fb      	ldr	r3, [r7, #12]
 8003ec0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003ec4:	2b00      	cmp	r3, #0
 8003ec6:	d007      	beq.n	8003ed8 <HAL_TIM_IRQHandler+0x1b4>
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8003ed0:	611a      	str	r2, [r3, #16]
 8003ed2:	6878      	ldr	r0, [r7, #4]
 8003ed4:	f000 f900 	bl	80040d8 <HAL_TIM_TriggerCallback>
 8003ed8:	68bb      	ldr	r3, [r7, #8]
 8003eda:	f003 0320 	and.w	r3, r3, #32
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	d00c      	beq.n	8003efc <HAL_TIM_IRQHandler+0x1d8>
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	f003 0320 	and.w	r3, r3, #32
 8003ee8:	2b00      	cmp	r3, #0
 8003eea:	d007      	beq.n	8003efc <HAL_TIM_IRQHandler+0x1d8>
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	f06f 0220 	mvn.w	r2, #32
 8003ef4:	611a      	str	r2, [r3, #16]
 8003ef6:	6878      	ldr	r0, [r7, #4]
 8003ef8:	f000 fbf0 	bl	80046dc <HAL_TIMEx_CommutCallback>
 8003efc:	bf00      	nop
 8003efe:	3710      	adds	r7, #16
 8003f00:	46bd      	mov	sp, r7
 8003f02:	bd80      	pop	{r7, pc}

08003f04 <HAL_TIM_PWM_ConfigChannel>:
 8003f04:	b580      	push	{r7, lr}
 8003f06:	b086      	sub	sp, #24
 8003f08:	af00      	add	r7, sp, #0
 8003f0a:	60f8      	str	r0, [r7, #12]
 8003f0c:	60b9      	str	r1, [r7, #8]
 8003f0e:	607a      	str	r2, [r7, #4]
 8003f10:	2300      	movs	r3, #0
 8003f12:	75fb      	strb	r3, [r7, #23]
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003f1a:	2b01      	cmp	r3, #1
 8003f1c:	d101      	bne.n	8003f22 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8003f1e:	2302      	movs	r3, #2
 8003f20:	e0ae      	b.n	8004080 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8003f22:	68fb      	ldr	r3, [r7, #12]
 8003f24:	2201      	movs	r2, #1
 8003f26:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	2b0c      	cmp	r3, #12
 8003f2e:	f200 809f 	bhi.w	8004070 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8003f32:	a201      	add	r2, pc, #4	@ (adr r2, 8003f38 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8003f34:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f38:	08003f6d 	.word	0x08003f6d
 8003f3c:	08004071 	.word	0x08004071
 8003f40:	08004071 	.word	0x08004071
 8003f44:	08004071 	.word	0x08004071
 8003f48:	08003fad 	.word	0x08003fad
 8003f4c:	08004071 	.word	0x08004071
 8003f50:	08004071 	.word	0x08004071
 8003f54:	08004071 	.word	0x08004071
 8003f58:	08003fef 	.word	0x08003fef
 8003f5c:	08004071 	.word	0x08004071
 8003f60:	08004071 	.word	0x08004071
 8003f64:	08004071 	.word	0x08004071
 8003f68:	0800402f 	.word	0x0800402f
 8003f6c:	68fb      	ldr	r3, [r7, #12]
 8003f6e:	681b      	ldr	r3, [r3, #0]
 8003f70:	68b9      	ldr	r1, [r7, #8]
 8003f72:	4618      	mov	r0, r3
 8003f74:	f000 f960 	bl	8004238 <TIM_OC1_SetConfig>
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	699a      	ldr	r2, [r3, #24]
 8003f7e:	68fb      	ldr	r3, [r7, #12]
 8003f80:	681b      	ldr	r3, [r3, #0]
 8003f82:	f042 0208 	orr.w	r2, r2, #8
 8003f86:	619a      	str	r2, [r3, #24]
 8003f88:	68fb      	ldr	r3, [r7, #12]
 8003f8a:	681b      	ldr	r3, [r3, #0]
 8003f8c:	699a      	ldr	r2, [r3, #24]
 8003f8e:	68fb      	ldr	r3, [r7, #12]
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	f022 0204 	bic.w	r2, r2, #4
 8003f96:	619a      	str	r2, [r3, #24]
 8003f98:	68fb      	ldr	r3, [r7, #12]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	6999      	ldr	r1, [r3, #24]
 8003f9e:	68bb      	ldr	r3, [r7, #8]
 8003fa0:	691a      	ldr	r2, [r3, #16]
 8003fa2:	68fb      	ldr	r3, [r7, #12]
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	430a      	orrs	r2, r1
 8003fa8:	619a      	str	r2, [r3, #24]
 8003faa:	e064      	b.n	8004076 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003fac:	68fb      	ldr	r3, [r7, #12]
 8003fae:	681b      	ldr	r3, [r3, #0]
 8003fb0:	68b9      	ldr	r1, [r7, #8]
 8003fb2:	4618      	mov	r0, r3
 8003fb4:	f000 f9b0 	bl	8004318 <TIM_OC2_SetConfig>
 8003fb8:	68fb      	ldr	r3, [r7, #12]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	699a      	ldr	r2, [r3, #24]
 8003fbe:	68fb      	ldr	r3, [r7, #12]
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003fc6:	619a      	str	r2, [r3, #24]
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	699a      	ldr	r2, [r3, #24]
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003fd6:	619a      	str	r2, [r3, #24]
 8003fd8:	68fb      	ldr	r3, [r7, #12]
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	6999      	ldr	r1, [r3, #24]
 8003fde:	68bb      	ldr	r3, [r7, #8]
 8003fe0:	691b      	ldr	r3, [r3, #16]
 8003fe2:	021a      	lsls	r2, r3, #8
 8003fe4:	68fb      	ldr	r3, [r7, #12]
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	430a      	orrs	r2, r1
 8003fea:	619a      	str	r2, [r3, #24]
 8003fec:	e043      	b.n	8004076 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003fee:	68fb      	ldr	r3, [r7, #12]
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	68b9      	ldr	r1, [r7, #8]
 8003ff4:	4618      	mov	r0, r3
 8003ff6:	f000 fa05 	bl	8004404 <TIM_OC3_SetConfig>
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	69da      	ldr	r2, [r3, #28]
 8004000:	68fb      	ldr	r3, [r7, #12]
 8004002:	681b      	ldr	r3, [r3, #0]
 8004004:	f042 0208 	orr.w	r2, r2, #8
 8004008:	61da      	str	r2, [r3, #28]
 800400a:	68fb      	ldr	r3, [r7, #12]
 800400c:	681b      	ldr	r3, [r3, #0]
 800400e:	69da      	ldr	r2, [r3, #28]
 8004010:	68fb      	ldr	r3, [r7, #12]
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	f022 0204 	bic.w	r2, r2, #4
 8004018:	61da      	str	r2, [r3, #28]
 800401a:	68fb      	ldr	r3, [r7, #12]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	69d9      	ldr	r1, [r3, #28]
 8004020:	68bb      	ldr	r3, [r7, #8]
 8004022:	691a      	ldr	r2, [r3, #16]
 8004024:	68fb      	ldr	r3, [r7, #12]
 8004026:	681b      	ldr	r3, [r3, #0]
 8004028:	430a      	orrs	r2, r1
 800402a:	61da      	str	r2, [r3, #28]
 800402c:	e023      	b.n	8004076 <HAL_TIM_PWM_ConfigChannel+0x172>
 800402e:	68fb      	ldr	r3, [r7, #12]
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	68b9      	ldr	r1, [r7, #8]
 8004034:	4618      	mov	r0, r3
 8004036:	f000 fa59 	bl	80044ec <TIM_OC4_SetConfig>
 800403a:	68fb      	ldr	r3, [r7, #12]
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	69da      	ldr	r2, [r3, #28]
 8004040:	68fb      	ldr	r3, [r7, #12]
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004048:	61da      	str	r2, [r3, #28]
 800404a:	68fb      	ldr	r3, [r7, #12]
 800404c:	681b      	ldr	r3, [r3, #0]
 800404e:	69da      	ldr	r2, [r3, #28]
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	681b      	ldr	r3, [r3, #0]
 8004054:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004058:	61da      	str	r2, [r3, #28]
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	69d9      	ldr	r1, [r3, #28]
 8004060:	68bb      	ldr	r3, [r7, #8]
 8004062:	691b      	ldr	r3, [r3, #16]
 8004064:	021a      	lsls	r2, r3, #8
 8004066:	68fb      	ldr	r3, [r7, #12]
 8004068:	681b      	ldr	r3, [r3, #0]
 800406a:	430a      	orrs	r2, r1
 800406c:	61da      	str	r2, [r3, #28]
 800406e:	e002      	b.n	8004076 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004070:	2301      	movs	r3, #1
 8004072:	75fb      	strb	r3, [r7, #23]
 8004074:	bf00      	nop
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	2200      	movs	r2, #0
 800407a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800407e:	7dfb      	ldrb	r3, [r7, #23]
 8004080:	4618      	mov	r0, r3
 8004082:	3718      	adds	r7, #24
 8004084:	46bd      	mov	sp, r7
 8004086:	bd80      	pop	{r7, pc}

08004088 <HAL_TIM_PeriodElapsedCallback>:
 8004088:	b480      	push	{r7}
 800408a:	b083      	sub	sp, #12
 800408c:	af00      	add	r7, sp, #0
 800408e:	6078      	str	r0, [r7, #4]
 8004090:	bf00      	nop
 8004092:	370c      	adds	r7, #12
 8004094:	46bd      	mov	sp, r7
 8004096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800409a:	4770      	bx	lr

0800409c <HAL_TIM_OC_DelayElapsedCallback>:
 800409c:	b480      	push	{r7}
 800409e:	b083      	sub	sp, #12
 80040a0:	af00      	add	r7, sp, #0
 80040a2:	6078      	str	r0, [r7, #4]
 80040a4:	bf00      	nop
 80040a6:	370c      	adds	r7, #12
 80040a8:	46bd      	mov	sp, r7
 80040aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ae:	4770      	bx	lr

080040b0 <HAL_TIM_IC_CaptureCallback>:
 80040b0:	b480      	push	{r7}
 80040b2:	b083      	sub	sp, #12
 80040b4:	af00      	add	r7, sp, #0
 80040b6:	6078      	str	r0, [r7, #4]
 80040b8:	bf00      	nop
 80040ba:	370c      	adds	r7, #12
 80040bc:	46bd      	mov	sp, r7
 80040be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040c2:	4770      	bx	lr

080040c4 <HAL_TIM_PWM_PulseFinishedCallback>:
 80040c4:	b480      	push	{r7}
 80040c6:	b083      	sub	sp, #12
 80040c8:	af00      	add	r7, sp, #0
 80040ca:	6078      	str	r0, [r7, #4]
 80040cc:	bf00      	nop
 80040ce:	370c      	adds	r7, #12
 80040d0:	46bd      	mov	sp, r7
 80040d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040d6:	4770      	bx	lr

080040d8 <HAL_TIM_TriggerCallback>:
 80040d8:	b480      	push	{r7}
 80040da:	b083      	sub	sp, #12
 80040dc:	af00      	add	r7, sp, #0
 80040de:	6078      	str	r0, [r7, #4]
 80040e0:	bf00      	nop
 80040e2:	370c      	adds	r7, #12
 80040e4:	46bd      	mov	sp, r7
 80040e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ea:	4770      	bx	lr

080040ec <TIM_Base_SetConfig>:
 80040ec:	b480      	push	{r7}
 80040ee:	b085      	sub	sp, #20
 80040f0:	af00      	add	r7, sp, #0
 80040f2:	6078      	str	r0, [r7, #4]
 80040f4:	6039      	str	r1, [r7, #0]
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	60fb      	str	r3, [r7, #12]
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	4a43      	ldr	r2, [pc, #268]	@ (800420c <TIM_Base_SetConfig+0x120>)
 8004100:	4293      	cmp	r3, r2
 8004102:	d013      	beq.n	800412c <TIM_Base_SetConfig+0x40>
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800410a:	d00f      	beq.n	800412c <TIM_Base_SetConfig+0x40>
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	4a40      	ldr	r2, [pc, #256]	@ (8004210 <TIM_Base_SetConfig+0x124>)
 8004110:	4293      	cmp	r3, r2
 8004112:	d00b      	beq.n	800412c <TIM_Base_SetConfig+0x40>
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	4a3f      	ldr	r2, [pc, #252]	@ (8004214 <TIM_Base_SetConfig+0x128>)
 8004118:	4293      	cmp	r3, r2
 800411a:	d007      	beq.n	800412c <TIM_Base_SetConfig+0x40>
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	4a3e      	ldr	r2, [pc, #248]	@ (8004218 <TIM_Base_SetConfig+0x12c>)
 8004120:	4293      	cmp	r3, r2
 8004122:	d003      	beq.n	800412c <TIM_Base_SetConfig+0x40>
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	4a3d      	ldr	r2, [pc, #244]	@ (800421c <TIM_Base_SetConfig+0x130>)
 8004128:	4293      	cmp	r3, r2
 800412a:	d108      	bne.n	800413e <TIM_Base_SetConfig+0x52>
 800412c:	68fb      	ldr	r3, [r7, #12]
 800412e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004132:	60fb      	str	r3, [r7, #12]
 8004134:	683b      	ldr	r3, [r7, #0]
 8004136:	685b      	ldr	r3, [r3, #4]
 8004138:	68fa      	ldr	r2, [r7, #12]
 800413a:	4313      	orrs	r3, r2
 800413c:	60fb      	str	r3, [r7, #12]
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	4a32      	ldr	r2, [pc, #200]	@ (800420c <TIM_Base_SetConfig+0x120>)
 8004142:	4293      	cmp	r3, r2
 8004144:	d02b      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800414c:	d027      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	4a2f      	ldr	r2, [pc, #188]	@ (8004210 <TIM_Base_SetConfig+0x124>)
 8004152:	4293      	cmp	r3, r2
 8004154:	d023      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	4a2e      	ldr	r2, [pc, #184]	@ (8004214 <TIM_Base_SetConfig+0x128>)
 800415a:	4293      	cmp	r3, r2
 800415c:	d01f      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	4a2d      	ldr	r2, [pc, #180]	@ (8004218 <TIM_Base_SetConfig+0x12c>)
 8004162:	4293      	cmp	r3, r2
 8004164:	d01b      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	4a2c      	ldr	r2, [pc, #176]	@ (800421c <TIM_Base_SetConfig+0x130>)
 800416a:	4293      	cmp	r3, r2
 800416c:	d017      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	4a2b      	ldr	r2, [pc, #172]	@ (8004220 <TIM_Base_SetConfig+0x134>)
 8004172:	4293      	cmp	r3, r2
 8004174:	d013      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	4a2a      	ldr	r2, [pc, #168]	@ (8004224 <TIM_Base_SetConfig+0x138>)
 800417a:	4293      	cmp	r3, r2
 800417c:	d00f      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	4a29      	ldr	r2, [pc, #164]	@ (8004228 <TIM_Base_SetConfig+0x13c>)
 8004182:	4293      	cmp	r3, r2
 8004184:	d00b      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	4a28      	ldr	r2, [pc, #160]	@ (800422c <TIM_Base_SetConfig+0x140>)
 800418a:	4293      	cmp	r3, r2
 800418c:	d007      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	4a27      	ldr	r2, [pc, #156]	@ (8004230 <TIM_Base_SetConfig+0x144>)
 8004192:	4293      	cmp	r3, r2
 8004194:	d003      	beq.n	800419e <TIM_Base_SetConfig+0xb2>
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	4a26      	ldr	r2, [pc, #152]	@ (8004234 <TIM_Base_SetConfig+0x148>)
 800419a:	4293      	cmp	r3, r2
 800419c:	d108      	bne.n	80041b0 <TIM_Base_SetConfig+0xc4>
 800419e:	68fb      	ldr	r3, [r7, #12]
 80041a0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80041a4:	60fb      	str	r3, [r7, #12]
 80041a6:	683b      	ldr	r3, [r7, #0]
 80041a8:	68db      	ldr	r3, [r3, #12]
 80041aa:	68fa      	ldr	r2, [r7, #12]
 80041ac:	4313      	orrs	r3, r2
 80041ae:	60fb      	str	r3, [r7, #12]
 80041b0:	68fb      	ldr	r3, [r7, #12]
 80041b2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80041b6:	683b      	ldr	r3, [r7, #0]
 80041b8:	695b      	ldr	r3, [r3, #20]
 80041ba:	4313      	orrs	r3, r2
 80041bc:	60fb      	str	r3, [r7, #12]
 80041be:	683b      	ldr	r3, [r7, #0]
 80041c0:	689a      	ldr	r2, [r3, #8]
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80041c6:	683b      	ldr	r3, [r7, #0]
 80041c8:	681a      	ldr	r2, [r3, #0]
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	629a      	str	r2, [r3, #40]	@ 0x28
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	4a0e      	ldr	r2, [pc, #56]	@ (800420c <TIM_Base_SetConfig+0x120>)
 80041d2:	4293      	cmp	r3, r2
 80041d4:	d003      	beq.n	80041de <TIM_Base_SetConfig+0xf2>
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	4a10      	ldr	r2, [pc, #64]	@ (800421c <TIM_Base_SetConfig+0x130>)
 80041da:	4293      	cmp	r3, r2
 80041dc:	d103      	bne.n	80041e6 <TIM_Base_SetConfig+0xfa>
 80041de:	683b      	ldr	r3, [r7, #0]
 80041e0:	691a      	ldr	r2, [r3, #16]
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	631a      	str	r2, [r3, #48]	@ 0x30
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	681b      	ldr	r3, [r3, #0]
 80041ea:	f043 0204 	orr.w	r2, r3, #4
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	601a      	str	r2, [r3, #0]
 80041f2:	687b      	ldr	r3, [r7, #4]
 80041f4:	2201      	movs	r2, #1
 80041f6:	615a      	str	r2, [r3, #20]
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	68fa      	ldr	r2, [r7, #12]
 80041fc:	601a      	str	r2, [r3, #0]
 80041fe:	bf00      	nop
 8004200:	3714      	adds	r7, #20
 8004202:	46bd      	mov	sp, r7
 8004204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004208:	4770      	bx	lr
 800420a:	bf00      	nop
 800420c:	40010000 	.word	0x40010000
 8004210:	40000400 	.word	0x40000400
 8004214:	40000800 	.word	0x40000800
 8004218:	40000c00 	.word	0x40000c00
 800421c:	40010400 	.word	0x40010400
 8004220:	40014000 	.word	0x40014000
 8004224:	40014400 	.word	0x40014400
 8004228:	40014800 	.word	0x40014800
 800422c:	40001800 	.word	0x40001800
 8004230:	40001c00 	.word	0x40001c00
 8004234:	40002000 	.word	0x40002000

08004238 <TIM_OC1_SetConfig>:
 8004238:	b480      	push	{r7}
 800423a:	b087      	sub	sp, #28
 800423c:	af00      	add	r7, sp, #0
 800423e:	6078      	str	r0, [r7, #4]
 8004240:	6039      	str	r1, [r7, #0]
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	6a1b      	ldr	r3, [r3, #32]
 8004246:	617b      	str	r3, [r7, #20]
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	6a1b      	ldr	r3, [r3, #32]
 800424c:	f023 0201 	bic.w	r2, r3, #1
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	621a      	str	r2, [r3, #32]
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	685b      	ldr	r3, [r3, #4]
 8004258:	613b      	str	r3, [r7, #16]
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	699b      	ldr	r3, [r3, #24]
 800425e:	60fb      	str	r3, [r7, #12]
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004266:	60fb      	str	r3, [r7, #12]
 8004268:	68fb      	ldr	r3, [r7, #12]
 800426a:	f023 0303 	bic.w	r3, r3, #3
 800426e:	60fb      	str	r3, [r7, #12]
 8004270:	683b      	ldr	r3, [r7, #0]
 8004272:	681b      	ldr	r3, [r3, #0]
 8004274:	68fa      	ldr	r2, [r7, #12]
 8004276:	4313      	orrs	r3, r2
 8004278:	60fb      	str	r3, [r7, #12]
 800427a:	697b      	ldr	r3, [r7, #20]
 800427c:	f023 0302 	bic.w	r3, r3, #2
 8004280:	617b      	str	r3, [r7, #20]
 8004282:	683b      	ldr	r3, [r7, #0]
 8004284:	689b      	ldr	r3, [r3, #8]
 8004286:	697a      	ldr	r2, [r7, #20]
 8004288:	4313      	orrs	r3, r2
 800428a:	617b      	str	r3, [r7, #20]
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	4a20      	ldr	r2, [pc, #128]	@ (8004310 <TIM_OC1_SetConfig+0xd8>)
 8004290:	4293      	cmp	r3, r2
 8004292:	d003      	beq.n	800429c <TIM_OC1_SetConfig+0x64>
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	4a1f      	ldr	r2, [pc, #124]	@ (8004314 <TIM_OC1_SetConfig+0xdc>)
 8004298:	4293      	cmp	r3, r2
 800429a:	d10c      	bne.n	80042b6 <TIM_OC1_SetConfig+0x7e>
 800429c:	697b      	ldr	r3, [r7, #20]
 800429e:	f023 0308 	bic.w	r3, r3, #8
 80042a2:	617b      	str	r3, [r7, #20]
 80042a4:	683b      	ldr	r3, [r7, #0]
 80042a6:	68db      	ldr	r3, [r3, #12]
 80042a8:	697a      	ldr	r2, [r7, #20]
 80042aa:	4313      	orrs	r3, r2
 80042ac:	617b      	str	r3, [r7, #20]
 80042ae:	697b      	ldr	r3, [r7, #20]
 80042b0:	f023 0304 	bic.w	r3, r3, #4
 80042b4:	617b      	str	r3, [r7, #20]
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	4a15      	ldr	r2, [pc, #84]	@ (8004310 <TIM_OC1_SetConfig+0xd8>)
 80042ba:	4293      	cmp	r3, r2
 80042bc:	d003      	beq.n	80042c6 <TIM_OC1_SetConfig+0x8e>
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	4a14      	ldr	r2, [pc, #80]	@ (8004314 <TIM_OC1_SetConfig+0xdc>)
 80042c2:	4293      	cmp	r3, r2
 80042c4:	d111      	bne.n	80042ea <TIM_OC1_SetConfig+0xb2>
 80042c6:	693b      	ldr	r3, [r7, #16]
 80042c8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80042cc:	613b      	str	r3, [r7, #16]
 80042ce:	693b      	ldr	r3, [r7, #16]
 80042d0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80042d4:	613b      	str	r3, [r7, #16]
 80042d6:	683b      	ldr	r3, [r7, #0]
 80042d8:	695b      	ldr	r3, [r3, #20]
 80042da:	693a      	ldr	r2, [r7, #16]
 80042dc:	4313      	orrs	r3, r2
 80042de:	613b      	str	r3, [r7, #16]
 80042e0:	683b      	ldr	r3, [r7, #0]
 80042e2:	699b      	ldr	r3, [r3, #24]
 80042e4:	693a      	ldr	r2, [r7, #16]
 80042e6:	4313      	orrs	r3, r2
 80042e8:	613b      	str	r3, [r7, #16]
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	693a      	ldr	r2, [r7, #16]
 80042ee:	605a      	str	r2, [r3, #4]
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	68fa      	ldr	r2, [r7, #12]
 80042f4:	619a      	str	r2, [r3, #24]
 80042f6:	683b      	ldr	r3, [r7, #0]
 80042f8:	685a      	ldr	r2, [r3, #4]
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	635a      	str	r2, [r3, #52]	@ 0x34
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	697a      	ldr	r2, [r7, #20]
 8004302:	621a      	str	r2, [r3, #32]
 8004304:	bf00      	nop
 8004306:	371c      	adds	r7, #28
 8004308:	46bd      	mov	sp, r7
 800430a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800430e:	4770      	bx	lr
 8004310:	40010000 	.word	0x40010000
 8004314:	40010400 	.word	0x40010400

08004318 <TIM_OC2_SetConfig>:
 8004318:	b480      	push	{r7}
 800431a:	b087      	sub	sp, #28
 800431c:	af00      	add	r7, sp, #0
 800431e:	6078      	str	r0, [r7, #4]
 8004320:	6039      	str	r1, [r7, #0]
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	6a1b      	ldr	r3, [r3, #32]
 8004326:	617b      	str	r3, [r7, #20]
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	6a1b      	ldr	r3, [r3, #32]
 800432c:	f023 0210 	bic.w	r2, r3, #16
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	621a      	str	r2, [r3, #32]
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	685b      	ldr	r3, [r3, #4]
 8004338:	613b      	str	r3, [r7, #16]
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	699b      	ldr	r3, [r3, #24]
 800433e:	60fb      	str	r3, [r7, #12]
 8004340:	68fb      	ldr	r3, [r7, #12]
 8004342:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004346:	60fb      	str	r3, [r7, #12]
 8004348:	68fb      	ldr	r3, [r7, #12]
 800434a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800434e:	60fb      	str	r3, [r7, #12]
 8004350:	683b      	ldr	r3, [r7, #0]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	021b      	lsls	r3, r3, #8
 8004356:	68fa      	ldr	r2, [r7, #12]
 8004358:	4313      	orrs	r3, r2
 800435a:	60fb      	str	r3, [r7, #12]
 800435c:	697b      	ldr	r3, [r7, #20]
 800435e:	f023 0320 	bic.w	r3, r3, #32
 8004362:	617b      	str	r3, [r7, #20]
 8004364:	683b      	ldr	r3, [r7, #0]
 8004366:	689b      	ldr	r3, [r3, #8]
 8004368:	011b      	lsls	r3, r3, #4
 800436a:	697a      	ldr	r2, [r7, #20]
 800436c:	4313      	orrs	r3, r2
 800436e:	617b      	str	r3, [r7, #20]
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	4a22      	ldr	r2, [pc, #136]	@ (80043fc <TIM_OC2_SetConfig+0xe4>)
 8004374:	4293      	cmp	r3, r2
 8004376:	d003      	beq.n	8004380 <TIM_OC2_SetConfig+0x68>
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	4a21      	ldr	r2, [pc, #132]	@ (8004400 <TIM_OC2_SetConfig+0xe8>)
 800437c:	4293      	cmp	r3, r2
 800437e:	d10d      	bne.n	800439c <TIM_OC2_SetConfig+0x84>
 8004380:	697b      	ldr	r3, [r7, #20]
 8004382:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004386:	617b      	str	r3, [r7, #20]
 8004388:	683b      	ldr	r3, [r7, #0]
 800438a:	68db      	ldr	r3, [r3, #12]
 800438c:	011b      	lsls	r3, r3, #4
 800438e:	697a      	ldr	r2, [r7, #20]
 8004390:	4313      	orrs	r3, r2
 8004392:	617b      	str	r3, [r7, #20]
 8004394:	697b      	ldr	r3, [r7, #20]
 8004396:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800439a:	617b      	str	r3, [r7, #20]
 800439c:	687b      	ldr	r3, [r7, #4]
 800439e:	4a17      	ldr	r2, [pc, #92]	@ (80043fc <TIM_OC2_SetConfig+0xe4>)
 80043a0:	4293      	cmp	r3, r2
 80043a2:	d003      	beq.n	80043ac <TIM_OC2_SetConfig+0x94>
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	4a16      	ldr	r2, [pc, #88]	@ (8004400 <TIM_OC2_SetConfig+0xe8>)
 80043a8:	4293      	cmp	r3, r2
 80043aa:	d113      	bne.n	80043d4 <TIM_OC2_SetConfig+0xbc>
 80043ac:	693b      	ldr	r3, [r7, #16]
 80043ae:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80043b2:	613b      	str	r3, [r7, #16]
 80043b4:	693b      	ldr	r3, [r7, #16]
 80043b6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80043ba:	613b      	str	r3, [r7, #16]
 80043bc:	683b      	ldr	r3, [r7, #0]
 80043be:	695b      	ldr	r3, [r3, #20]
 80043c0:	009b      	lsls	r3, r3, #2
 80043c2:	693a      	ldr	r2, [r7, #16]
 80043c4:	4313      	orrs	r3, r2
 80043c6:	613b      	str	r3, [r7, #16]
 80043c8:	683b      	ldr	r3, [r7, #0]
 80043ca:	699b      	ldr	r3, [r3, #24]
 80043cc:	009b      	lsls	r3, r3, #2
 80043ce:	693a      	ldr	r2, [r7, #16]
 80043d0:	4313      	orrs	r3, r2
 80043d2:	613b      	str	r3, [r7, #16]
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	693a      	ldr	r2, [r7, #16]
 80043d8:	605a      	str	r2, [r3, #4]
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	68fa      	ldr	r2, [r7, #12]
 80043de:	619a      	str	r2, [r3, #24]
 80043e0:	683b      	ldr	r3, [r7, #0]
 80043e2:	685a      	ldr	r2, [r3, #4]
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	639a      	str	r2, [r3, #56]	@ 0x38
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	697a      	ldr	r2, [r7, #20]
 80043ec:	621a      	str	r2, [r3, #32]
 80043ee:	bf00      	nop
 80043f0:	371c      	adds	r7, #28
 80043f2:	46bd      	mov	sp, r7
 80043f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043f8:	4770      	bx	lr
 80043fa:	bf00      	nop
 80043fc:	40010000 	.word	0x40010000
 8004400:	40010400 	.word	0x40010400

08004404 <TIM_OC3_SetConfig>:
 8004404:	b480      	push	{r7}
 8004406:	b087      	sub	sp, #28
 8004408:	af00      	add	r7, sp, #0
 800440a:	6078      	str	r0, [r7, #4]
 800440c:	6039      	str	r1, [r7, #0]
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	6a1b      	ldr	r3, [r3, #32]
 8004412:	617b      	str	r3, [r7, #20]
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	6a1b      	ldr	r3, [r3, #32]
 8004418:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	621a      	str	r2, [r3, #32]
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	685b      	ldr	r3, [r3, #4]
 8004424:	613b      	str	r3, [r7, #16]
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	69db      	ldr	r3, [r3, #28]
 800442a:	60fb      	str	r3, [r7, #12]
 800442c:	68fb      	ldr	r3, [r7, #12]
 800442e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004432:	60fb      	str	r3, [r7, #12]
 8004434:	68fb      	ldr	r3, [r7, #12]
 8004436:	f023 0303 	bic.w	r3, r3, #3
 800443a:	60fb      	str	r3, [r7, #12]
 800443c:	683b      	ldr	r3, [r7, #0]
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	68fa      	ldr	r2, [r7, #12]
 8004442:	4313      	orrs	r3, r2
 8004444:	60fb      	str	r3, [r7, #12]
 8004446:	697b      	ldr	r3, [r7, #20]
 8004448:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800444c:	617b      	str	r3, [r7, #20]
 800444e:	683b      	ldr	r3, [r7, #0]
 8004450:	689b      	ldr	r3, [r3, #8]
 8004452:	021b      	lsls	r3, r3, #8
 8004454:	697a      	ldr	r2, [r7, #20]
 8004456:	4313      	orrs	r3, r2
 8004458:	617b      	str	r3, [r7, #20]
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	4a21      	ldr	r2, [pc, #132]	@ (80044e4 <TIM_OC3_SetConfig+0xe0>)
 800445e:	4293      	cmp	r3, r2
 8004460:	d003      	beq.n	800446a <TIM_OC3_SetConfig+0x66>
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	4a20      	ldr	r2, [pc, #128]	@ (80044e8 <TIM_OC3_SetConfig+0xe4>)
 8004466:	4293      	cmp	r3, r2
 8004468:	d10d      	bne.n	8004486 <TIM_OC3_SetConfig+0x82>
 800446a:	697b      	ldr	r3, [r7, #20]
 800446c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004470:	617b      	str	r3, [r7, #20]
 8004472:	683b      	ldr	r3, [r7, #0]
 8004474:	68db      	ldr	r3, [r3, #12]
 8004476:	021b      	lsls	r3, r3, #8
 8004478:	697a      	ldr	r2, [r7, #20]
 800447a:	4313      	orrs	r3, r2
 800447c:	617b      	str	r3, [r7, #20]
 800447e:	697b      	ldr	r3, [r7, #20]
 8004480:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004484:	617b      	str	r3, [r7, #20]
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	4a16      	ldr	r2, [pc, #88]	@ (80044e4 <TIM_OC3_SetConfig+0xe0>)
 800448a:	4293      	cmp	r3, r2
 800448c:	d003      	beq.n	8004496 <TIM_OC3_SetConfig+0x92>
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	4a15      	ldr	r2, [pc, #84]	@ (80044e8 <TIM_OC3_SetConfig+0xe4>)
 8004492:	4293      	cmp	r3, r2
 8004494:	d113      	bne.n	80044be <TIM_OC3_SetConfig+0xba>
 8004496:	693b      	ldr	r3, [r7, #16]
 8004498:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800449c:	613b      	str	r3, [r7, #16]
 800449e:	693b      	ldr	r3, [r7, #16]
 80044a0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80044a4:	613b      	str	r3, [r7, #16]
 80044a6:	683b      	ldr	r3, [r7, #0]
 80044a8:	695b      	ldr	r3, [r3, #20]
 80044aa:	011b      	lsls	r3, r3, #4
 80044ac:	693a      	ldr	r2, [r7, #16]
 80044ae:	4313      	orrs	r3, r2
 80044b0:	613b      	str	r3, [r7, #16]
 80044b2:	683b      	ldr	r3, [r7, #0]
 80044b4:	699b      	ldr	r3, [r3, #24]
 80044b6:	011b      	lsls	r3, r3, #4
 80044b8:	693a      	ldr	r2, [r7, #16]
 80044ba:	4313      	orrs	r3, r2
 80044bc:	613b      	str	r3, [r7, #16]
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	693a      	ldr	r2, [r7, #16]
 80044c2:	605a      	str	r2, [r3, #4]
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	68fa      	ldr	r2, [r7, #12]
 80044c8:	61da      	str	r2, [r3, #28]
 80044ca:	683b      	ldr	r3, [r7, #0]
 80044cc:	685a      	ldr	r2, [r3, #4]
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	697a      	ldr	r2, [r7, #20]
 80044d6:	621a      	str	r2, [r3, #32]
 80044d8:	bf00      	nop
 80044da:	371c      	adds	r7, #28
 80044dc:	46bd      	mov	sp, r7
 80044de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044e2:	4770      	bx	lr
 80044e4:	40010000 	.word	0x40010000
 80044e8:	40010400 	.word	0x40010400

080044ec <TIM_OC4_SetConfig>:
 80044ec:	b480      	push	{r7}
 80044ee:	b087      	sub	sp, #28
 80044f0:	af00      	add	r7, sp, #0
 80044f2:	6078      	str	r0, [r7, #4]
 80044f4:	6039      	str	r1, [r7, #0]
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	6a1b      	ldr	r3, [r3, #32]
 80044fa:	613b      	str	r3, [r7, #16]
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	6a1b      	ldr	r3, [r3, #32]
 8004500:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	621a      	str	r2, [r3, #32]
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	685b      	ldr	r3, [r3, #4]
 800450c:	617b      	str	r3, [r7, #20]
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	69db      	ldr	r3, [r3, #28]
 8004512:	60fb      	str	r3, [r7, #12]
 8004514:	68fb      	ldr	r3, [r7, #12]
 8004516:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800451a:	60fb      	str	r3, [r7, #12]
 800451c:	68fb      	ldr	r3, [r7, #12]
 800451e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004522:	60fb      	str	r3, [r7, #12]
 8004524:	683b      	ldr	r3, [r7, #0]
 8004526:	681b      	ldr	r3, [r3, #0]
 8004528:	021b      	lsls	r3, r3, #8
 800452a:	68fa      	ldr	r2, [r7, #12]
 800452c:	4313      	orrs	r3, r2
 800452e:	60fb      	str	r3, [r7, #12]
 8004530:	693b      	ldr	r3, [r7, #16]
 8004532:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004536:	613b      	str	r3, [r7, #16]
 8004538:	683b      	ldr	r3, [r7, #0]
 800453a:	689b      	ldr	r3, [r3, #8]
 800453c:	031b      	lsls	r3, r3, #12
 800453e:	693a      	ldr	r2, [r7, #16]
 8004540:	4313      	orrs	r3, r2
 8004542:	613b      	str	r3, [r7, #16]
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	4a12      	ldr	r2, [pc, #72]	@ (8004590 <TIM_OC4_SetConfig+0xa4>)
 8004548:	4293      	cmp	r3, r2
 800454a:	d003      	beq.n	8004554 <TIM_OC4_SetConfig+0x68>
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	4a11      	ldr	r2, [pc, #68]	@ (8004594 <TIM_OC4_SetConfig+0xa8>)
 8004550:	4293      	cmp	r3, r2
 8004552:	d109      	bne.n	8004568 <TIM_OC4_SetConfig+0x7c>
 8004554:	697b      	ldr	r3, [r7, #20]
 8004556:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800455a:	617b      	str	r3, [r7, #20]
 800455c:	683b      	ldr	r3, [r7, #0]
 800455e:	695b      	ldr	r3, [r3, #20]
 8004560:	019b      	lsls	r3, r3, #6
 8004562:	697a      	ldr	r2, [r7, #20]
 8004564:	4313      	orrs	r3, r2
 8004566:	617b      	str	r3, [r7, #20]
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	697a      	ldr	r2, [r7, #20]
 800456c:	605a      	str	r2, [r3, #4]
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	68fa      	ldr	r2, [r7, #12]
 8004572:	61da      	str	r2, [r3, #28]
 8004574:	683b      	ldr	r3, [r7, #0]
 8004576:	685a      	ldr	r2, [r3, #4]
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	641a      	str	r2, [r3, #64]	@ 0x40
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	693a      	ldr	r2, [r7, #16]
 8004580:	621a      	str	r2, [r3, #32]
 8004582:	bf00      	nop
 8004584:	371c      	adds	r7, #28
 8004586:	46bd      	mov	sp, r7
 8004588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800458c:	4770      	bx	lr
 800458e:	bf00      	nop
 8004590:	40010000 	.word	0x40010000
 8004594:	40010400 	.word	0x40010400

08004598 <TIM_CCxChannelCmd>:
 8004598:	b480      	push	{r7}
 800459a:	b087      	sub	sp, #28
 800459c:	af00      	add	r7, sp, #0
 800459e:	60f8      	str	r0, [r7, #12]
 80045a0:	60b9      	str	r1, [r7, #8]
 80045a2:	607a      	str	r2, [r7, #4]
 80045a4:	68bb      	ldr	r3, [r7, #8]
 80045a6:	f003 031f 	and.w	r3, r3, #31
 80045aa:	2201      	movs	r2, #1
 80045ac:	fa02 f303 	lsl.w	r3, r2, r3
 80045b0:	617b      	str	r3, [r7, #20]
 80045b2:	68fb      	ldr	r3, [r7, #12]
 80045b4:	6a1a      	ldr	r2, [r3, #32]
 80045b6:	697b      	ldr	r3, [r7, #20]
 80045b8:	43db      	mvns	r3, r3
 80045ba:	401a      	ands	r2, r3
 80045bc:	68fb      	ldr	r3, [r7, #12]
 80045be:	621a      	str	r2, [r3, #32]
 80045c0:	68fb      	ldr	r3, [r7, #12]
 80045c2:	6a1a      	ldr	r2, [r3, #32]
 80045c4:	68bb      	ldr	r3, [r7, #8]
 80045c6:	f003 031f 	and.w	r3, r3, #31
 80045ca:	6879      	ldr	r1, [r7, #4]
 80045cc:	fa01 f303 	lsl.w	r3, r1, r3
 80045d0:	431a      	orrs	r2, r3
 80045d2:	68fb      	ldr	r3, [r7, #12]
 80045d4:	621a      	str	r2, [r3, #32]
 80045d6:	bf00      	nop
 80045d8:	371c      	adds	r7, #28
 80045da:	46bd      	mov	sp, r7
 80045dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045e0:	4770      	bx	lr
	...

080045e4 <HAL_TIMEx_MasterConfigSynchronization>:
 80045e4:	b480      	push	{r7}
 80045e6:	b085      	sub	sp, #20
 80045e8:	af00      	add	r7, sp, #0
 80045ea:	6078      	str	r0, [r7, #4]
 80045ec:	6039      	str	r1, [r7, #0]
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80045f4:	2b01      	cmp	r3, #1
 80045f6:	d101      	bne.n	80045fc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80045f8:	2302      	movs	r3, #2
 80045fa:	e05a      	b.n	80046b2 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	2201      	movs	r2, #1
 8004600:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	2202      	movs	r2, #2
 8004608:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	685b      	ldr	r3, [r3, #4]
 8004612:	60fb      	str	r3, [r7, #12]
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	681b      	ldr	r3, [r3, #0]
 8004618:	689b      	ldr	r3, [r3, #8]
 800461a:	60bb      	str	r3, [r7, #8]
 800461c:	68fb      	ldr	r3, [r7, #12]
 800461e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004622:	60fb      	str	r3, [r7, #12]
 8004624:	683b      	ldr	r3, [r7, #0]
 8004626:	681b      	ldr	r3, [r3, #0]
 8004628:	68fa      	ldr	r2, [r7, #12]
 800462a:	4313      	orrs	r3, r2
 800462c:	60fb      	str	r3, [r7, #12]
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	681b      	ldr	r3, [r3, #0]
 8004632:	68fa      	ldr	r2, [r7, #12]
 8004634:	605a      	str	r2, [r3, #4]
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	4a21      	ldr	r2, [pc, #132]	@ (80046c0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800463c:	4293      	cmp	r3, r2
 800463e:	d022      	beq.n	8004686 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	681b      	ldr	r3, [r3, #0]
 8004644:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004648:	d01d      	beq.n	8004686 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	681b      	ldr	r3, [r3, #0]
 800464e:	4a1d      	ldr	r2, [pc, #116]	@ (80046c4 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8004650:	4293      	cmp	r3, r2
 8004652:	d018      	beq.n	8004686 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	4a1b      	ldr	r2, [pc, #108]	@ (80046c8 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800465a:	4293      	cmp	r3, r2
 800465c:	d013      	beq.n	8004686 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800465e:	687b      	ldr	r3, [r7, #4]
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	4a1a      	ldr	r2, [pc, #104]	@ (80046cc <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8004664:	4293      	cmp	r3, r2
 8004666:	d00e      	beq.n	8004686 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004668:	687b      	ldr	r3, [r7, #4]
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	4a18      	ldr	r2, [pc, #96]	@ (80046d0 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800466e:	4293      	cmp	r3, r2
 8004670:	d009      	beq.n	8004686 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	4a17      	ldr	r2, [pc, #92]	@ (80046d4 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8004678:	4293      	cmp	r3, r2
 800467a:	d004      	beq.n	8004686 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	4a15      	ldr	r2, [pc, #84]	@ (80046d8 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8004682:	4293      	cmp	r3, r2
 8004684:	d10c      	bne.n	80046a0 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8004686:	68bb      	ldr	r3, [r7, #8]
 8004688:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800468c:	60bb      	str	r3, [r7, #8]
 800468e:	683b      	ldr	r3, [r7, #0]
 8004690:	685b      	ldr	r3, [r3, #4]
 8004692:	68ba      	ldr	r2, [r7, #8]
 8004694:	4313      	orrs	r3, r2
 8004696:	60bb      	str	r3, [r7, #8]
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	681b      	ldr	r3, [r3, #0]
 800469c:	68ba      	ldr	r2, [r7, #8]
 800469e:	609a      	str	r2, [r3, #8]
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	2201      	movs	r2, #1
 80046a4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	2200      	movs	r2, #0
 80046ac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80046b0:	2300      	movs	r3, #0
 80046b2:	4618      	mov	r0, r3
 80046b4:	3714      	adds	r7, #20
 80046b6:	46bd      	mov	sp, r7
 80046b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046bc:	4770      	bx	lr
 80046be:	bf00      	nop
 80046c0:	40010000 	.word	0x40010000
 80046c4:	40000400 	.word	0x40000400
 80046c8:	40000800 	.word	0x40000800
 80046cc:	40000c00 	.word	0x40000c00
 80046d0:	40010400 	.word	0x40010400
 80046d4:	40014000 	.word	0x40014000
 80046d8:	40001800 	.word	0x40001800

080046dc <HAL_TIMEx_CommutCallback>:
 80046dc:	b480      	push	{r7}
 80046de:	b083      	sub	sp, #12
 80046e0:	af00      	add	r7, sp, #0
 80046e2:	6078      	str	r0, [r7, #4]
 80046e4:	bf00      	nop
 80046e6:	370c      	adds	r7, #12
 80046e8:	46bd      	mov	sp, r7
 80046ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046ee:	4770      	bx	lr

080046f0 <HAL_TIMEx_BreakCallback>:
 80046f0:	b480      	push	{r7}
 80046f2:	b083      	sub	sp, #12
 80046f4:	af00      	add	r7, sp, #0
 80046f6:	6078      	str	r0, [r7, #4]
 80046f8:	bf00      	nop
 80046fa:	370c      	adds	r7, #12
 80046fc:	46bd      	mov	sp, r7
 80046fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004702:	4770      	bx	lr

08004704 <HAL_UART_Init>:
 8004704:	b580      	push	{r7, lr}
 8004706:	b082      	sub	sp, #8
 8004708:	af00      	add	r7, sp, #0
 800470a:	6078      	str	r0, [r7, #4]
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	2b00      	cmp	r3, #0
 8004710:	d101      	bne.n	8004716 <HAL_UART_Init+0x12>
 8004712:	2301      	movs	r3, #1
 8004714:	e042      	b.n	800479c <HAL_UART_Init+0x98>
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800471c:	b2db      	uxtb	r3, r3
 800471e:	2b00      	cmp	r3, #0
 8004720:	d106      	bne.n	8004730 <HAL_UART_Init+0x2c>
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	2200      	movs	r2, #0
 8004726:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800472a:	6878      	ldr	r0, [r7, #4]
 800472c:	f7fd fee6 	bl	80024fc <HAL_UART_MspInit>
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	2224      	movs	r2, #36	@ 0x24
 8004734:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	681b      	ldr	r3, [r3, #0]
 800473c:	68da      	ldr	r2, [r3, #12]
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004746:	60da      	str	r2, [r3, #12]
 8004748:	6878      	ldr	r0, [r7, #4]
 800474a:	f000 fce5 	bl	8005118 <UART_SetConfig>
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	691a      	ldr	r2, [r3, #16]
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	681b      	ldr	r3, [r3, #0]
 8004758:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800475c:	611a      	str	r2, [r3, #16]
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	695a      	ldr	r2, [r3, #20]
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800476c:	615a      	str	r2, [r3, #20]
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	681b      	ldr	r3, [r3, #0]
 8004772:	68da      	ldr	r2, [r3, #12]
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800477c:	60da      	str	r2, [r3, #12]
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	2200      	movs	r2, #0
 8004782:	645a      	str	r2, [r3, #68]	@ 0x44
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	2220      	movs	r2, #32
 8004788:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800478c:	687b      	ldr	r3, [r7, #4]
 800478e:	2220      	movs	r2, #32
 8004790:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	2200      	movs	r2, #0
 8004798:	635a      	str	r2, [r3, #52]	@ 0x34
 800479a:	2300      	movs	r3, #0
 800479c:	4618      	mov	r0, r3
 800479e:	3708      	adds	r7, #8
 80047a0:	46bd      	mov	sp, r7
 80047a2:	bd80      	pop	{r7, pc}

080047a4 <HAL_UART_Receive_IT>:
 80047a4:	b580      	push	{r7, lr}
 80047a6:	b084      	sub	sp, #16
 80047a8:	af00      	add	r7, sp, #0
 80047aa:	60f8      	str	r0, [r7, #12]
 80047ac:	60b9      	str	r1, [r7, #8]
 80047ae:	4613      	mov	r3, r2
 80047b0:	80fb      	strh	r3, [r7, #6]
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80047b8:	b2db      	uxtb	r3, r3
 80047ba:	2b20      	cmp	r3, #32
 80047bc:	d112      	bne.n	80047e4 <HAL_UART_Receive_IT+0x40>
 80047be:	68bb      	ldr	r3, [r7, #8]
 80047c0:	2b00      	cmp	r3, #0
 80047c2:	d002      	beq.n	80047ca <HAL_UART_Receive_IT+0x26>
 80047c4:	88fb      	ldrh	r3, [r7, #6]
 80047c6:	2b00      	cmp	r3, #0
 80047c8:	d101      	bne.n	80047ce <HAL_UART_Receive_IT+0x2a>
 80047ca:	2301      	movs	r3, #1
 80047cc:	e00b      	b.n	80047e6 <HAL_UART_Receive_IT+0x42>
 80047ce:	68fb      	ldr	r3, [r7, #12]
 80047d0:	2200      	movs	r2, #0
 80047d2:	631a      	str	r2, [r3, #48]	@ 0x30
 80047d4:	88fb      	ldrh	r3, [r7, #6]
 80047d6:	461a      	mov	r2, r3
 80047d8:	68b9      	ldr	r1, [r7, #8]
 80047da:	68f8      	ldr	r0, [r7, #12]
 80047dc:	f000 fac8 	bl	8004d70 <UART_Start_Receive_IT>
 80047e0:	4603      	mov	r3, r0
 80047e2:	e000      	b.n	80047e6 <HAL_UART_Receive_IT+0x42>
 80047e4:	2302      	movs	r3, #2
 80047e6:	4618      	mov	r0, r3
 80047e8:	3710      	adds	r7, #16
 80047ea:	46bd      	mov	sp, r7
 80047ec:	bd80      	pop	{r7, pc}
	...

080047f0 <HAL_UART_IRQHandler>:
 80047f0:	b580      	push	{r7, lr}
 80047f2:	b0ba      	sub	sp, #232	@ 0xe8
 80047f4:	af00      	add	r7, sp, #0
 80047f6:	6078      	str	r0, [r7, #4]
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	68db      	ldr	r3, [r3, #12]
 8004808:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	681b      	ldr	r3, [r3, #0]
 8004810:	695b      	ldr	r3, [r3, #20]
 8004812:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8004816:	2300      	movs	r3, #0
 8004818:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800481c:	2300      	movs	r3, #0
 800481e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8004822:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004826:	f003 030f 	and.w	r3, r3, #15
 800482a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800482e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8004832:	2b00      	cmp	r3, #0
 8004834:	d10f      	bne.n	8004856 <HAL_UART_IRQHandler+0x66>
 8004836:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800483a:	f003 0320 	and.w	r3, r3, #32
 800483e:	2b00      	cmp	r3, #0
 8004840:	d009      	beq.n	8004856 <HAL_UART_IRQHandler+0x66>
 8004842:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004846:	f003 0320 	and.w	r3, r3, #32
 800484a:	2b00      	cmp	r3, #0
 800484c:	d003      	beq.n	8004856 <HAL_UART_IRQHandler+0x66>
 800484e:	6878      	ldr	r0, [r7, #4]
 8004850:	f000 fba4 	bl	8004f9c <UART_Receive_IT>
 8004854:	e273      	b.n	8004d3e <HAL_UART_IRQHandler+0x54e>
 8004856:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800485a:	2b00      	cmp	r3, #0
 800485c:	f000 80de 	beq.w	8004a1c <HAL_UART_IRQHandler+0x22c>
 8004860:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004864:	f003 0301 	and.w	r3, r3, #1
 8004868:	2b00      	cmp	r3, #0
 800486a:	d106      	bne.n	800487a <HAL_UART_IRQHandler+0x8a>
 800486c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004870:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8004874:	2b00      	cmp	r3, #0
 8004876:	f000 80d1 	beq.w	8004a1c <HAL_UART_IRQHandler+0x22c>
 800487a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800487e:	f003 0301 	and.w	r3, r3, #1
 8004882:	2b00      	cmp	r3, #0
 8004884:	d00b      	beq.n	800489e <HAL_UART_IRQHandler+0xae>
 8004886:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800488a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800488e:	2b00      	cmp	r3, #0
 8004890:	d005      	beq.n	800489e <HAL_UART_IRQHandler+0xae>
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004896:	f043 0201 	orr.w	r2, r3, #1
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	645a      	str	r2, [r3, #68]	@ 0x44
 800489e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80048a2:	f003 0304 	and.w	r3, r3, #4
 80048a6:	2b00      	cmp	r3, #0
 80048a8:	d00b      	beq.n	80048c2 <HAL_UART_IRQHandler+0xd2>
 80048aa:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80048ae:	f003 0301 	and.w	r3, r3, #1
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d005      	beq.n	80048c2 <HAL_UART_IRQHandler+0xd2>
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048ba:	f043 0202 	orr.w	r2, r3, #2
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	645a      	str	r2, [r3, #68]	@ 0x44
 80048c2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80048c6:	f003 0302 	and.w	r3, r3, #2
 80048ca:	2b00      	cmp	r3, #0
 80048cc:	d00b      	beq.n	80048e6 <HAL_UART_IRQHandler+0xf6>
 80048ce:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80048d2:	f003 0301 	and.w	r3, r3, #1
 80048d6:	2b00      	cmp	r3, #0
 80048d8:	d005      	beq.n	80048e6 <HAL_UART_IRQHandler+0xf6>
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048de:	f043 0204 	orr.w	r2, r3, #4
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	645a      	str	r2, [r3, #68]	@ 0x44
 80048e6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80048ea:	f003 0308 	and.w	r3, r3, #8
 80048ee:	2b00      	cmp	r3, #0
 80048f0:	d011      	beq.n	8004916 <HAL_UART_IRQHandler+0x126>
 80048f2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80048f6:	f003 0320 	and.w	r3, r3, #32
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	d105      	bne.n	800490a <HAL_UART_IRQHandler+0x11a>
 80048fe:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004902:	f003 0301 	and.w	r3, r3, #1
 8004906:	2b00      	cmp	r3, #0
 8004908:	d005      	beq.n	8004916 <HAL_UART_IRQHandler+0x126>
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800490e:	f043 0208 	orr.w	r2, r3, #8
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	645a      	str	r2, [r3, #68]	@ 0x44
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800491a:	2b00      	cmp	r3, #0
 800491c:	f000 820a 	beq.w	8004d34 <HAL_UART_IRQHandler+0x544>
 8004920:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004924:	f003 0320 	and.w	r3, r3, #32
 8004928:	2b00      	cmp	r3, #0
 800492a:	d008      	beq.n	800493e <HAL_UART_IRQHandler+0x14e>
 800492c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004930:	f003 0320 	and.w	r3, r3, #32
 8004934:	2b00      	cmp	r3, #0
 8004936:	d002      	beq.n	800493e <HAL_UART_IRQHandler+0x14e>
 8004938:	6878      	ldr	r0, [r7, #4]
 800493a:	f000 fb2f 	bl	8004f9c <UART_Receive_IT>
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	695b      	ldr	r3, [r3, #20]
 8004944:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004948:	2b40      	cmp	r3, #64	@ 0x40
 800494a:	bf0c      	ite	eq
 800494c:	2301      	moveq	r3, #1
 800494e:	2300      	movne	r3, #0
 8004950:	b2db      	uxtb	r3, r3
 8004952:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8004956:	687b      	ldr	r3, [r7, #4]
 8004958:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800495a:	f003 0308 	and.w	r3, r3, #8
 800495e:	2b00      	cmp	r3, #0
 8004960:	d103      	bne.n	800496a <HAL_UART_IRQHandler+0x17a>
 8004962:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8004966:	2b00      	cmp	r3, #0
 8004968:	d04f      	beq.n	8004a0a <HAL_UART_IRQHandler+0x21a>
 800496a:	6878      	ldr	r0, [r7, #4]
 800496c:	f000 fa3a 	bl	8004de4 <UART_EndRxTransfer>
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	695b      	ldr	r3, [r3, #20]
 8004976:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800497a:	2b40      	cmp	r3, #64	@ 0x40
 800497c:	d141      	bne.n	8004a02 <HAL_UART_IRQHandler+0x212>
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	3314      	adds	r3, #20
 8004984:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8004988:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800498c:	e853 3f00 	ldrex	r3, [r3]
 8004990:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8004994:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8004998:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800499c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	3314      	adds	r3, #20
 80049a6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80049aa:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80049ae:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80049b2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80049b6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80049ba:	e841 2300 	strex	r3, r2, [r1]
 80049be:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80049c2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80049c6:	2b00      	cmp	r3, #0
 80049c8:	d1d9      	bne.n	800497e <HAL_UART_IRQHandler+0x18e>
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80049ce:	2b00      	cmp	r3, #0
 80049d0:	d013      	beq.n	80049fa <HAL_UART_IRQHandler+0x20a>
 80049d2:	687b      	ldr	r3, [r7, #4]
 80049d4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80049d6:	4a8a      	ldr	r2, [pc, #552]	@ (8004c00 <HAL_UART_IRQHandler+0x410>)
 80049d8:	651a      	str	r2, [r3, #80]	@ 0x50
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80049de:	4618      	mov	r0, r3
 80049e0:	f7fe f873 	bl	8002aca <HAL_DMA_Abort_IT>
 80049e4:	4603      	mov	r3, r0
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	d016      	beq.n	8004a18 <HAL_UART_IRQHandler+0x228>
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80049ee:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80049f0:	687a      	ldr	r2, [r7, #4]
 80049f2:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80049f4:	4610      	mov	r0, r2
 80049f6:	4798      	blx	r3
 80049f8:	e00e      	b.n	8004a18 <HAL_UART_IRQHandler+0x228>
 80049fa:	6878      	ldr	r0, [r7, #4]
 80049fc:	f000 f9a2 	bl	8004d44 <HAL_UART_ErrorCallback>
 8004a00:	e00a      	b.n	8004a18 <HAL_UART_IRQHandler+0x228>
 8004a02:	6878      	ldr	r0, [r7, #4]
 8004a04:	f000 f99e 	bl	8004d44 <HAL_UART_ErrorCallback>
 8004a08:	e006      	b.n	8004a18 <HAL_UART_IRQHandler+0x228>
 8004a0a:	6878      	ldr	r0, [r7, #4]
 8004a0c:	f000 f99a 	bl	8004d44 <HAL_UART_ErrorCallback>
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	2200      	movs	r2, #0
 8004a14:	645a      	str	r2, [r3, #68]	@ 0x44
 8004a16:	e18d      	b.n	8004d34 <HAL_UART_IRQHandler+0x544>
 8004a18:	bf00      	nop
 8004a1a:	e18b      	b.n	8004d34 <HAL_UART_IRQHandler+0x544>
 8004a1c:	687b      	ldr	r3, [r7, #4]
 8004a1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004a20:	2b01      	cmp	r3, #1
 8004a22:	f040 8167 	bne.w	8004cf4 <HAL_UART_IRQHandler+0x504>
 8004a26:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004a2a:	f003 0310 	and.w	r3, r3, #16
 8004a2e:	2b00      	cmp	r3, #0
 8004a30:	f000 8160 	beq.w	8004cf4 <HAL_UART_IRQHandler+0x504>
 8004a34:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004a38:	f003 0310 	and.w	r3, r3, #16
 8004a3c:	2b00      	cmp	r3, #0
 8004a3e:	f000 8159 	beq.w	8004cf4 <HAL_UART_IRQHandler+0x504>
 8004a42:	2300      	movs	r3, #0
 8004a44:	60bb      	str	r3, [r7, #8]
 8004a46:	687b      	ldr	r3, [r7, #4]
 8004a48:	681b      	ldr	r3, [r3, #0]
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	60bb      	str	r3, [r7, #8]
 8004a4e:	687b      	ldr	r3, [r7, #4]
 8004a50:	681b      	ldr	r3, [r3, #0]
 8004a52:	685b      	ldr	r3, [r3, #4]
 8004a54:	60bb      	str	r3, [r7, #8]
 8004a56:	68bb      	ldr	r3, [r7, #8]
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	681b      	ldr	r3, [r3, #0]
 8004a5c:	695b      	ldr	r3, [r3, #20]
 8004a5e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004a62:	2b40      	cmp	r3, #64	@ 0x40
 8004a64:	f040 80ce 	bne.w	8004c04 <HAL_UART_IRQHandler+0x414>
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	685b      	ldr	r3, [r3, #4]
 8004a70:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8004a74:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8004a78:	2b00      	cmp	r3, #0
 8004a7a:	f000 80a9 	beq.w	8004bd0 <HAL_UART_IRQHandler+0x3e0>
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004a82:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004a86:	429a      	cmp	r2, r3
 8004a88:	f080 80a2 	bcs.w	8004bd0 <HAL_UART_IRQHandler+0x3e0>
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004a92:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004a98:	69db      	ldr	r3, [r3, #28]
 8004a9a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004a9e:	f000 8088 	beq.w	8004bb2 <HAL_UART_IRQHandler+0x3c2>
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	681b      	ldr	r3, [r3, #0]
 8004aa6:	330c      	adds	r3, #12
 8004aa8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004aac:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8004ab0:	e853 3f00 	ldrex	r3, [r3]
 8004ab4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004ab8:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004abc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004ac0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	330c      	adds	r3, #12
 8004aca:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8004ace:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8004ad2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004ad6:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8004ada:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8004ade:	e841 2300 	strex	r3, r2, [r1]
 8004ae2:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004ae6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004aea:	2b00      	cmp	r3, #0
 8004aec:	d1d9      	bne.n	8004aa2 <HAL_UART_IRQHandler+0x2b2>
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	3314      	adds	r3, #20
 8004af4:	677b      	str	r3, [r7, #116]	@ 0x74
 8004af6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004af8:	e853 3f00 	ldrex	r3, [r3]
 8004afc:	673b      	str	r3, [r7, #112]	@ 0x70
 8004afe:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004b00:	f023 0301 	bic.w	r3, r3, #1
 8004b04:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	681b      	ldr	r3, [r3, #0]
 8004b0c:	3314      	adds	r3, #20
 8004b0e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8004b12:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8004b16:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004b18:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8004b1a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8004b1e:	e841 2300 	strex	r3, r2, [r1]
 8004b22:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004b24:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004b26:	2b00      	cmp	r3, #0
 8004b28:	d1e1      	bne.n	8004aee <HAL_UART_IRQHandler+0x2fe>
 8004b2a:	687b      	ldr	r3, [r7, #4]
 8004b2c:	681b      	ldr	r3, [r3, #0]
 8004b2e:	3314      	adds	r3, #20
 8004b30:	663b      	str	r3, [r7, #96]	@ 0x60
 8004b32:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004b34:	e853 3f00 	ldrex	r3, [r3]
 8004b38:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004b3a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004b3c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004b40:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004b44:	687b      	ldr	r3, [r7, #4]
 8004b46:	681b      	ldr	r3, [r3, #0]
 8004b48:	3314      	adds	r3, #20
 8004b4a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8004b4e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004b50:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004b52:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8004b54:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8004b56:	e841 2300 	strex	r3, r2, [r1]
 8004b5a:	667b      	str	r3, [r7, #100]	@ 0x64
 8004b5c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004b5e:	2b00      	cmp	r3, #0
 8004b60:	d1e3      	bne.n	8004b2a <HAL_UART_IRQHandler+0x33a>
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	2220      	movs	r2, #32
 8004b66:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	2200      	movs	r2, #0
 8004b6e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	330c      	adds	r3, #12
 8004b76:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004b78:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004b7a:	e853 3f00 	ldrex	r3, [r3]
 8004b7e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004b80:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004b82:	f023 0310 	bic.w	r3, r3, #16
 8004b86:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	681b      	ldr	r3, [r3, #0]
 8004b8e:	330c      	adds	r3, #12
 8004b90:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8004b94:	65ba      	str	r2, [r7, #88]	@ 0x58
 8004b96:	657b      	str	r3, [r7, #84]	@ 0x54
 8004b98:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8004b9a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8004b9c:	e841 2300 	strex	r3, r2, [r1]
 8004ba0:	653b      	str	r3, [r7, #80]	@ 0x50
 8004ba2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004ba4:	2b00      	cmp	r3, #0
 8004ba6:	d1e3      	bne.n	8004b70 <HAL_UART_IRQHandler+0x380>
 8004ba8:	687b      	ldr	r3, [r7, #4]
 8004baa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004bac:	4618      	mov	r0, r3
 8004bae:	f7fd ff1c 	bl	80029ea <HAL_DMA_Abort>
 8004bb2:	687b      	ldr	r3, [r7, #4]
 8004bb4:	2202      	movs	r2, #2
 8004bb6:	635a      	str	r2, [r3, #52]	@ 0x34
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004bc0:	b29b      	uxth	r3, r3
 8004bc2:	1ad3      	subs	r3, r2, r3
 8004bc4:	b29b      	uxth	r3, r3
 8004bc6:	4619      	mov	r1, r3
 8004bc8:	6878      	ldr	r0, [r7, #4]
 8004bca:	f000 f8c5 	bl	8004d58 <HAL_UARTEx_RxEventCallback>
 8004bce:	e0b3      	b.n	8004d38 <HAL_UART_IRQHandler+0x548>
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004bd4:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004bd8:	429a      	cmp	r2, r3
 8004bda:	f040 80ad 	bne.w	8004d38 <HAL_UART_IRQHandler+0x548>
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004be2:	69db      	ldr	r3, [r3, #28]
 8004be4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004be8:	f040 80a6 	bne.w	8004d38 <HAL_UART_IRQHandler+0x548>
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	2202      	movs	r2, #2
 8004bf0:	635a      	str	r2, [r3, #52]	@ 0x34
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004bf6:	4619      	mov	r1, r3
 8004bf8:	6878      	ldr	r0, [r7, #4]
 8004bfa:	f000 f8ad 	bl	8004d58 <HAL_UARTEx_RxEventCallback>
 8004bfe:	e09b      	b.n	8004d38 <HAL_UART_IRQHandler+0x548>
 8004c00:	08004eab 	.word	0x08004eab
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004c0c:	b29b      	uxth	r3, r3
 8004c0e:	1ad3      	subs	r3, r2, r3
 8004c10:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004c18:	b29b      	uxth	r3, r3
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	f000 808e 	beq.w	8004d3c <HAL_UART_IRQHandler+0x54c>
 8004c20:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8004c24:	2b00      	cmp	r3, #0
 8004c26:	f000 8089 	beq.w	8004d3c <HAL_UART_IRQHandler+0x54c>
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	330c      	adds	r3, #12
 8004c30:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004c32:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004c34:	e853 3f00 	ldrex	r3, [r3]
 8004c38:	637b      	str	r3, [r7, #52]	@ 0x34
 8004c3a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004c3c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004c40:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	330c      	adds	r3, #12
 8004c4a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8004c4e:	647a      	str	r2, [r7, #68]	@ 0x44
 8004c50:	643b      	str	r3, [r7, #64]	@ 0x40
 8004c52:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8004c54:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004c56:	e841 2300 	strex	r3, r2, [r1]
 8004c5a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004c5c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	d1e3      	bne.n	8004c2a <HAL_UART_IRQHandler+0x43a>
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	3314      	adds	r3, #20
 8004c68:	627b      	str	r3, [r7, #36]	@ 0x24
 8004c6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c6c:	e853 3f00 	ldrex	r3, [r3]
 8004c70:	623b      	str	r3, [r7, #32]
 8004c72:	6a3b      	ldr	r3, [r7, #32]
 8004c74:	f023 0301 	bic.w	r3, r3, #1
 8004c78:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	681b      	ldr	r3, [r3, #0]
 8004c80:	3314      	adds	r3, #20
 8004c82:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8004c86:	633a      	str	r2, [r7, #48]	@ 0x30
 8004c88:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004c8a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004c8c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004c8e:	e841 2300 	strex	r3, r2, [r1]
 8004c92:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004c94:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004c96:	2b00      	cmp	r3, #0
 8004c98:	d1e3      	bne.n	8004c62 <HAL_UART_IRQHandler+0x472>
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	2220      	movs	r2, #32
 8004c9e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004ca2:	687b      	ldr	r3, [r7, #4]
 8004ca4:	2200      	movs	r2, #0
 8004ca6:	631a      	str	r2, [r3, #48]	@ 0x30
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	681b      	ldr	r3, [r3, #0]
 8004cac:	330c      	adds	r3, #12
 8004cae:	613b      	str	r3, [r7, #16]
 8004cb0:	693b      	ldr	r3, [r7, #16]
 8004cb2:	e853 3f00 	ldrex	r3, [r3]
 8004cb6:	60fb      	str	r3, [r7, #12]
 8004cb8:	68fb      	ldr	r3, [r7, #12]
 8004cba:	f023 0310 	bic.w	r3, r3, #16
 8004cbe:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	330c      	adds	r3, #12
 8004cc8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8004ccc:	61fa      	str	r2, [r7, #28]
 8004cce:	61bb      	str	r3, [r7, #24]
 8004cd0:	69b9      	ldr	r1, [r7, #24]
 8004cd2:	69fa      	ldr	r2, [r7, #28]
 8004cd4:	e841 2300 	strex	r3, r2, [r1]
 8004cd8:	617b      	str	r3, [r7, #20]
 8004cda:	697b      	ldr	r3, [r7, #20]
 8004cdc:	2b00      	cmp	r3, #0
 8004cde:	d1e3      	bne.n	8004ca8 <HAL_UART_IRQHandler+0x4b8>
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	2202      	movs	r2, #2
 8004ce4:	635a      	str	r2, [r3, #52]	@ 0x34
 8004ce6:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8004cea:	4619      	mov	r1, r3
 8004cec:	6878      	ldr	r0, [r7, #4]
 8004cee:	f000 f833 	bl	8004d58 <HAL_UARTEx_RxEventCallback>
 8004cf2:	e023      	b.n	8004d3c <HAL_UART_IRQHandler+0x54c>
 8004cf4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004cf8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004cfc:	2b00      	cmp	r3, #0
 8004cfe:	d009      	beq.n	8004d14 <HAL_UART_IRQHandler+0x524>
 8004d00:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004d04:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004d08:	2b00      	cmp	r3, #0
 8004d0a:	d003      	beq.n	8004d14 <HAL_UART_IRQHandler+0x524>
 8004d0c:	6878      	ldr	r0, [r7, #4]
 8004d0e:	f000 f8dd 	bl	8004ecc <UART_Transmit_IT>
 8004d12:	e014      	b.n	8004d3e <HAL_UART_IRQHandler+0x54e>
 8004d14:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004d18:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	d00e      	beq.n	8004d3e <HAL_UART_IRQHandler+0x54e>
 8004d20:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004d24:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004d28:	2b00      	cmp	r3, #0
 8004d2a:	d008      	beq.n	8004d3e <HAL_UART_IRQHandler+0x54e>
 8004d2c:	6878      	ldr	r0, [r7, #4]
 8004d2e:	f000 f91d 	bl	8004f6c <UART_EndTransmit_IT>
 8004d32:	e004      	b.n	8004d3e <HAL_UART_IRQHandler+0x54e>
 8004d34:	bf00      	nop
 8004d36:	e002      	b.n	8004d3e <HAL_UART_IRQHandler+0x54e>
 8004d38:	bf00      	nop
 8004d3a:	e000      	b.n	8004d3e <HAL_UART_IRQHandler+0x54e>
 8004d3c:	bf00      	nop
 8004d3e:	37e8      	adds	r7, #232	@ 0xe8
 8004d40:	46bd      	mov	sp, r7
 8004d42:	bd80      	pop	{r7, pc}

08004d44 <HAL_UART_ErrorCallback>:
 8004d44:	b480      	push	{r7}
 8004d46:	b083      	sub	sp, #12
 8004d48:	af00      	add	r7, sp, #0
 8004d4a:	6078      	str	r0, [r7, #4]
 8004d4c:	bf00      	nop
 8004d4e:	370c      	adds	r7, #12
 8004d50:	46bd      	mov	sp, r7
 8004d52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d56:	4770      	bx	lr

08004d58 <HAL_UARTEx_RxEventCallback>:
 8004d58:	b480      	push	{r7}
 8004d5a:	b083      	sub	sp, #12
 8004d5c:	af00      	add	r7, sp, #0
 8004d5e:	6078      	str	r0, [r7, #4]
 8004d60:	460b      	mov	r3, r1
 8004d62:	807b      	strh	r3, [r7, #2]
 8004d64:	bf00      	nop
 8004d66:	370c      	adds	r7, #12
 8004d68:	46bd      	mov	sp, r7
 8004d6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d6e:	4770      	bx	lr

08004d70 <UART_Start_Receive_IT>:
 8004d70:	b480      	push	{r7}
 8004d72:	b085      	sub	sp, #20
 8004d74:	af00      	add	r7, sp, #0
 8004d76:	60f8      	str	r0, [r7, #12]
 8004d78:	60b9      	str	r1, [r7, #8]
 8004d7a:	4613      	mov	r3, r2
 8004d7c:	80fb      	strh	r3, [r7, #6]
 8004d7e:	68fb      	ldr	r3, [r7, #12]
 8004d80:	68ba      	ldr	r2, [r7, #8]
 8004d82:	629a      	str	r2, [r3, #40]	@ 0x28
 8004d84:	68fb      	ldr	r3, [r7, #12]
 8004d86:	88fa      	ldrh	r2, [r7, #6]
 8004d88:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004d8a:	68fb      	ldr	r3, [r7, #12]
 8004d8c:	88fa      	ldrh	r2, [r7, #6]
 8004d8e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004d90:	68fb      	ldr	r3, [r7, #12]
 8004d92:	2200      	movs	r2, #0
 8004d94:	645a      	str	r2, [r3, #68]	@ 0x44
 8004d96:	68fb      	ldr	r3, [r7, #12]
 8004d98:	2222      	movs	r2, #34	@ 0x22
 8004d9a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	691b      	ldr	r3, [r3, #16]
 8004da2:	2b00      	cmp	r3, #0
 8004da4:	d007      	beq.n	8004db6 <UART_Start_Receive_IT+0x46>
 8004da6:	68fb      	ldr	r3, [r7, #12]
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	68da      	ldr	r2, [r3, #12]
 8004dac:	68fb      	ldr	r3, [r7, #12]
 8004dae:	681b      	ldr	r3, [r3, #0]
 8004db0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004db4:	60da      	str	r2, [r3, #12]
 8004db6:	68fb      	ldr	r3, [r7, #12]
 8004db8:	681b      	ldr	r3, [r3, #0]
 8004dba:	695a      	ldr	r2, [r3, #20]
 8004dbc:	68fb      	ldr	r3, [r7, #12]
 8004dbe:	681b      	ldr	r3, [r3, #0]
 8004dc0:	f042 0201 	orr.w	r2, r2, #1
 8004dc4:	615a      	str	r2, [r3, #20]
 8004dc6:	68fb      	ldr	r3, [r7, #12]
 8004dc8:	681b      	ldr	r3, [r3, #0]
 8004dca:	68da      	ldr	r2, [r3, #12]
 8004dcc:	68fb      	ldr	r3, [r7, #12]
 8004dce:	681b      	ldr	r3, [r3, #0]
 8004dd0:	f042 0220 	orr.w	r2, r2, #32
 8004dd4:	60da      	str	r2, [r3, #12]
 8004dd6:	2300      	movs	r3, #0
 8004dd8:	4618      	mov	r0, r3
 8004dda:	3714      	adds	r7, #20
 8004ddc:	46bd      	mov	sp, r7
 8004dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004de2:	4770      	bx	lr

08004de4 <UART_EndRxTransfer>:
 8004de4:	b480      	push	{r7}
 8004de6:	b095      	sub	sp, #84	@ 0x54
 8004de8:	af00      	add	r7, sp, #0
 8004dea:	6078      	str	r0, [r7, #4]
 8004dec:	687b      	ldr	r3, [r7, #4]
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	330c      	adds	r3, #12
 8004df2:	637b      	str	r3, [r7, #52]	@ 0x34
 8004df4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004df6:	e853 3f00 	ldrex	r3, [r3]
 8004dfa:	633b      	str	r3, [r7, #48]	@ 0x30
 8004dfc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004dfe:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004e02:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	330c      	adds	r3, #12
 8004e0a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8004e0c:	643a      	str	r2, [r7, #64]	@ 0x40
 8004e0e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004e10:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004e12:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8004e14:	e841 2300 	strex	r3, r2, [r1]
 8004e18:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004e1a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e1c:	2b00      	cmp	r3, #0
 8004e1e:	d1e5      	bne.n	8004dec <UART_EndRxTransfer+0x8>
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	681b      	ldr	r3, [r3, #0]
 8004e24:	3314      	adds	r3, #20
 8004e26:	623b      	str	r3, [r7, #32]
 8004e28:	6a3b      	ldr	r3, [r7, #32]
 8004e2a:	e853 3f00 	ldrex	r3, [r3]
 8004e2e:	61fb      	str	r3, [r7, #28]
 8004e30:	69fb      	ldr	r3, [r7, #28]
 8004e32:	f023 0301 	bic.w	r3, r3, #1
 8004e36:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	3314      	adds	r3, #20
 8004e3e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004e40:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004e42:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004e44:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8004e46:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004e48:	e841 2300 	strex	r3, r2, [r1]
 8004e4c:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e4e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e50:	2b00      	cmp	r3, #0
 8004e52:	d1e5      	bne.n	8004e20 <UART_EndRxTransfer+0x3c>
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004e58:	2b01      	cmp	r3, #1
 8004e5a:	d119      	bne.n	8004e90 <UART_EndRxTransfer+0xac>
 8004e5c:	687b      	ldr	r3, [r7, #4]
 8004e5e:	681b      	ldr	r3, [r3, #0]
 8004e60:	330c      	adds	r3, #12
 8004e62:	60fb      	str	r3, [r7, #12]
 8004e64:	68fb      	ldr	r3, [r7, #12]
 8004e66:	e853 3f00 	ldrex	r3, [r3]
 8004e6a:	60bb      	str	r3, [r7, #8]
 8004e6c:	68bb      	ldr	r3, [r7, #8]
 8004e6e:	f023 0310 	bic.w	r3, r3, #16
 8004e72:	647b      	str	r3, [r7, #68]	@ 0x44
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	330c      	adds	r3, #12
 8004e7a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004e7c:	61ba      	str	r2, [r7, #24]
 8004e7e:	617b      	str	r3, [r7, #20]
 8004e80:	6979      	ldr	r1, [r7, #20]
 8004e82:	69ba      	ldr	r2, [r7, #24]
 8004e84:	e841 2300 	strex	r3, r2, [r1]
 8004e88:	613b      	str	r3, [r7, #16]
 8004e8a:	693b      	ldr	r3, [r7, #16]
 8004e8c:	2b00      	cmp	r3, #0
 8004e8e:	d1e5      	bne.n	8004e5c <UART_EndRxTransfer+0x78>
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	2220      	movs	r2, #32
 8004e94:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	2200      	movs	r2, #0
 8004e9c:	631a      	str	r2, [r3, #48]	@ 0x30
 8004e9e:	bf00      	nop
 8004ea0:	3754      	adds	r7, #84	@ 0x54
 8004ea2:	46bd      	mov	sp, r7
 8004ea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ea8:	4770      	bx	lr

08004eaa <UART_DMAAbortOnError>:
 8004eaa:	b580      	push	{r7, lr}
 8004eac:	b084      	sub	sp, #16
 8004eae:	af00      	add	r7, sp, #0
 8004eb0:	6078      	str	r0, [r7, #4]
 8004eb2:	687b      	ldr	r3, [r7, #4]
 8004eb4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004eb6:	60fb      	str	r3, [r7, #12]
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	2200      	movs	r2, #0
 8004ebc:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004ebe:	68f8      	ldr	r0, [r7, #12]
 8004ec0:	f7ff ff40 	bl	8004d44 <HAL_UART_ErrorCallback>
 8004ec4:	bf00      	nop
 8004ec6:	3710      	adds	r7, #16
 8004ec8:	46bd      	mov	sp, r7
 8004eca:	bd80      	pop	{r7, pc}

08004ecc <UART_Transmit_IT>:
 8004ecc:	b480      	push	{r7}
 8004ece:	b085      	sub	sp, #20
 8004ed0:	af00      	add	r7, sp, #0
 8004ed2:	6078      	str	r0, [r7, #4]
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004eda:	b2db      	uxtb	r3, r3
 8004edc:	2b21      	cmp	r3, #33	@ 0x21
 8004ede:	d13e      	bne.n	8004f5e <UART_Transmit_IT+0x92>
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	689b      	ldr	r3, [r3, #8]
 8004ee4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004ee8:	d114      	bne.n	8004f14 <UART_Transmit_IT+0x48>
 8004eea:	687b      	ldr	r3, [r7, #4]
 8004eec:	691b      	ldr	r3, [r3, #16]
 8004eee:	2b00      	cmp	r3, #0
 8004ef0:	d110      	bne.n	8004f14 <UART_Transmit_IT+0x48>
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	6a1b      	ldr	r3, [r3, #32]
 8004ef6:	60fb      	str	r3, [r7, #12]
 8004ef8:	68fb      	ldr	r3, [r7, #12]
 8004efa:	881b      	ldrh	r3, [r3, #0]
 8004efc:	461a      	mov	r2, r3
 8004efe:	687b      	ldr	r3, [r7, #4]
 8004f00:	681b      	ldr	r3, [r3, #0]
 8004f02:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004f06:	605a      	str	r2, [r3, #4]
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	6a1b      	ldr	r3, [r3, #32]
 8004f0c:	1c9a      	adds	r2, r3, #2
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	621a      	str	r2, [r3, #32]
 8004f12:	e008      	b.n	8004f26 <UART_Transmit_IT+0x5a>
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	6a1b      	ldr	r3, [r3, #32]
 8004f18:	1c59      	adds	r1, r3, #1
 8004f1a:	687a      	ldr	r2, [r7, #4]
 8004f1c:	6211      	str	r1, [r2, #32]
 8004f1e:	781a      	ldrb	r2, [r3, #0]
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	681b      	ldr	r3, [r3, #0]
 8004f24:	605a      	str	r2, [r3, #4]
 8004f26:	687b      	ldr	r3, [r7, #4]
 8004f28:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8004f2a:	b29b      	uxth	r3, r3
 8004f2c:	3b01      	subs	r3, #1
 8004f2e:	b29b      	uxth	r3, r3
 8004f30:	687a      	ldr	r2, [r7, #4]
 8004f32:	4619      	mov	r1, r3
 8004f34:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8004f36:	2b00      	cmp	r3, #0
 8004f38:	d10f      	bne.n	8004f5a <UART_Transmit_IT+0x8e>
 8004f3a:	687b      	ldr	r3, [r7, #4]
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	68da      	ldr	r2, [r3, #12]
 8004f40:	687b      	ldr	r3, [r7, #4]
 8004f42:	681b      	ldr	r3, [r3, #0]
 8004f44:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004f48:	60da      	str	r2, [r3, #12]
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	68da      	ldr	r2, [r3, #12]
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004f58:	60da      	str	r2, [r3, #12]
 8004f5a:	2300      	movs	r3, #0
 8004f5c:	e000      	b.n	8004f60 <UART_Transmit_IT+0x94>
 8004f5e:	2302      	movs	r3, #2
 8004f60:	4618      	mov	r0, r3
 8004f62:	3714      	adds	r7, #20
 8004f64:	46bd      	mov	sp, r7
 8004f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f6a:	4770      	bx	lr

08004f6c <UART_EndTransmit_IT>:
 8004f6c:	b580      	push	{r7, lr}
 8004f6e:	b082      	sub	sp, #8
 8004f70:	af00      	add	r7, sp, #0
 8004f72:	6078      	str	r0, [r7, #4]
 8004f74:	687b      	ldr	r3, [r7, #4]
 8004f76:	681b      	ldr	r3, [r3, #0]
 8004f78:	68da      	ldr	r2, [r3, #12]
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004f82:	60da      	str	r2, [r3, #12]
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	2220      	movs	r2, #32
 8004f88:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004f8c:	6878      	ldr	r0, [r7, #4]
 8004f8e:	f7fd f8f5 	bl	800217c <HAL_UART_TxCpltCallback>
 8004f92:	2300      	movs	r3, #0
 8004f94:	4618      	mov	r0, r3
 8004f96:	3708      	adds	r7, #8
 8004f98:	46bd      	mov	sp, r7
 8004f9a:	bd80      	pop	{r7, pc}

08004f9c <UART_Receive_IT>:
 8004f9c:	b580      	push	{r7, lr}
 8004f9e:	b08c      	sub	sp, #48	@ 0x30
 8004fa0:	af00      	add	r7, sp, #0
 8004fa2:	6078      	str	r0, [r7, #4]
 8004fa4:	2300      	movs	r3, #0
 8004fa6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004fa8:	2300      	movs	r3, #0
 8004faa:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004fac:	687b      	ldr	r3, [r7, #4]
 8004fae:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8004fb2:	b2db      	uxtb	r3, r3
 8004fb4:	2b22      	cmp	r3, #34	@ 0x22
 8004fb6:	f040 80aa 	bne.w	800510e <UART_Receive_IT+0x172>
 8004fba:	687b      	ldr	r3, [r7, #4]
 8004fbc:	689b      	ldr	r3, [r3, #8]
 8004fbe:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004fc2:	d115      	bne.n	8004ff0 <UART_Receive_IT+0x54>
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	691b      	ldr	r3, [r3, #16]
 8004fc8:	2b00      	cmp	r3, #0
 8004fca:	d111      	bne.n	8004ff0 <UART_Receive_IT+0x54>
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004fd0:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	685b      	ldr	r3, [r3, #4]
 8004fd8:	b29b      	uxth	r3, r3
 8004fda:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004fde:	b29a      	uxth	r2, r3
 8004fe0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004fe2:	801a      	strh	r2, [r3, #0]
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004fe8:	1c9a      	adds	r2, r3, #2
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	629a      	str	r2, [r3, #40]	@ 0x28
 8004fee:	e024      	b.n	800503a <UART_Receive_IT+0x9e>
 8004ff0:	687b      	ldr	r3, [r7, #4]
 8004ff2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ff4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	689b      	ldr	r3, [r3, #8]
 8004ffa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004ffe:	d007      	beq.n	8005010 <UART_Receive_IT+0x74>
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	689b      	ldr	r3, [r3, #8]
 8005004:	2b00      	cmp	r3, #0
 8005006:	d10a      	bne.n	800501e <UART_Receive_IT+0x82>
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	691b      	ldr	r3, [r3, #16]
 800500c:	2b00      	cmp	r3, #0
 800500e:	d106      	bne.n	800501e <UART_Receive_IT+0x82>
 8005010:	687b      	ldr	r3, [r7, #4]
 8005012:	681b      	ldr	r3, [r3, #0]
 8005014:	685b      	ldr	r3, [r3, #4]
 8005016:	b2da      	uxtb	r2, r3
 8005018:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800501a:	701a      	strb	r2, [r3, #0]
 800501c:	e008      	b.n	8005030 <UART_Receive_IT+0x94>
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	681b      	ldr	r3, [r3, #0]
 8005022:	685b      	ldr	r3, [r3, #4]
 8005024:	b2db      	uxtb	r3, r3
 8005026:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800502a:	b2da      	uxtb	r2, r3
 800502c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800502e:	701a      	strb	r2, [r3, #0]
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005034:	1c5a      	adds	r2, r3, #1
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	629a      	str	r2, [r3, #40]	@ 0x28
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800503e:	b29b      	uxth	r3, r3
 8005040:	3b01      	subs	r3, #1
 8005042:	b29b      	uxth	r3, r3
 8005044:	687a      	ldr	r2, [r7, #4]
 8005046:	4619      	mov	r1, r3
 8005048:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 800504a:	2b00      	cmp	r3, #0
 800504c:	d15d      	bne.n	800510a <UART_Receive_IT+0x16e>
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	68da      	ldr	r2, [r3, #12]
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	681b      	ldr	r3, [r3, #0]
 8005058:	f022 0220 	bic.w	r2, r2, #32
 800505c:	60da      	str	r2, [r3, #12]
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	68da      	ldr	r2, [r3, #12]
 8005064:	687b      	ldr	r3, [r7, #4]
 8005066:	681b      	ldr	r3, [r3, #0]
 8005068:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800506c:	60da      	str	r2, [r3, #12]
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	681b      	ldr	r3, [r3, #0]
 8005072:	695a      	ldr	r2, [r3, #20]
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	f022 0201 	bic.w	r2, r2, #1
 800507c:	615a      	str	r2, [r3, #20]
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	2220      	movs	r2, #32
 8005082:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	2200      	movs	r2, #0
 800508a:	635a      	str	r2, [r3, #52]	@ 0x34
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005090:	2b01      	cmp	r3, #1
 8005092:	d135      	bne.n	8005100 <UART_Receive_IT+0x164>
 8005094:	687b      	ldr	r3, [r7, #4]
 8005096:	2200      	movs	r2, #0
 8005098:	631a      	str	r2, [r3, #48]	@ 0x30
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	330c      	adds	r3, #12
 80050a0:	617b      	str	r3, [r7, #20]
 80050a2:	697b      	ldr	r3, [r7, #20]
 80050a4:	e853 3f00 	ldrex	r3, [r3]
 80050a8:	613b      	str	r3, [r7, #16]
 80050aa:	693b      	ldr	r3, [r7, #16]
 80050ac:	f023 0310 	bic.w	r3, r3, #16
 80050b0:	627b      	str	r3, [r7, #36]	@ 0x24
 80050b2:	687b      	ldr	r3, [r7, #4]
 80050b4:	681b      	ldr	r3, [r3, #0]
 80050b6:	330c      	adds	r3, #12
 80050b8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80050ba:	623a      	str	r2, [r7, #32]
 80050bc:	61fb      	str	r3, [r7, #28]
 80050be:	69f9      	ldr	r1, [r7, #28]
 80050c0:	6a3a      	ldr	r2, [r7, #32]
 80050c2:	e841 2300 	strex	r3, r2, [r1]
 80050c6:	61bb      	str	r3, [r7, #24]
 80050c8:	69bb      	ldr	r3, [r7, #24]
 80050ca:	2b00      	cmp	r3, #0
 80050cc:	d1e5      	bne.n	800509a <UART_Receive_IT+0xfe>
 80050ce:	687b      	ldr	r3, [r7, #4]
 80050d0:	681b      	ldr	r3, [r3, #0]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	f003 0310 	and.w	r3, r3, #16
 80050d8:	2b10      	cmp	r3, #16
 80050da:	d10a      	bne.n	80050f2 <UART_Receive_IT+0x156>
 80050dc:	2300      	movs	r3, #0
 80050de:	60fb      	str	r3, [r7, #12]
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	681b      	ldr	r3, [r3, #0]
 80050e6:	60fb      	str	r3, [r7, #12]
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	685b      	ldr	r3, [r3, #4]
 80050ee:	60fb      	str	r3, [r7, #12]
 80050f0:	68fb      	ldr	r3, [r7, #12]
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80050f6:	4619      	mov	r1, r3
 80050f8:	6878      	ldr	r0, [r7, #4]
 80050fa:	f7ff fe2d 	bl	8004d58 <HAL_UARTEx_RxEventCallback>
 80050fe:	e002      	b.n	8005106 <UART_Receive_IT+0x16a>
 8005100:	6878      	ldr	r0, [r7, #4]
 8005102:	f7fd f821 	bl	8002148 <HAL_UART_RxCpltCallback>
 8005106:	2300      	movs	r3, #0
 8005108:	e002      	b.n	8005110 <UART_Receive_IT+0x174>
 800510a:	2300      	movs	r3, #0
 800510c:	e000      	b.n	8005110 <UART_Receive_IT+0x174>
 800510e:	2302      	movs	r3, #2
 8005110:	4618      	mov	r0, r3
 8005112:	3730      	adds	r7, #48	@ 0x30
 8005114:	46bd      	mov	sp, r7
 8005116:	bd80      	pop	{r7, pc}

08005118 <UART_SetConfig>:
 8005118:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800511c:	b0c0      	sub	sp, #256	@ 0x100
 800511e:	af00      	add	r7, sp, #0
 8005120:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8005124:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	691b      	ldr	r3, [r3, #16]
 800512c:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8005130:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005134:	68d9      	ldr	r1, [r3, #12]
 8005136:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800513a:	681a      	ldr	r2, [r3, #0]
 800513c:	ea40 0301 	orr.w	r3, r0, r1
 8005140:	6113      	str	r3, [r2, #16]
 8005142:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005146:	689a      	ldr	r2, [r3, #8]
 8005148:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800514c:	691b      	ldr	r3, [r3, #16]
 800514e:	431a      	orrs	r2, r3
 8005150:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005154:	695b      	ldr	r3, [r3, #20]
 8005156:	431a      	orrs	r2, r3
 8005158:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800515c:	69db      	ldr	r3, [r3, #28]
 800515e:	4313      	orrs	r3, r2
 8005160:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005164:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005168:	681b      	ldr	r3, [r3, #0]
 800516a:	68db      	ldr	r3, [r3, #12]
 800516c:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8005170:	f021 010c 	bic.w	r1, r1, #12
 8005174:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005178:	681a      	ldr	r2, [r3, #0]
 800517a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800517e:	430b      	orrs	r3, r1
 8005180:	60d3      	str	r3, [r2, #12]
 8005182:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005186:	681b      	ldr	r3, [r3, #0]
 8005188:	695b      	ldr	r3, [r3, #20]
 800518a:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 800518e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005192:	6999      	ldr	r1, [r3, #24]
 8005194:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005198:	681a      	ldr	r2, [r3, #0]
 800519a:	ea40 0301 	orr.w	r3, r0, r1
 800519e:	6153      	str	r3, [r2, #20]
 80051a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80051a4:	681a      	ldr	r2, [r3, #0]
 80051a6:	4b8f      	ldr	r3, [pc, #572]	@ (80053e4 <UART_SetConfig+0x2cc>)
 80051a8:	429a      	cmp	r2, r3
 80051aa:	d005      	beq.n	80051b8 <UART_SetConfig+0xa0>
 80051ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80051b0:	681a      	ldr	r2, [r3, #0]
 80051b2:	4b8d      	ldr	r3, [pc, #564]	@ (80053e8 <UART_SetConfig+0x2d0>)
 80051b4:	429a      	cmp	r2, r3
 80051b6:	d104      	bne.n	80051c2 <UART_SetConfig+0xaa>
 80051b8:	f7fe fae4 	bl	8003784 <HAL_RCC_GetPCLK2Freq>
 80051bc:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80051c0:	e003      	b.n	80051ca <UART_SetConfig+0xb2>
 80051c2:	f7fe facb 	bl	800375c <HAL_RCC_GetPCLK1Freq>
 80051c6:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80051ca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80051ce:	69db      	ldr	r3, [r3, #28]
 80051d0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80051d4:	f040 810c 	bne.w	80053f0 <UART_SetConfig+0x2d8>
 80051d8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80051dc:	2200      	movs	r2, #0
 80051de:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80051e2:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80051e6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80051ea:	4622      	mov	r2, r4
 80051ec:	462b      	mov	r3, r5
 80051ee:	1891      	adds	r1, r2, r2
 80051f0:	65b9      	str	r1, [r7, #88]	@ 0x58
 80051f2:	415b      	adcs	r3, r3
 80051f4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80051f6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80051fa:	4621      	mov	r1, r4
 80051fc:	eb12 0801 	adds.w	r8, r2, r1
 8005200:	4629      	mov	r1, r5
 8005202:	eb43 0901 	adc.w	r9, r3, r1
 8005206:	f04f 0200 	mov.w	r2, #0
 800520a:	f04f 0300 	mov.w	r3, #0
 800520e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005212:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005216:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800521a:	4690      	mov	r8, r2
 800521c:	4699      	mov	r9, r3
 800521e:	4623      	mov	r3, r4
 8005220:	eb18 0303 	adds.w	r3, r8, r3
 8005224:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005228:	462b      	mov	r3, r5
 800522a:	eb49 0303 	adc.w	r3, r9, r3
 800522e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005232:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005236:	685b      	ldr	r3, [r3, #4]
 8005238:	2200      	movs	r2, #0
 800523a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800523e:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8005242:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8005246:	460b      	mov	r3, r1
 8005248:	18db      	adds	r3, r3, r3
 800524a:	653b      	str	r3, [r7, #80]	@ 0x50
 800524c:	4613      	mov	r3, r2
 800524e:	eb42 0303 	adc.w	r3, r2, r3
 8005252:	657b      	str	r3, [r7, #84]	@ 0x54
 8005254:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8005258:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800525c:	f7fb fc40 	bl	8000ae0 <__aeabi_uldivmod>
 8005260:	4602      	mov	r2, r0
 8005262:	460b      	mov	r3, r1
 8005264:	4b61      	ldr	r3, [pc, #388]	@ (80053ec <UART_SetConfig+0x2d4>)
 8005266:	fba3 2302 	umull	r2, r3, r3, r2
 800526a:	095b      	lsrs	r3, r3, #5
 800526c:	011c      	lsls	r4, r3, #4
 800526e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005272:	2200      	movs	r2, #0
 8005274:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005278:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 800527c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8005280:	4642      	mov	r2, r8
 8005282:	464b      	mov	r3, r9
 8005284:	1891      	adds	r1, r2, r2
 8005286:	64b9      	str	r1, [r7, #72]	@ 0x48
 8005288:	415b      	adcs	r3, r3
 800528a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800528c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005290:	4641      	mov	r1, r8
 8005292:	eb12 0a01 	adds.w	sl, r2, r1
 8005296:	4649      	mov	r1, r9
 8005298:	eb43 0b01 	adc.w	fp, r3, r1
 800529c:	f04f 0200 	mov.w	r2, #0
 80052a0:	f04f 0300 	mov.w	r3, #0
 80052a4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80052a8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80052ac:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80052b0:	4692      	mov	sl, r2
 80052b2:	469b      	mov	fp, r3
 80052b4:	4643      	mov	r3, r8
 80052b6:	eb1a 0303 	adds.w	r3, sl, r3
 80052ba:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80052be:	464b      	mov	r3, r9
 80052c0:	eb4b 0303 	adc.w	r3, fp, r3
 80052c4:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80052c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80052cc:	685b      	ldr	r3, [r3, #4]
 80052ce:	2200      	movs	r2, #0
 80052d0:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80052d4:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80052d8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80052dc:	460b      	mov	r3, r1
 80052de:	18db      	adds	r3, r3, r3
 80052e0:	643b      	str	r3, [r7, #64]	@ 0x40
 80052e2:	4613      	mov	r3, r2
 80052e4:	eb42 0303 	adc.w	r3, r2, r3
 80052e8:	647b      	str	r3, [r7, #68]	@ 0x44
 80052ea:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80052ee:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80052f2:	f7fb fbf5 	bl	8000ae0 <__aeabi_uldivmod>
 80052f6:	4602      	mov	r2, r0
 80052f8:	460b      	mov	r3, r1
 80052fa:	4611      	mov	r1, r2
 80052fc:	4b3b      	ldr	r3, [pc, #236]	@ (80053ec <UART_SetConfig+0x2d4>)
 80052fe:	fba3 2301 	umull	r2, r3, r3, r1
 8005302:	095b      	lsrs	r3, r3, #5
 8005304:	2264      	movs	r2, #100	@ 0x64
 8005306:	fb02 f303 	mul.w	r3, r2, r3
 800530a:	1acb      	subs	r3, r1, r3
 800530c:	00db      	lsls	r3, r3, #3
 800530e:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8005312:	4b36      	ldr	r3, [pc, #216]	@ (80053ec <UART_SetConfig+0x2d4>)
 8005314:	fba3 2302 	umull	r2, r3, r3, r2
 8005318:	095b      	lsrs	r3, r3, #5
 800531a:	005b      	lsls	r3, r3, #1
 800531c:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8005320:	441c      	add	r4, r3
 8005322:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005326:	2200      	movs	r2, #0
 8005328:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800532c:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8005330:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8005334:	4642      	mov	r2, r8
 8005336:	464b      	mov	r3, r9
 8005338:	1891      	adds	r1, r2, r2
 800533a:	63b9      	str	r1, [r7, #56]	@ 0x38
 800533c:	415b      	adcs	r3, r3
 800533e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005340:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8005344:	4641      	mov	r1, r8
 8005346:	1851      	adds	r1, r2, r1
 8005348:	6339      	str	r1, [r7, #48]	@ 0x30
 800534a:	4649      	mov	r1, r9
 800534c:	414b      	adcs	r3, r1
 800534e:	637b      	str	r3, [r7, #52]	@ 0x34
 8005350:	f04f 0200 	mov.w	r2, #0
 8005354:	f04f 0300 	mov.w	r3, #0
 8005358:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 800535c:	4659      	mov	r1, fp
 800535e:	00cb      	lsls	r3, r1, #3
 8005360:	4651      	mov	r1, sl
 8005362:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005366:	4651      	mov	r1, sl
 8005368:	00ca      	lsls	r2, r1, #3
 800536a:	4610      	mov	r0, r2
 800536c:	4619      	mov	r1, r3
 800536e:	4603      	mov	r3, r0
 8005370:	4642      	mov	r2, r8
 8005372:	189b      	adds	r3, r3, r2
 8005374:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005378:	464b      	mov	r3, r9
 800537a:	460a      	mov	r2, r1
 800537c:	eb42 0303 	adc.w	r3, r2, r3
 8005380:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005384:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005388:	685b      	ldr	r3, [r3, #4]
 800538a:	2200      	movs	r2, #0
 800538c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005390:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8005394:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8005398:	460b      	mov	r3, r1
 800539a:	18db      	adds	r3, r3, r3
 800539c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800539e:	4613      	mov	r3, r2
 80053a0:	eb42 0303 	adc.w	r3, r2, r3
 80053a4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80053a6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80053aa:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80053ae:	f7fb fb97 	bl	8000ae0 <__aeabi_uldivmod>
 80053b2:	4602      	mov	r2, r0
 80053b4:	460b      	mov	r3, r1
 80053b6:	4b0d      	ldr	r3, [pc, #52]	@ (80053ec <UART_SetConfig+0x2d4>)
 80053b8:	fba3 1302 	umull	r1, r3, r3, r2
 80053bc:	095b      	lsrs	r3, r3, #5
 80053be:	2164      	movs	r1, #100	@ 0x64
 80053c0:	fb01 f303 	mul.w	r3, r1, r3
 80053c4:	1ad3      	subs	r3, r2, r3
 80053c6:	00db      	lsls	r3, r3, #3
 80053c8:	3332      	adds	r3, #50	@ 0x32
 80053ca:	4a08      	ldr	r2, [pc, #32]	@ (80053ec <UART_SetConfig+0x2d4>)
 80053cc:	fba2 2303 	umull	r2, r3, r2, r3
 80053d0:	095b      	lsrs	r3, r3, #5
 80053d2:	f003 0207 	and.w	r2, r3, #7
 80053d6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80053da:	681b      	ldr	r3, [r3, #0]
 80053dc:	4422      	add	r2, r4
 80053de:	609a      	str	r2, [r3, #8]
 80053e0:	e106      	b.n	80055f0 <UART_SetConfig+0x4d8>
 80053e2:	bf00      	nop
 80053e4:	40011000 	.word	0x40011000
 80053e8:	40011400 	.word	0x40011400
 80053ec:	51eb851f 	.word	0x51eb851f
 80053f0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80053f4:	2200      	movs	r2, #0
 80053f6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80053fa:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80053fe:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8005402:	4642      	mov	r2, r8
 8005404:	464b      	mov	r3, r9
 8005406:	1891      	adds	r1, r2, r2
 8005408:	6239      	str	r1, [r7, #32]
 800540a:	415b      	adcs	r3, r3
 800540c:	627b      	str	r3, [r7, #36]	@ 0x24
 800540e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8005412:	4641      	mov	r1, r8
 8005414:	1854      	adds	r4, r2, r1
 8005416:	4649      	mov	r1, r9
 8005418:	eb43 0501 	adc.w	r5, r3, r1
 800541c:	f04f 0200 	mov.w	r2, #0
 8005420:	f04f 0300 	mov.w	r3, #0
 8005424:	00eb      	lsls	r3, r5, #3
 8005426:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800542a:	00e2      	lsls	r2, r4, #3
 800542c:	4614      	mov	r4, r2
 800542e:	461d      	mov	r5, r3
 8005430:	4643      	mov	r3, r8
 8005432:	18e3      	adds	r3, r4, r3
 8005434:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005438:	464b      	mov	r3, r9
 800543a:	eb45 0303 	adc.w	r3, r5, r3
 800543e:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005442:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005446:	685b      	ldr	r3, [r3, #4]
 8005448:	2200      	movs	r2, #0
 800544a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800544e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8005452:	f04f 0200 	mov.w	r2, #0
 8005456:	f04f 0300 	mov.w	r3, #0
 800545a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800545e:	4629      	mov	r1, r5
 8005460:	008b      	lsls	r3, r1, #2
 8005462:	4621      	mov	r1, r4
 8005464:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005468:	4621      	mov	r1, r4
 800546a:	008a      	lsls	r2, r1, #2
 800546c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8005470:	f7fb fb36 	bl	8000ae0 <__aeabi_uldivmod>
 8005474:	4602      	mov	r2, r0
 8005476:	460b      	mov	r3, r1
 8005478:	4b60      	ldr	r3, [pc, #384]	@ (80055fc <UART_SetConfig+0x4e4>)
 800547a:	fba3 2302 	umull	r2, r3, r3, r2
 800547e:	095b      	lsrs	r3, r3, #5
 8005480:	011c      	lsls	r4, r3, #4
 8005482:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005486:	2200      	movs	r2, #0
 8005488:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800548c:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8005490:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8005494:	4642      	mov	r2, r8
 8005496:	464b      	mov	r3, r9
 8005498:	1891      	adds	r1, r2, r2
 800549a:	61b9      	str	r1, [r7, #24]
 800549c:	415b      	adcs	r3, r3
 800549e:	61fb      	str	r3, [r7, #28]
 80054a0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80054a4:	4641      	mov	r1, r8
 80054a6:	1851      	adds	r1, r2, r1
 80054a8:	6139      	str	r1, [r7, #16]
 80054aa:	4649      	mov	r1, r9
 80054ac:	414b      	adcs	r3, r1
 80054ae:	617b      	str	r3, [r7, #20]
 80054b0:	f04f 0200 	mov.w	r2, #0
 80054b4:	f04f 0300 	mov.w	r3, #0
 80054b8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80054bc:	4659      	mov	r1, fp
 80054be:	00cb      	lsls	r3, r1, #3
 80054c0:	4651      	mov	r1, sl
 80054c2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80054c6:	4651      	mov	r1, sl
 80054c8:	00ca      	lsls	r2, r1, #3
 80054ca:	4610      	mov	r0, r2
 80054cc:	4619      	mov	r1, r3
 80054ce:	4603      	mov	r3, r0
 80054d0:	4642      	mov	r2, r8
 80054d2:	189b      	adds	r3, r3, r2
 80054d4:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80054d8:	464b      	mov	r3, r9
 80054da:	460a      	mov	r2, r1
 80054dc:	eb42 0303 	adc.w	r3, r2, r3
 80054e0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80054e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80054e8:	685b      	ldr	r3, [r3, #4]
 80054ea:	2200      	movs	r2, #0
 80054ec:	67bb      	str	r3, [r7, #120]	@ 0x78
 80054ee:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80054f0:	f04f 0200 	mov.w	r2, #0
 80054f4:	f04f 0300 	mov.w	r3, #0
 80054f8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80054fc:	4649      	mov	r1, r9
 80054fe:	008b      	lsls	r3, r1, #2
 8005500:	4641      	mov	r1, r8
 8005502:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005506:	4641      	mov	r1, r8
 8005508:	008a      	lsls	r2, r1, #2
 800550a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800550e:	f7fb fae7 	bl	8000ae0 <__aeabi_uldivmod>
 8005512:	4602      	mov	r2, r0
 8005514:	460b      	mov	r3, r1
 8005516:	4611      	mov	r1, r2
 8005518:	4b38      	ldr	r3, [pc, #224]	@ (80055fc <UART_SetConfig+0x4e4>)
 800551a:	fba3 2301 	umull	r2, r3, r3, r1
 800551e:	095b      	lsrs	r3, r3, #5
 8005520:	2264      	movs	r2, #100	@ 0x64
 8005522:	fb02 f303 	mul.w	r3, r2, r3
 8005526:	1acb      	subs	r3, r1, r3
 8005528:	011b      	lsls	r3, r3, #4
 800552a:	3332      	adds	r3, #50	@ 0x32
 800552c:	4a33      	ldr	r2, [pc, #204]	@ (80055fc <UART_SetConfig+0x4e4>)
 800552e:	fba2 2303 	umull	r2, r3, r2, r3
 8005532:	095b      	lsrs	r3, r3, #5
 8005534:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8005538:	441c      	add	r4, r3
 800553a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800553e:	2200      	movs	r2, #0
 8005540:	673b      	str	r3, [r7, #112]	@ 0x70
 8005542:	677a      	str	r2, [r7, #116]	@ 0x74
 8005544:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8005548:	4642      	mov	r2, r8
 800554a:	464b      	mov	r3, r9
 800554c:	1891      	adds	r1, r2, r2
 800554e:	60b9      	str	r1, [r7, #8]
 8005550:	415b      	adcs	r3, r3
 8005552:	60fb      	str	r3, [r7, #12]
 8005554:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8005558:	4641      	mov	r1, r8
 800555a:	1851      	adds	r1, r2, r1
 800555c:	6039      	str	r1, [r7, #0]
 800555e:	4649      	mov	r1, r9
 8005560:	414b      	adcs	r3, r1
 8005562:	607b      	str	r3, [r7, #4]
 8005564:	f04f 0200 	mov.w	r2, #0
 8005568:	f04f 0300 	mov.w	r3, #0
 800556c:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8005570:	4659      	mov	r1, fp
 8005572:	00cb      	lsls	r3, r1, #3
 8005574:	4651      	mov	r1, sl
 8005576:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800557a:	4651      	mov	r1, sl
 800557c:	00ca      	lsls	r2, r1, #3
 800557e:	4610      	mov	r0, r2
 8005580:	4619      	mov	r1, r3
 8005582:	4603      	mov	r3, r0
 8005584:	4642      	mov	r2, r8
 8005586:	189b      	adds	r3, r3, r2
 8005588:	66bb      	str	r3, [r7, #104]	@ 0x68
 800558a:	464b      	mov	r3, r9
 800558c:	460a      	mov	r2, r1
 800558e:	eb42 0303 	adc.w	r3, r2, r3
 8005592:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8005594:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005598:	685b      	ldr	r3, [r3, #4]
 800559a:	2200      	movs	r2, #0
 800559c:	663b      	str	r3, [r7, #96]	@ 0x60
 800559e:	667a      	str	r2, [r7, #100]	@ 0x64
 80055a0:	f04f 0200 	mov.w	r2, #0
 80055a4:	f04f 0300 	mov.w	r3, #0
 80055a8:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80055ac:	4649      	mov	r1, r9
 80055ae:	008b      	lsls	r3, r1, #2
 80055b0:	4641      	mov	r1, r8
 80055b2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80055b6:	4641      	mov	r1, r8
 80055b8:	008a      	lsls	r2, r1, #2
 80055ba:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80055be:	f7fb fa8f 	bl	8000ae0 <__aeabi_uldivmod>
 80055c2:	4602      	mov	r2, r0
 80055c4:	460b      	mov	r3, r1
 80055c6:	4b0d      	ldr	r3, [pc, #52]	@ (80055fc <UART_SetConfig+0x4e4>)
 80055c8:	fba3 1302 	umull	r1, r3, r3, r2
 80055cc:	095b      	lsrs	r3, r3, #5
 80055ce:	2164      	movs	r1, #100	@ 0x64
 80055d0:	fb01 f303 	mul.w	r3, r1, r3
 80055d4:	1ad3      	subs	r3, r2, r3
 80055d6:	011b      	lsls	r3, r3, #4
 80055d8:	3332      	adds	r3, #50	@ 0x32
 80055da:	4a08      	ldr	r2, [pc, #32]	@ (80055fc <UART_SetConfig+0x4e4>)
 80055dc:	fba2 2303 	umull	r2, r3, r2, r3
 80055e0:	095b      	lsrs	r3, r3, #5
 80055e2:	f003 020f 	and.w	r2, r3, #15
 80055e6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80055ea:	681b      	ldr	r3, [r3, #0]
 80055ec:	4422      	add	r2, r4
 80055ee:	609a      	str	r2, [r3, #8]
 80055f0:	bf00      	nop
 80055f2:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80055f6:	46bd      	mov	sp, r7
 80055f8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80055fc:	51eb851f 	.word	0x51eb851f

08005600 <memset>:
 8005600:	4402      	add	r2, r0
 8005602:	4603      	mov	r3, r0
 8005604:	4293      	cmp	r3, r2
 8005606:	d100      	bne.n	800560a <memset+0xa>
 8005608:	4770      	bx	lr
 800560a:	f803 1b01 	strb.w	r1, [r3], #1
 800560e:	e7f9      	b.n	8005604 <memset+0x4>

08005610 <__errno>:
 8005610:	4b01      	ldr	r3, [pc, #4]	@ (8005618 <__errno+0x8>)
 8005612:	6818      	ldr	r0, [r3, #0]
 8005614:	4770      	bx	lr
 8005616:	bf00      	nop
 8005618:	200000c4 	.word	0x200000c4

0800561c <__libc_init_array>:
 800561c:	b570      	push	{r4, r5, r6, lr}
 800561e:	4d0d      	ldr	r5, [pc, #52]	@ (8005654 <__libc_init_array+0x38>)
 8005620:	4c0d      	ldr	r4, [pc, #52]	@ (8005658 <__libc_init_array+0x3c>)
 8005622:	1b64      	subs	r4, r4, r5
 8005624:	10a4      	asrs	r4, r4, #2
 8005626:	2600      	movs	r6, #0
 8005628:	42a6      	cmp	r6, r4
 800562a:	d109      	bne.n	8005640 <__libc_init_array+0x24>
 800562c:	4d0b      	ldr	r5, [pc, #44]	@ (800565c <__libc_init_array+0x40>)
 800562e:	4c0c      	ldr	r4, [pc, #48]	@ (8005660 <__libc_init_array+0x44>)
 8005630:	f000 f91a 	bl	8005868 <_init>
 8005634:	1b64      	subs	r4, r4, r5
 8005636:	10a4      	asrs	r4, r4, #2
 8005638:	2600      	movs	r6, #0
 800563a:	42a6      	cmp	r6, r4
 800563c:	d105      	bne.n	800564a <__libc_init_array+0x2e>
 800563e:	bd70      	pop	{r4, r5, r6, pc}
 8005640:	f855 3b04 	ldr.w	r3, [r5], #4
 8005644:	4798      	blx	r3
 8005646:	3601      	adds	r6, #1
 8005648:	e7ee      	b.n	8005628 <__libc_init_array+0xc>
 800564a:	f855 3b04 	ldr.w	r3, [r5], #4
 800564e:	4798      	blx	r3
 8005650:	3601      	adds	r6, #1
 8005652:	e7f2      	b.n	800563a <__libc_init_array+0x1e>
 8005654:	080058b0 	.word	0x080058b0
 8005658:	080058b0 	.word	0x080058b0
 800565c:	080058b0 	.word	0x080058b0
 8005660:	080058b4 	.word	0x080058b4

08005664 <sqrt>:
 8005664:	b538      	push	{r3, r4, r5, lr}
 8005666:	ed2d 8b02 	vpush	{d8}
 800566a:	ec55 4b10 	vmov	r4, r5, d0
 800566e:	f000 f825 	bl	80056bc <__ieee754_sqrt>
 8005672:	4622      	mov	r2, r4
 8005674:	462b      	mov	r3, r5
 8005676:	4620      	mov	r0, r4
 8005678:	4629      	mov	r1, r5
 800567a:	eeb0 8a40 	vmov.f32	s16, s0
 800567e:	eef0 8a60 	vmov.f32	s17, s1
 8005682:	f7fb f9f7 	bl	8000a74 <__aeabi_dcmpun>
 8005686:	b990      	cbnz	r0, 80056ae <sqrt+0x4a>
 8005688:	2200      	movs	r2, #0
 800568a:	2300      	movs	r3, #0
 800568c:	4620      	mov	r0, r4
 800568e:	4629      	mov	r1, r5
 8005690:	f7fb f9c8 	bl	8000a24 <__aeabi_dcmplt>
 8005694:	b158      	cbz	r0, 80056ae <sqrt+0x4a>
 8005696:	f7ff ffbb 	bl	8005610 <__errno>
 800569a:	2321      	movs	r3, #33	@ 0x21
 800569c:	6003      	str	r3, [r0, #0]
 800569e:	2200      	movs	r2, #0
 80056a0:	2300      	movs	r3, #0
 80056a2:	4610      	mov	r0, r2
 80056a4:	4619      	mov	r1, r3
 80056a6:	f7fb f875 	bl	8000794 <__aeabi_ddiv>
 80056aa:	ec41 0b18 	vmov	d8, r0, r1
 80056ae:	eeb0 0a48 	vmov.f32	s0, s16
 80056b2:	eef0 0a68 	vmov.f32	s1, s17
 80056b6:	ecbd 8b02 	vpop	{d8}
 80056ba:	bd38      	pop	{r3, r4, r5, pc}

080056bc <__ieee754_sqrt>:
 80056bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80056c0:	4a66      	ldr	r2, [pc, #408]	@ (800585c <__ieee754_sqrt+0x1a0>)
 80056c2:	ec55 4b10 	vmov	r4, r5, d0
 80056c6:	43aa      	bics	r2, r5
 80056c8:	462b      	mov	r3, r5
 80056ca:	4621      	mov	r1, r4
 80056cc:	d110      	bne.n	80056f0 <__ieee754_sqrt+0x34>
 80056ce:	4622      	mov	r2, r4
 80056d0:	4620      	mov	r0, r4
 80056d2:	4629      	mov	r1, r5
 80056d4:	f7fa ff34 	bl	8000540 <__aeabi_dmul>
 80056d8:	4602      	mov	r2, r0
 80056da:	460b      	mov	r3, r1
 80056dc:	4620      	mov	r0, r4
 80056de:	4629      	mov	r1, r5
 80056e0:	f7fa fd78 	bl	80001d4 <__adddf3>
 80056e4:	4604      	mov	r4, r0
 80056e6:	460d      	mov	r5, r1
 80056e8:	ec45 4b10 	vmov	d0, r4, r5
 80056ec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80056f0:	2d00      	cmp	r5, #0
 80056f2:	dc0e      	bgt.n	8005712 <__ieee754_sqrt+0x56>
 80056f4:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 80056f8:	4322      	orrs	r2, r4
 80056fa:	d0f5      	beq.n	80056e8 <__ieee754_sqrt+0x2c>
 80056fc:	b19d      	cbz	r5, 8005726 <__ieee754_sqrt+0x6a>
 80056fe:	4622      	mov	r2, r4
 8005700:	4620      	mov	r0, r4
 8005702:	4629      	mov	r1, r5
 8005704:	f7fa fd64 	bl	80001d0 <__aeabi_dsub>
 8005708:	4602      	mov	r2, r0
 800570a:	460b      	mov	r3, r1
 800570c:	f7fb f842 	bl	8000794 <__aeabi_ddiv>
 8005710:	e7e8      	b.n	80056e4 <__ieee754_sqrt+0x28>
 8005712:	152a      	asrs	r2, r5, #20
 8005714:	d115      	bne.n	8005742 <__ieee754_sqrt+0x86>
 8005716:	2000      	movs	r0, #0
 8005718:	e009      	b.n	800572e <__ieee754_sqrt+0x72>
 800571a:	0acb      	lsrs	r3, r1, #11
 800571c:	3a15      	subs	r2, #21
 800571e:	0549      	lsls	r1, r1, #21
 8005720:	2b00      	cmp	r3, #0
 8005722:	d0fa      	beq.n	800571a <__ieee754_sqrt+0x5e>
 8005724:	e7f7      	b.n	8005716 <__ieee754_sqrt+0x5a>
 8005726:	462a      	mov	r2, r5
 8005728:	e7fa      	b.n	8005720 <__ieee754_sqrt+0x64>
 800572a:	005b      	lsls	r3, r3, #1
 800572c:	3001      	adds	r0, #1
 800572e:	02dc      	lsls	r4, r3, #11
 8005730:	d5fb      	bpl.n	800572a <__ieee754_sqrt+0x6e>
 8005732:	1e44      	subs	r4, r0, #1
 8005734:	1b12      	subs	r2, r2, r4
 8005736:	f1c0 0420 	rsb	r4, r0, #32
 800573a:	fa21 f404 	lsr.w	r4, r1, r4
 800573e:	4323      	orrs	r3, r4
 8005740:	4081      	lsls	r1, r0
 8005742:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005746:	f2a2 37ff 	subw	r7, r2, #1023	@ 0x3ff
 800574a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800574e:	07d2      	lsls	r2, r2, #31
 8005750:	bf5c      	itt	pl
 8005752:	005b      	lslpl	r3, r3, #1
 8005754:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 8005758:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800575c:	bf58      	it	pl
 800575e:	0049      	lslpl	r1, r1, #1
 8005760:	2600      	movs	r6, #0
 8005762:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 8005766:	107f      	asrs	r7, r7, #1
 8005768:	0049      	lsls	r1, r1, #1
 800576a:	2016      	movs	r0, #22
 800576c:	4632      	mov	r2, r6
 800576e:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 8005772:	1915      	adds	r5, r2, r4
 8005774:	429d      	cmp	r5, r3
 8005776:	bfde      	ittt	le
 8005778:	192a      	addle	r2, r5, r4
 800577a:	1b5b      	suble	r3, r3, r5
 800577c:	1936      	addle	r6, r6, r4
 800577e:	0fcd      	lsrs	r5, r1, #31
 8005780:	3801      	subs	r0, #1
 8005782:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8005786:	ea4f 0141 	mov.w	r1, r1, lsl #1
 800578a:	ea4f 0454 	mov.w	r4, r4, lsr #1
 800578e:	d1f0      	bne.n	8005772 <__ieee754_sqrt+0xb6>
 8005790:	4605      	mov	r5, r0
 8005792:	2420      	movs	r4, #32
 8005794:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8005798:	4293      	cmp	r3, r2
 800579a:	eb0c 0e00 	add.w	lr, ip, r0
 800579e:	dc02      	bgt.n	80057a6 <__ieee754_sqrt+0xea>
 80057a0:	d113      	bne.n	80057ca <__ieee754_sqrt+0x10e>
 80057a2:	458e      	cmp	lr, r1
 80057a4:	d811      	bhi.n	80057ca <__ieee754_sqrt+0x10e>
 80057a6:	f1be 0f00 	cmp.w	lr, #0
 80057aa:	eb0e 000c 	add.w	r0, lr, ip
 80057ae:	da3f      	bge.n	8005830 <__ieee754_sqrt+0x174>
 80057b0:	2800      	cmp	r0, #0
 80057b2:	db3d      	blt.n	8005830 <__ieee754_sqrt+0x174>
 80057b4:	f102 0801 	add.w	r8, r2, #1
 80057b8:	1a9b      	subs	r3, r3, r2
 80057ba:	458e      	cmp	lr, r1
 80057bc:	bf88      	it	hi
 80057be:	f103 33ff 	addhi.w	r3, r3, #4294967295
 80057c2:	eba1 010e 	sub.w	r1, r1, lr
 80057c6:	4465      	add	r5, ip
 80057c8:	4642      	mov	r2, r8
 80057ca:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 80057ce:	3c01      	subs	r4, #1
 80057d0:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 80057d4:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80057d8:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 80057dc:	d1dc      	bne.n	8005798 <__ieee754_sqrt+0xdc>
 80057de:	4319      	orrs	r1, r3
 80057e0:	d01b      	beq.n	800581a <__ieee754_sqrt+0x15e>
 80057e2:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 8005860 <__ieee754_sqrt+0x1a4>
 80057e6:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 8005864 <__ieee754_sqrt+0x1a8>
 80057ea:	e9da 0100 	ldrd	r0, r1, [sl]
 80057ee:	e9db 2300 	ldrd	r2, r3, [fp]
 80057f2:	f7fa fced 	bl	80001d0 <__aeabi_dsub>
 80057f6:	e9da 8900 	ldrd	r8, r9, [sl]
 80057fa:	4602      	mov	r2, r0
 80057fc:	460b      	mov	r3, r1
 80057fe:	4640      	mov	r0, r8
 8005800:	4649      	mov	r1, r9
 8005802:	f7fb f919 	bl	8000a38 <__aeabi_dcmple>
 8005806:	b140      	cbz	r0, 800581a <__ieee754_sqrt+0x15e>
 8005808:	f1b5 3fff 	cmp.w	r5, #4294967295
 800580c:	e9da 0100 	ldrd	r0, r1, [sl]
 8005810:	e9db 2300 	ldrd	r2, r3, [fp]
 8005814:	d10e      	bne.n	8005834 <__ieee754_sqrt+0x178>
 8005816:	3601      	adds	r6, #1
 8005818:	4625      	mov	r5, r4
 800581a:	1073      	asrs	r3, r6, #1
 800581c:	f103 537f 	add.w	r3, r3, #1069547520	@ 0x3fc00000
 8005820:	f503 1300 	add.w	r3, r3, #2097152	@ 0x200000
 8005824:	eb03 5107 	add.w	r1, r3, r7, lsl #20
 8005828:	086b      	lsrs	r3, r5, #1
 800582a:	ea43 70c6 	orr.w	r0, r3, r6, lsl #31
 800582e:	e759      	b.n	80056e4 <__ieee754_sqrt+0x28>
 8005830:	4690      	mov	r8, r2
 8005832:	e7c1      	b.n	80057b8 <__ieee754_sqrt+0xfc>
 8005834:	f7fa fcce 	bl	80001d4 <__adddf3>
 8005838:	e9da 8900 	ldrd	r8, r9, [sl]
 800583c:	4602      	mov	r2, r0
 800583e:	460b      	mov	r3, r1
 8005840:	4640      	mov	r0, r8
 8005842:	4649      	mov	r1, r9
 8005844:	f7fb f8ee 	bl	8000a24 <__aeabi_dcmplt>
 8005848:	b120      	cbz	r0, 8005854 <__ieee754_sqrt+0x198>
 800584a:	1cab      	adds	r3, r5, #2
 800584c:	bf08      	it	eq
 800584e:	3601      	addeq	r6, #1
 8005850:	3502      	adds	r5, #2
 8005852:	e7e2      	b.n	800581a <__ieee754_sqrt+0x15e>
 8005854:	1c6b      	adds	r3, r5, #1
 8005856:	f023 0501 	bic.w	r5, r3, #1
 800585a:	e7de      	b.n	800581a <__ieee754_sqrt+0x15e>
 800585c:	7ff00000 	.word	0x7ff00000
 8005860:	080058a0 	.word	0x080058a0
 8005864:	08005898 	.word	0x08005898

08005868 <_init>:
 8005868:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800586a:	bf00      	nop
 800586c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800586e:	bc08      	pop	{r3}
 8005870:	469e      	mov	lr, r3
 8005872:	4770      	bx	lr

08005874 <_fini>:
 8005874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005876:	bf00      	nop
 8005878:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800587a:	bc08      	pop	{r3}
 800587c:	469e      	mov	lr, r3
 800587e:	4770      	bx	lr
