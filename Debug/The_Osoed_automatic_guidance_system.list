
The_Osoed_automatic_guidance_system.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005718  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  080058a0  080058a0  000068a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080058c8  080058c8  00007104  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  080058c8  080058c8  000068c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080058d0  080058d0  00007104  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080058d0  080058d0  000068d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080058d4  080058d4  000068d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000104  20000000  080058d8  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00007104  2**0
                  CONTENTS
 10 .bss          0000035c  20000104  20000104  00007104  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000460  20000460  00007104  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00007104  2**0
                  CONTENTS, READONLY
 13 .debug_info   0001015c  00000000  00000000  00007134  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002474  00000000  00000000  00017290  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000d50  00000000  00000000  00019708  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000a87  00000000  00000000  0001a458  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00021e43  00000000  00000000  0001aedf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000112e2  00000000  00000000  0003cd22  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000cbf1b  00000000  00000000  0004e004  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00119f1f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00003ae0  00000000  00000000  00119f64  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000008d  00000000  00000000  0011da44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000104 	.word	0x20000104
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08005888 	.word	0x08005888

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000108 	.word	0x20000108
 80001c4:	08005888 	.word	0x08005888

080001c8 <__aeabi_drsub>:
 80001c8:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80001cc:	e002      	b.n	80001d4 <__adddf3>
 80001ce:	bf00      	nop

080001d0 <__aeabi_dsub>:
 80001d0:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080001d4 <__adddf3>:
 80001d4:	b530      	push	{r4, r5, lr}
 80001d6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001da:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001de:	ea94 0f05 	teq	r4, r5
 80001e2:	bf08      	it	eq
 80001e4:	ea90 0f02 	teqeq	r0, r2
 80001e8:	bf1f      	itttt	ne
 80001ea:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001ee:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001f2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001f6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001fa:	f000 80e2 	beq.w	80003c2 <__adddf3+0x1ee>
 80001fe:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000202:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000206:	bfb8      	it	lt
 8000208:	426d      	neglt	r5, r5
 800020a:	dd0c      	ble.n	8000226 <__adddf3+0x52>
 800020c:	442c      	add	r4, r5
 800020e:	ea80 0202 	eor.w	r2, r0, r2
 8000212:	ea81 0303 	eor.w	r3, r1, r3
 8000216:	ea82 0000 	eor.w	r0, r2, r0
 800021a:	ea83 0101 	eor.w	r1, r3, r1
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	2d36      	cmp	r5, #54	@ 0x36
 8000228:	bf88      	it	hi
 800022a:	bd30      	pophi	{r4, r5, pc}
 800022c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000230:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000234:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000238:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800023c:	d002      	beq.n	8000244 <__adddf3+0x70>
 800023e:	4240      	negs	r0, r0
 8000240:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000244:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000248:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800024c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000250:	d002      	beq.n	8000258 <__adddf3+0x84>
 8000252:	4252      	negs	r2, r2
 8000254:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000258:	ea94 0f05 	teq	r4, r5
 800025c:	f000 80a7 	beq.w	80003ae <__adddf3+0x1da>
 8000260:	f1a4 0401 	sub.w	r4, r4, #1
 8000264:	f1d5 0e20 	rsbs	lr, r5, #32
 8000268:	db0d      	blt.n	8000286 <__adddf3+0xb2>
 800026a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800026e:	fa22 f205 	lsr.w	r2, r2, r5
 8000272:	1880      	adds	r0, r0, r2
 8000274:	f141 0100 	adc.w	r1, r1, #0
 8000278:	fa03 f20e 	lsl.w	r2, r3, lr
 800027c:	1880      	adds	r0, r0, r2
 800027e:	fa43 f305 	asr.w	r3, r3, r5
 8000282:	4159      	adcs	r1, r3
 8000284:	e00e      	b.n	80002a4 <__adddf3+0xd0>
 8000286:	f1a5 0520 	sub.w	r5, r5, #32
 800028a:	f10e 0e20 	add.w	lr, lr, #32
 800028e:	2a01      	cmp	r2, #1
 8000290:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000294:	bf28      	it	cs
 8000296:	f04c 0c02 	orrcs.w	ip, ip, #2
 800029a:	fa43 f305 	asr.w	r3, r3, r5
 800029e:	18c0      	adds	r0, r0, r3
 80002a0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002a4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80002a8:	d507      	bpl.n	80002ba <__adddf3+0xe6>
 80002aa:	f04f 0e00 	mov.w	lr, #0
 80002ae:	f1dc 0c00 	rsbs	ip, ip, #0
 80002b2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002b6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ba:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80002be:	d31b      	bcc.n	80002f8 <__adddf3+0x124>
 80002c0:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80002c4:	d30c      	bcc.n	80002e0 <__adddf3+0x10c>
 80002c6:	0849      	lsrs	r1, r1, #1
 80002c8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002cc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002d0:	f104 0401 	add.w	r4, r4, #1
 80002d4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002d8:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80002dc:	f080 809a 	bcs.w	8000414 <__adddf3+0x240>
 80002e0:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80002e4:	bf08      	it	eq
 80002e6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002ea:	f150 0000 	adcs.w	r0, r0, #0
 80002ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002f2:	ea41 0105 	orr.w	r1, r1, r5
 80002f6:	bd30      	pop	{r4, r5, pc}
 80002f8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002fc:	4140      	adcs	r0, r0
 80002fe:	eb41 0101 	adc.w	r1, r1, r1
 8000302:	3c01      	subs	r4, #1
 8000304:	bf28      	it	cs
 8000306:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800030a:	d2e9      	bcs.n	80002e0 <__adddf3+0x10c>
 800030c:	f091 0f00 	teq	r1, #0
 8000310:	bf04      	itt	eq
 8000312:	4601      	moveq	r1, r0
 8000314:	2000      	moveq	r0, #0
 8000316:	fab1 f381 	clz	r3, r1
 800031a:	bf08      	it	eq
 800031c:	3320      	addeq	r3, #32
 800031e:	f1a3 030b 	sub.w	r3, r3, #11
 8000322:	f1b3 0220 	subs.w	r2, r3, #32
 8000326:	da0c      	bge.n	8000342 <__adddf3+0x16e>
 8000328:	320c      	adds	r2, #12
 800032a:	dd08      	ble.n	800033e <__adddf3+0x16a>
 800032c:	f102 0c14 	add.w	ip, r2, #20
 8000330:	f1c2 020c 	rsb	r2, r2, #12
 8000334:	fa01 f00c 	lsl.w	r0, r1, ip
 8000338:	fa21 f102 	lsr.w	r1, r1, r2
 800033c:	e00c      	b.n	8000358 <__adddf3+0x184>
 800033e:	f102 0214 	add.w	r2, r2, #20
 8000342:	bfd8      	it	le
 8000344:	f1c2 0c20 	rsble	ip, r2, #32
 8000348:	fa01 f102 	lsl.w	r1, r1, r2
 800034c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000350:	bfdc      	itt	le
 8000352:	ea41 010c 	orrle.w	r1, r1, ip
 8000356:	4090      	lslle	r0, r2
 8000358:	1ae4      	subs	r4, r4, r3
 800035a:	bfa2      	ittt	ge
 800035c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000360:	4329      	orrge	r1, r5
 8000362:	bd30      	popge	{r4, r5, pc}
 8000364:	ea6f 0404 	mvn.w	r4, r4
 8000368:	3c1f      	subs	r4, #31
 800036a:	da1c      	bge.n	80003a6 <__adddf3+0x1d2>
 800036c:	340c      	adds	r4, #12
 800036e:	dc0e      	bgt.n	800038e <__adddf3+0x1ba>
 8000370:	f104 0414 	add.w	r4, r4, #20
 8000374:	f1c4 0220 	rsb	r2, r4, #32
 8000378:	fa20 f004 	lsr.w	r0, r0, r4
 800037c:	fa01 f302 	lsl.w	r3, r1, r2
 8000380:	ea40 0003 	orr.w	r0, r0, r3
 8000384:	fa21 f304 	lsr.w	r3, r1, r4
 8000388:	ea45 0103 	orr.w	r1, r5, r3
 800038c:	bd30      	pop	{r4, r5, pc}
 800038e:	f1c4 040c 	rsb	r4, r4, #12
 8000392:	f1c4 0220 	rsb	r2, r4, #32
 8000396:	fa20 f002 	lsr.w	r0, r0, r2
 800039a:	fa01 f304 	lsl.w	r3, r1, r4
 800039e:	ea40 0003 	orr.w	r0, r0, r3
 80003a2:	4629      	mov	r1, r5
 80003a4:	bd30      	pop	{r4, r5, pc}
 80003a6:	fa21 f004 	lsr.w	r0, r1, r4
 80003aa:	4629      	mov	r1, r5
 80003ac:	bd30      	pop	{r4, r5, pc}
 80003ae:	f094 0f00 	teq	r4, #0
 80003b2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80003b6:	bf06      	itte	eq
 80003b8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80003bc:	3401      	addeq	r4, #1
 80003be:	3d01      	subne	r5, #1
 80003c0:	e74e      	b.n	8000260 <__adddf3+0x8c>
 80003c2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003c6:	bf18      	it	ne
 80003c8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003cc:	d029      	beq.n	8000422 <__adddf3+0x24e>
 80003ce:	ea94 0f05 	teq	r4, r5
 80003d2:	bf08      	it	eq
 80003d4:	ea90 0f02 	teqeq	r0, r2
 80003d8:	d005      	beq.n	80003e6 <__adddf3+0x212>
 80003da:	ea54 0c00 	orrs.w	ip, r4, r0
 80003de:	bf04      	itt	eq
 80003e0:	4619      	moveq	r1, r3
 80003e2:	4610      	moveq	r0, r2
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	ea91 0f03 	teq	r1, r3
 80003ea:	bf1e      	ittt	ne
 80003ec:	2100      	movne	r1, #0
 80003ee:	2000      	movne	r0, #0
 80003f0:	bd30      	popne	{r4, r5, pc}
 80003f2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003f6:	d105      	bne.n	8000404 <__adddf3+0x230>
 80003f8:	0040      	lsls	r0, r0, #1
 80003fa:	4149      	adcs	r1, r1
 80003fc:	bf28      	it	cs
 80003fe:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000402:	bd30      	pop	{r4, r5, pc}
 8000404:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000408:	bf3c      	itt	cc
 800040a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800040e:	bd30      	popcc	{r4, r5, pc}
 8000410:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000414:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000418:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800041c:	f04f 0000 	mov.w	r0, #0
 8000420:	bd30      	pop	{r4, r5, pc}
 8000422:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000426:	bf1a      	itte	ne
 8000428:	4619      	movne	r1, r3
 800042a:	4610      	movne	r0, r2
 800042c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000430:	bf1c      	itt	ne
 8000432:	460b      	movne	r3, r1
 8000434:	4602      	movne	r2, r0
 8000436:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800043a:	bf06      	itte	eq
 800043c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000440:	ea91 0f03 	teqeq	r1, r3
 8000444:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000448:	bd30      	pop	{r4, r5, pc}
 800044a:	bf00      	nop

0800044c <__aeabi_ui2d>:
 800044c:	f090 0f00 	teq	r0, #0
 8000450:	bf04      	itt	eq
 8000452:	2100      	moveq	r1, #0
 8000454:	4770      	bxeq	lr
 8000456:	b530      	push	{r4, r5, lr}
 8000458:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800045c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000460:	f04f 0500 	mov.w	r5, #0
 8000464:	f04f 0100 	mov.w	r1, #0
 8000468:	e750      	b.n	800030c <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_i2d>:
 800046c:	f090 0f00 	teq	r0, #0
 8000470:	bf04      	itt	eq
 8000472:	2100      	moveq	r1, #0
 8000474:	4770      	bxeq	lr
 8000476:	b530      	push	{r4, r5, lr}
 8000478:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800047c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000480:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8000484:	bf48      	it	mi
 8000486:	4240      	negmi	r0, r0
 8000488:	f04f 0100 	mov.w	r1, #0
 800048c:	e73e      	b.n	800030c <__adddf3+0x138>
 800048e:	bf00      	nop

08000490 <__aeabi_f2d>:
 8000490:	0042      	lsls	r2, r0, #1
 8000492:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000496:	ea4f 0131 	mov.w	r1, r1, rrx
 800049a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800049e:	bf1f      	itttt	ne
 80004a0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80004a4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80004a8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80004ac:	4770      	bxne	lr
 80004ae:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80004b2:	bf08      	it	eq
 80004b4:	4770      	bxeq	lr
 80004b6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80004ba:	bf04      	itt	eq
 80004bc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80004c0:	4770      	bxeq	lr
 80004c2:	b530      	push	{r4, r5, lr}
 80004c4:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80004d0:	e71c      	b.n	800030c <__adddf3+0x138>
 80004d2:	bf00      	nop

080004d4 <__aeabi_ul2d>:
 80004d4:	ea50 0201 	orrs.w	r2, r0, r1
 80004d8:	bf08      	it	eq
 80004da:	4770      	bxeq	lr
 80004dc:	b530      	push	{r4, r5, lr}
 80004de:	f04f 0500 	mov.w	r5, #0
 80004e2:	e00a      	b.n	80004fa <__aeabi_l2d+0x16>

080004e4 <__aeabi_l2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80004f2:	d502      	bpl.n	80004fa <__aeabi_l2d+0x16>
 80004f4:	4240      	negs	r0, r0
 80004f6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004fa:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004fe:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000502:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000506:	f43f aed8 	beq.w	80002ba <__adddf3+0xe6>
 800050a:	f04f 0203 	mov.w	r2, #3
 800050e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000512:	bf18      	it	ne
 8000514:	3203      	addne	r2, #3
 8000516:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800051a:	bf18      	it	ne
 800051c:	3203      	addne	r2, #3
 800051e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000522:	f1c2 0320 	rsb	r3, r2, #32
 8000526:	fa00 fc03 	lsl.w	ip, r0, r3
 800052a:	fa20 f002 	lsr.w	r0, r0, r2
 800052e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000532:	ea40 000e 	orr.w	r0, r0, lr
 8000536:	fa21 f102 	lsr.w	r1, r1, r2
 800053a:	4414      	add	r4, r2
 800053c:	e6bd      	b.n	80002ba <__adddf3+0xe6>
 800053e:	bf00      	nop

08000540 <__aeabi_dmul>:
 8000540:	b570      	push	{r4, r5, r6, lr}
 8000542:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000546:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800054a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800054e:	bf1d      	ittte	ne
 8000550:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000554:	ea94 0f0c 	teqne	r4, ip
 8000558:	ea95 0f0c 	teqne	r5, ip
 800055c:	f000 f8de 	bleq	800071c <__aeabi_dmul+0x1dc>
 8000560:	442c      	add	r4, r5
 8000562:	ea81 0603 	eor.w	r6, r1, r3
 8000566:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800056a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800056e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000572:	bf18      	it	ne
 8000574:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000578:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800057c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000580:	d038      	beq.n	80005f4 <__aeabi_dmul+0xb4>
 8000582:	fba0 ce02 	umull	ip, lr, r0, r2
 8000586:	f04f 0500 	mov.w	r5, #0
 800058a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800058e:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 8000592:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000596:	f04f 0600 	mov.w	r6, #0
 800059a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800059e:	f09c 0f00 	teq	ip, #0
 80005a2:	bf18      	it	ne
 80005a4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005a8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80005ac:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80005b0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80005b4:	d204      	bcs.n	80005c0 <__aeabi_dmul+0x80>
 80005b6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ba:	416d      	adcs	r5, r5
 80005bc:	eb46 0606 	adc.w	r6, r6, r6
 80005c0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005c4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005c8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005cc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005d0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005d4:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80005d8:	bf88      	it	hi
 80005da:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80005de:	d81e      	bhi.n	800061e <__aeabi_dmul+0xde>
 80005e0:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80005e4:	bf08      	it	eq
 80005e6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005ea:	f150 0000 	adcs.w	r0, r0, #0
 80005ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005f2:	bd70      	pop	{r4, r5, r6, pc}
 80005f4:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80005f8:	ea46 0101 	orr.w	r1, r6, r1
 80005fc:	ea40 0002 	orr.w	r0, r0, r2
 8000600:	ea81 0103 	eor.w	r1, r1, r3
 8000604:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000608:	bfc2      	ittt	gt
 800060a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800060e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000612:	bd70      	popgt	{r4, r5, r6, pc}
 8000614:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000618:	f04f 0e00 	mov.w	lr, #0
 800061c:	3c01      	subs	r4, #1
 800061e:	f300 80ab 	bgt.w	8000778 <__aeabi_dmul+0x238>
 8000622:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000626:	bfde      	ittt	le
 8000628:	2000      	movle	r0, #0
 800062a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800062e:	bd70      	pople	{r4, r5, r6, pc}
 8000630:	f1c4 0400 	rsb	r4, r4, #0
 8000634:	3c20      	subs	r4, #32
 8000636:	da35      	bge.n	80006a4 <__aeabi_dmul+0x164>
 8000638:	340c      	adds	r4, #12
 800063a:	dc1b      	bgt.n	8000674 <__aeabi_dmul+0x134>
 800063c:	f104 0414 	add.w	r4, r4, #20
 8000640:	f1c4 0520 	rsb	r5, r4, #32
 8000644:	fa00 f305 	lsl.w	r3, r0, r5
 8000648:	fa20 f004 	lsr.w	r0, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea40 0002 	orr.w	r0, r0, r2
 8000654:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000658:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000660:	fa21 f604 	lsr.w	r6, r1, r4
 8000664:	eb42 0106 	adc.w	r1, r2, r6
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f1c4 040c 	rsb	r4, r4, #12
 8000678:	f1c4 0520 	rsb	r5, r4, #32
 800067c:	fa00 f304 	lsl.w	r3, r0, r4
 8000680:	fa20 f005 	lsr.w	r0, r0, r5
 8000684:	fa01 f204 	lsl.w	r2, r1, r4
 8000688:	ea40 0002 	orr.w	r0, r0, r2
 800068c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000690:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000694:	f141 0100 	adc.w	r1, r1, #0
 8000698:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800069c:	bf08      	it	eq
 800069e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006a2:	bd70      	pop	{r4, r5, r6, pc}
 80006a4:	f1c4 0520 	rsb	r5, r4, #32
 80006a8:	fa00 f205 	lsl.w	r2, r0, r5
 80006ac:	ea4e 0e02 	orr.w	lr, lr, r2
 80006b0:	fa20 f304 	lsr.w	r3, r0, r4
 80006b4:	fa01 f205 	lsl.w	r2, r1, r5
 80006b8:	ea43 0302 	orr.w	r3, r3, r2
 80006bc:	fa21 f004 	lsr.w	r0, r1, r4
 80006c0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006c4:	fa21 f204 	lsr.w	r2, r1, r4
 80006c8:	ea20 0002 	bic.w	r0, r0, r2
 80006cc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006d0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006d4:	bf08      	it	eq
 80006d6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f094 0f00 	teq	r4, #0
 80006e0:	d10f      	bne.n	8000702 <__aeabi_dmul+0x1c2>
 80006e2:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80006e6:	0040      	lsls	r0, r0, #1
 80006e8:	eb41 0101 	adc.w	r1, r1, r1
 80006ec:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80006f0:	bf08      	it	eq
 80006f2:	3c01      	subeq	r4, #1
 80006f4:	d0f7      	beq.n	80006e6 <__aeabi_dmul+0x1a6>
 80006f6:	ea41 0106 	orr.w	r1, r1, r6
 80006fa:	f095 0f00 	teq	r5, #0
 80006fe:	bf18      	it	ne
 8000700:	4770      	bxne	lr
 8000702:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000706:	0052      	lsls	r2, r2, #1
 8000708:	eb43 0303 	adc.w	r3, r3, r3
 800070c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000710:	bf08      	it	eq
 8000712:	3d01      	subeq	r5, #1
 8000714:	d0f7      	beq.n	8000706 <__aeabi_dmul+0x1c6>
 8000716:	ea43 0306 	orr.w	r3, r3, r6
 800071a:	4770      	bx	lr
 800071c:	ea94 0f0c 	teq	r4, ip
 8000720:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000724:	bf18      	it	ne
 8000726:	ea95 0f0c 	teqne	r5, ip
 800072a:	d00c      	beq.n	8000746 <__aeabi_dmul+0x206>
 800072c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000730:	bf18      	it	ne
 8000732:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000736:	d1d1      	bne.n	80006dc <__aeabi_dmul+0x19c>
 8000738:	ea81 0103 	eor.w	r1, r1, r3
 800073c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000740:	f04f 0000 	mov.w	r0, #0
 8000744:	bd70      	pop	{r4, r5, r6, pc}
 8000746:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800074a:	bf06      	itte	eq
 800074c:	4610      	moveq	r0, r2
 800074e:	4619      	moveq	r1, r3
 8000750:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000754:	d019      	beq.n	800078a <__aeabi_dmul+0x24a>
 8000756:	ea94 0f0c 	teq	r4, ip
 800075a:	d102      	bne.n	8000762 <__aeabi_dmul+0x222>
 800075c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000760:	d113      	bne.n	800078a <__aeabi_dmul+0x24a>
 8000762:	ea95 0f0c 	teq	r5, ip
 8000766:	d105      	bne.n	8000774 <__aeabi_dmul+0x234>
 8000768:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800076c:	bf1c      	itt	ne
 800076e:	4610      	movne	r0, r2
 8000770:	4619      	movne	r1, r3
 8000772:	d10a      	bne.n	800078a <__aeabi_dmul+0x24a>
 8000774:	ea81 0103 	eor.w	r1, r1, r3
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000780:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000784:	f04f 0000 	mov.w	r0, #0
 8000788:	bd70      	pop	{r4, r5, r6, pc}
 800078a:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 800078e:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 8000792:	bd70      	pop	{r4, r5, r6, pc}

08000794 <__aeabi_ddiv>:
 8000794:	b570      	push	{r4, r5, r6, lr}
 8000796:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800079a:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800079e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007a2:	bf1d      	ittte	ne
 80007a4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007a8:	ea94 0f0c 	teqne	r4, ip
 80007ac:	ea95 0f0c 	teqne	r5, ip
 80007b0:	f000 f8a7 	bleq	8000902 <__aeabi_ddiv+0x16e>
 80007b4:	eba4 0405 	sub.w	r4, r4, r5
 80007b8:	ea81 0e03 	eor.w	lr, r1, r3
 80007bc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007c0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007c4:	f000 8088 	beq.w	80008d8 <__aeabi_ddiv+0x144>
 80007c8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007cc:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80007d0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007d4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007d8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007dc:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007e0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007e4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007e8:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80007ec:	429d      	cmp	r5, r3
 80007ee:	bf08      	it	eq
 80007f0:	4296      	cmpeq	r6, r2
 80007f2:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80007f6:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80007fa:	d202      	bcs.n	8000802 <__aeabi_ddiv+0x6e>
 80007fc:	085b      	lsrs	r3, r3, #1
 80007fe:	ea4f 0232 	mov.w	r2, r2, rrx
 8000802:	1ab6      	subs	r6, r6, r2
 8000804:	eb65 0503 	sbc.w	r5, r5, r3
 8000808:	085b      	lsrs	r3, r3, #1
 800080a:	ea4f 0232 	mov.w	r2, r2, rrx
 800080e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000812:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 000c 	orrcs.w	r0, r0, ip
 8000828:	085b      	lsrs	r3, r3, #1
 800082a:	ea4f 0232 	mov.w	r2, r2, rrx
 800082e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000832:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000836:	bf22      	ittt	cs
 8000838:	1ab6      	subcs	r6, r6, r2
 800083a:	4675      	movcs	r5, lr
 800083c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000840:	085b      	lsrs	r3, r3, #1
 8000842:	ea4f 0232 	mov.w	r2, r2, rrx
 8000846:	ebb6 0e02 	subs.w	lr, r6, r2
 800084a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800084e:	bf22      	ittt	cs
 8000850:	1ab6      	subcs	r6, r6, r2
 8000852:	4675      	movcs	r5, lr
 8000854:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000858:	085b      	lsrs	r3, r3, #1
 800085a:	ea4f 0232 	mov.w	r2, r2, rrx
 800085e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000862:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000866:	bf22      	ittt	cs
 8000868:	1ab6      	subcs	r6, r6, r2
 800086a:	4675      	movcs	r5, lr
 800086c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000870:	ea55 0e06 	orrs.w	lr, r5, r6
 8000874:	d018      	beq.n	80008a8 <__aeabi_ddiv+0x114>
 8000876:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800087a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800087e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000882:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000886:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800088a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800088e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000892:	d1c0      	bne.n	8000816 <__aeabi_ddiv+0x82>
 8000894:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000898:	d10b      	bne.n	80008b2 <__aeabi_ddiv+0x11e>
 800089a:	ea41 0100 	orr.w	r1, r1, r0
 800089e:	f04f 0000 	mov.w	r0, #0
 80008a2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80008a6:	e7b6      	b.n	8000816 <__aeabi_ddiv+0x82>
 80008a8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008ac:	bf04      	itt	eq
 80008ae:	4301      	orreq	r1, r0
 80008b0:	2000      	moveq	r0, #0
 80008b2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80008b6:	bf88      	it	hi
 80008b8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80008bc:	f63f aeaf 	bhi.w	800061e <__aeabi_dmul+0xde>
 80008c0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008c4:	bf04      	itt	eq
 80008c6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008ca:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008ce:	f150 0000 	adcs.w	r0, r0, #0
 80008d2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008d6:	bd70      	pop	{r4, r5, r6, pc}
 80008d8:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80008dc:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008e0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008e4:	bfc2      	ittt	gt
 80008e6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008ea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008ee:	bd70      	popgt	{r4, r5, r6, pc}
 80008f0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80008f4:	f04f 0e00 	mov.w	lr, #0
 80008f8:	3c01      	subs	r4, #1
 80008fa:	e690      	b.n	800061e <__aeabi_dmul+0xde>
 80008fc:	ea45 0e06 	orr.w	lr, r5, r6
 8000900:	e68d      	b.n	800061e <__aeabi_dmul+0xde>
 8000902:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000906:	ea94 0f0c 	teq	r4, ip
 800090a:	bf08      	it	eq
 800090c:	ea95 0f0c 	teqeq	r5, ip
 8000910:	f43f af3b 	beq.w	800078a <__aeabi_dmul+0x24a>
 8000914:	ea94 0f0c 	teq	r4, ip
 8000918:	d10a      	bne.n	8000930 <__aeabi_ddiv+0x19c>
 800091a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800091e:	f47f af34 	bne.w	800078a <__aeabi_dmul+0x24a>
 8000922:	ea95 0f0c 	teq	r5, ip
 8000926:	f47f af25 	bne.w	8000774 <__aeabi_dmul+0x234>
 800092a:	4610      	mov	r0, r2
 800092c:	4619      	mov	r1, r3
 800092e:	e72c      	b.n	800078a <__aeabi_dmul+0x24a>
 8000930:	ea95 0f0c 	teq	r5, ip
 8000934:	d106      	bne.n	8000944 <__aeabi_ddiv+0x1b0>
 8000936:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800093a:	f43f aefd 	beq.w	8000738 <__aeabi_dmul+0x1f8>
 800093e:	4610      	mov	r0, r2
 8000940:	4619      	mov	r1, r3
 8000942:	e722      	b.n	800078a <__aeabi_dmul+0x24a>
 8000944:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000948:	bf18      	it	ne
 800094a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800094e:	f47f aec5 	bne.w	80006dc <__aeabi_dmul+0x19c>
 8000952:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000956:	f47f af0d 	bne.w	8000774 <__aeabi_dmul+0x234>
 800095a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800095e:	f47f aeeb 	bne.w	8000738 <__aeabi_dmul+0x1f8>
 8000962:	e712      	b.n	800078a <__aeabi_dmul+0x24a>

08000964 <__gedf2>:
 8000964:	f04f 3cff 	mov.w	ip, #4294967295
 8000968:	e006      	b.n	8000978 <__cmpdf2+0x4>
 800096a:	bf00      	nop

0800096c <__ledf2>:
 800096c:	f04f 0c01 	mov.w	ip, #1
 8000970:	e002      	b.n	8000978 <__cmpdf2+0x4>
 8000972:	bf00      	nop

08000974 <__cmpdf2>:
 8000974:	f04f 0c01 	mov.w	ip, #1
 8000978:	f84d cd04 	str.w	ip, [sp, #-4]!
 800097c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000980:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000984:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000988:	bf18      	it	ne
 800098a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800098e:	d01b      	beq.n	80009c8 <__cmpdf2+0x54>
 8000990:	b001      	add	sp, #4
 8000992:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000996:	bf0c      	ite	eq
 8000998:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 800099c:	ea91 0f03 	teqne	r1, r3
 80009a0:	bf02      	ittt	eq
 80009a2:	ea90 0f02 	teqeq	r0, r2
 80009a6:	2000      	moveq	r0, #0
 80009a8:	4770      	bxeq	lr
 80009aa:	f110 0f00 	cmn.w	r0, #0
 80009ae:	ea91 0f03 	teq	r1, r3
 80009b2:	bf58      	it	pl
 80009b4:	4299      	cmppl	r1, r3
 80009b6:	bf08      	it	eq
 80009b8:	4290      	cmpeq	r0, r2
 80009ba:	bf2c      	ite	cs
 80009bc:	17d8      	asrcs	r0, r3, #31
 80009be:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009c2:	f040 0001 	orr.w	r0, r0, #1
 80009c6:	4770      	bx	lr
 80009c8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009cc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009d0:	d102      	bne.n	80009d8 <__cmpdf2+0x64>
 80009d2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009d6:	d107      	bne.n	80009e8 <__cmpdf2+0x74>
 80009d8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d1d6      	bne.n	8000990 <__cmpdf2+0x1c>
 80009e2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009e6:	d0d3      	beq.n	8000990 <__cmpdf2+0x1c>
 80009e8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009ec:	4770      	bx	lr
 80009ee:	bf00      	nop

080009f0 <__aeabi_cdrcmple>:
 80009f0:	4684      	mov	ip, r0
 80009f2:	4610      	mov	r0, r2
 80009f4:	4662      	mov	r2, ip
 80009f6:	468c      	mov	ip, r1
 80009f8:	4619      	mov	r1, r3
 80009fa:	4663      	mov	r3, ip
 80009fc:	e000      	b.n	8000a00 <__aeabi_cdcmpeq>
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdcmpeq>:
 8000a00:	b501      	push	{r0, lr}
 8000a02:	f7ff ffb7 	bl	8000974 <__cmpdf2>
 8000a06:	2800      	cmp	r0, #0
 8000a08:	bf48      	it	mi
 8000a0a:	f110 0f00 	cmnmi.w	r0, #0
 8000a0e:	bd01      	pop	{r0, pc}

08000a10 <__aeabi_dcmpeq>:
 8000a10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a14:	f7ff fff4 	bl	8000a00 <__aeabi_cdcmpeq>
 8000a18:	bf0c      	ite	eq
 8000a1a:	2001      	moveq	r0, #1
 8000a1c:	2000      	movne	r0, #0
 8000a1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a22:	bf00      	nop

08000a24 <__aeabi_dcmplt>:
 8000a24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a28:	f7ff ffea 	bl	8000a00 <__aeabi_cdcmpeq>
 8000a2c:	bf34      	ite	cc
 8000a2e:	2001      	movcc	r0, #1
 8000a30:	2000      	movcs	r0, #0
 8000a32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a36:	bf00      	nop

08000a38 <__aeabi_dcmple>:
 8000a38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a3c:	f7ff ffe0 	bl	8000a00 <__aeabi_cdcmpeq>
 8000a40:	bf94      	ite	ls
 8000a42:	2001      	movls	r0, #1
 8000a44:	2000      	movhi	r0, #0
 8000a46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a4a:	bf00      	nop

08000a4c <__aeabi_dcmpge>:
 8000a4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a50:	f7ff ffce 	bl	80009f0 <__aeabi_cdrcmple>
 8000a54:	bf94      	ite	ls
 8000a56:	2001      	movls	r0, #1
 8000a58:	2000      	movhi	r0, #0
 8000a5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5e:	bf00      	nop

08000a60 <__aeabi_dcmpgt>:
 8000a60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a64:	f7ff ffc4 	bl	80009f0 <__aeabi_cdrcmple>
 8000a68:	bf34      	ite	cc
 8000a6a:	2001      	movcc	r0, #1
 8000a6c:	2000      	movcs	r0, #0
 8000a6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a72:	bf00      	nop

08000a74 <__aeabi_dcmpun>:
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	d102      	bne.n	8000a84 <__aeabi_dcmpun+0x10>
 8000a7e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a82:	d10a      	bne.n	8000a9a <__aeabi_dcmpun+0x26>
 8000a84:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	d102      	bne.n	8000a94 <__aeabi_dcmpun+0x20>
 8000a8e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a92:	d102      	bne.n	8000a9a <__aeabi_dcmpun+0x26>
 8000a94:	f04f 0000 	mov.w	r0, #0
 8000a98:	4770      	bx	lr
 8000a9a:	f04f 0001 	mov.w	r0, #1
 8000a9e:	4770      	bx	lr

08000aa0 <__aeabi_d2uiz>:
 8000aa0:	004a      	lsls	r2, r1, #1
 8000aa2:	d211      	bcs.n	8000ac8 <__aeabi_d2uiz+0x28>
 8000aa4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000aa8:	d211      	bcs.n	8000ace <__aeabi_d2uiz+0x2e>
 8000aaa:	d50d      	bpl.n	8000ac8 <__aeabi_d2uiz+0x28>
 8000aac:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ab0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ab4:	d40e      	bmi.n	8000ad4 <__aeabi_d2uiz+0x34>
 8000ab6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aba:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000abe:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ac2:	fa23 f002 	lsr.w	r0, r3, r2
 8000ac6:	4770      	bx	lr
 8000ac8:	f04f 0000 	mov.w	r0, #0
 8000acc:	4770      	bx	lr
 8000ace:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ad2:	d102      	bne.n	8000ada <__aeabi_d2uiz+0x3a>
 8000ad4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ad8:	4770      	bx	lr
 8000ada:	f04f 0000 	mov.w	r0, #0
 8000ade:	4770      	bx	lr

08000ae0 <__aeabi_uldivmod>:
 8000ae0:	b953      	cbnz	r3, 8000af8 <__aeabi_uldivmod+0x18>
 8000ae2:	b94a      	cbnz	r2, 8000af8 <__aeabi_uldivmod+0x18>
 8000ae4:	2900      	cmp	r1, #0
 8000ae6:	bf08      	it	eq
 8000ae8:	2800      	cmpeq	r0, #0
 8000aea:	bf1c      	itt	ne
 8000aec:	f04f 31ff 	movne.w	r1, #4294967295
 8000af0:	f04f 30ff 	movne.w	r0, #4294967295
 8000af4:	f000 b988 	b.w	8000e08 <__aeabi_idiv0>
 8000af8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000afc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b00:	f000 f806 	bl	8000b10 <__udivmoddi4>
 8000b04:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b08:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b0c:	b004      	add	sp, #16
 8000b0e:	4770      	bx	lr

08000b10 <__udivmoddi4>:
 8000b10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b14:	9d08      	ldr	r5, [sp, #32]
 8000b16:	468e      	mov	lr, r1
 8000b18:	4604      	mov	r4, r0
 8000b1a:	4688      	mov	r8, r1
 8000b1c:	2b00      	cmp	r3, #0
 8000b1e:	d14a      	bne.n	8000bb6 <__udivmoddi4+0xa6>
 8000b20:	428a      	cmp	r2, r1
 8000b22:	4617      	mov	r7, r2
 8000b24:	d962      	bls.n	8000bec <__udivmoddi4+0xdc>
 8000b26:	fab2 f682 	clz	r6, r2
 8000b2a:	b14e      	cbz	r6, 8000b40 <__udivmoddi4+0x30>
 8000b2c:	f1c6 0320 	rsb	r3, r6, #32
 8000b30:	fa01 f806 	lsl.w	r8, r1, r6
 8000b34:	fa20 f303 	lsr.w	r3, r0, r3
 8000b38:	40b7      	lsls	r7, r6
 8000b3a:	ea43 0808 	orr.w	r8, r3, r8
 8000b3e:	40b4      	lsls	r4, r6
 8000b40:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000b44:	fa1f fc87 	uxth.w	ip, r7
 8000b48:	fbb8 f1fe 	udiv	r1, r8, lr
 8000b4c:	0c23      	lsrs	r3, r4, #16
 8000b4e:	fb0e 8811 	mls	r8, lr, r1, r8
 8000b52:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000b56:	fb01 f20c 	mul.w	r2, r1, ip
 8000b5a:	429a      	cmp	r2, r3
 8000b5c:	d909      	bls.n	8000b72 <__udivmoddi4+0x62>
 8000b5e:	18fb      	adds	r3, r7, r3
 8000b60:	f101 30ff 	add.w	r0, r1, #4294967295
 8000b64:	f080 80ea 	bcs.w	8000d3c <__udivmoddi4+0x22c>
 8000b68:	429a      	cmp	r2, r3
 8000b6a:	f240 80e7 	bls.w	8000d3c <__udivmoddi4+0x22c>
 8000b6e:	3902      	subs	r1, #2
 8000b70:	443b      	add	r3, r7
 8000b72:	1a9a      	subs	r2, r3, r2
 8000b74:	b2a3      	uxth	r3, r4
 8000b76:	fbb2 f0fe 	udiv	r0, r2, lr
 8000b7a:	fb0e 2210 	mls	r2, lr, r0, r2
 8000b7e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000b82:	fb00 fc0c 	mul.w	ip, r0, ip
 8000b86:	459c      	cmp	ip, r3
 8000b88:	d909      	bls.n	8000b9e <__udivmoddi4+0x8e>
 8000b8a:	18fb      	adds	r3, r7, r3
 8000b8c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b90:	f080 80d6 	bcs.w	8000d40 <__udivmoddi4+0x230>
 8000b94:	459c      	cmp	ip, r3
 8000b96:	f240 80d3 	bls.w	8000d40 <__udivmoddi4+0x230>
 8000b9a:	443b      	add	r3, r7
 8000b9c:	3802      	subs	r0, #2
 8000b9e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000ba2:	eba3 030c 	sub.w	r3, r3, ip
 8000ba6:	2100      	movs	r1, #0
 8000ba8:	b11d      	cbz	r5, 8000bb2 <__udivmoddi4+0xa2>
 8000baa:	40f3      	lsrs	r3, r6
 8000bac:	2200      	movs	r2, #0
 8000bae:	e9c5 3200 	strd	r3, r2, [r5]
 8000bb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bb6:	428b      	cmp	r3, r1
 8000bb8:	d905      	bls.n	8000bc6 <__udivmoddi4+0xb6>
 8000bba:	b10d      	cbz	r5, 8000bc0 <__udivmoddi4+0xb0>
 8000bbc:	e9c5 0100 	strd	r0, r1, [r5]
 8000bc0:	2100      	movs	r1, #0
 8000bc2:	4608      	mov	r0, r1
 8000bc4:	e7f5      	b.n	8000bb2 <__udivmoddi4+0xa2>
 8000bc6:	fab3 f183 	clz	r1, r3
 8000bca:	2900      	cmp	r1, #0
 8000bcc:	d146      	bne.n	8000c5c <__udivmoddi4+0x14c>
 8000bce:	4573      	cmp	r3, lr
 8000bd0:	d302      	bcc.n	8000bd8 <__udivmoddi4+0xc8>
 8000bd2:	4282      	cmp	r2, r0
 8000bd4:	f200 8105 	bhi.w	8000de2 <__udivmoddi4+0x2d2>
 8000bd8:	1a84      	subs	r4, r0, r2
 8000bda:	eb6e 0203 	sbc.w	r2, lr, r3
 8000bde:	2001      	movs	r0, #1
 8000be0:	4690      	mov	r8, r2
 8000be2:	2d00      	cmp	r5, #0
 8000be4:	d0e5      	beq.n	8000bb2 <__udivmoddi4+0xa2>
 8000be6:	e9c5 4800 	strd	r4, r8, [r5]
 8000bea:	e7e2      	b.n	8000bb2 <__udivmoddi4+0xa2>
 8000bec:	2a00      	cmp	r2, #0
 8000bee:	f000 8090 	beq.w	8000d12 <__udivmoddi4+0x202>
 8000bf2:	fab2 f682 	clz	r6, r2
 8000bf6:	2e00      	cmp	r6, #0
 8000bf8:	f040 80a4 	bne.w	8000d44 <__udivmoddi4+0x234>
 8000bfc:	1a8a      	subs	r2, r1, r2
 8000bfe:	0c03      	lsrs	r3, r0, #16
 8000c00:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000c04:	b280      	uxth	r0, r0
 8000c06:	b2bc      	uxth	r4, r7
 8000c08:	2101      	movs	r1, #1
 8000c0a:	fbb2 fcfe 	udiv	ip, r2, lr
 8000c0e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000c12:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000c16:	fb04 f20c 	mul.w	r2, r4, ip
 8000c1a:	429a      	cmp	r2, r3
 8000c1c:	d907      	bls.n	8000c2e <__udivmoddi4+0x11e>
 8000c1e:	18fb      	adds	r3, r7, r3
 8000c20:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000c24:	d202      	bcs.n	8000c2c <__udivmoddi4+0x11c>
 8000c26:	429a      	cmp	r2, r3
 8000c28:	f200 80e0 	bhi.w	8000dec <__udivmoddi4+0x2dc>
 8000c2c:	46c4      	mov	ip, r8
 8000c2e:	1a9b      	subs	r3, r3, r2
 8000c30:	fbb3 f2fe 	udiv	r2, r3, lr
 8000c34:	fb0e 3312 	mls	r3, lr, r2, r3
 8000c38:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000c3c:	fb02 f404 	mul.w	r4, r2, r4
 8000c40:	429c      	cmp	r4, r3
 8000c42:	d907      	bls.n	8000c54 <__udivmoddi4+0x144>
 8000c44:	18fb      	adds	r3, r7, r3
 8000c46:	f102 30ff 	add.w	r0, r2, #4294967295
 8000c4a:	d202      	bcs.n	8000c52 <__udivmoddi4+0x142>
 8000c4c:	429c      	cmp	r4, r3
 8000c4e:	f200 80ca 	bhi.w	8000de6 <__udivmoddi4+0x2d6>
 8000c52:	4602      	mov	r2, r0
 8000c54:	1b1b      	subs	r3, r3, r4
 8000c56:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000c5a:	e7a5      	b.n	8000ba8 <__udivmoddi4+0x98>
 8000c5c:	f1c1 0620 	rsb	r6, r1, #32
 8000c60:	408b      	lsls	r3, r1
 8000c62:	fa22 f706 	lsr.w	r7, r2, r6
 8000c66:	431f      	orrs	r7, r3
 8000c68:	fa0e f401 	lsl.w	r4, lr, r1
 8000c6c:	fa20 f306 	lsr.w	r3, r0, r6
 8000c70:	fa2e fe06 	lsr.w	lr, lr, r6
 8000c74:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000c78:	4323      	orrs	r3, r4
 8000c7a:	fa00 f801 	lsl.w	r8, r0, r1
 8000c7e:	fa1f fc87 	uxth.w	ip, r7
 8000c82:	fbbe f0f9 	udiv	r0, lr, r9
 8000c86:	0c1c      	lsrs	r4, r3, #16
 8000c88:	fb09 ee10 	mls	lr, r9, r0, lr
 8000c8c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000c90:	fb00 fe0c 	mul.w	lr, r0, ip
 8000c94:	45a6      	cmp	lr, r4
 8000c96:	fa02 f201 	lsl.w	r2, r2, r1
 8000c9a:	d909      	bls.n	8000cb0 <__udivmoddi4+0x1a0>
 8000c9c:	193c      	adds	r4, r7, r4
 8000c9e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000ca2:	f080 809c 	bcs.w	8000dde <__udivmoddi4+0x2ce>
 8000ca6:	45a6      	cmp	lr, r4
 8000ca8:	f240 8099 	bls.w	8000dde <__udivmoddi4+0x2ce>
 8000cac:	3802      	subs	r0, #2
 8000cae:	443c      	add	r4, r7
 8000cb0:	eba4 040e 	sub.w	r4, r4, lr
 8000cb4:	fa1f fe83 	uxth.w	lr, r3
 8000cb8:	fbb4 f3f9 	udiv	r3, r4, r9
 8000cbc:	fb09 4413 	mls	r4, r9, r3, r4
 8000cc0:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000cc4:	fb03 fc0c 	mul.w	ip, r3, ip
 8000cc8:	45a4      	cmp	ip, r4
 8000cca:	d908      	bls.n	8000cde <__udivmoddi4+0x1ce>
 8000ccc:	193c      	adds	r4, r7, r4
 8000cce:	f103 3eff 	add.w	lr, r3, #4294967295
 8000cd2:	f080 8082 	bcs.w	8000dda <__udivmoddi4+0x2ca>
 8000cd6:	45a4      	cmp	ip, r4
 8000cd8:	d97f      	bls.n	8000dda <__udivmoddi4+0x2ca>
 8000cda:	3b02      	subs	r3, #2
 8000cdc:	443c      	add	r4, r7
 8000cde:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000ce2:	eba4 040c 	sub.w	r4, r4, ip
 8000ce6:	fba0 ec02 	umull	lr, ip, r0, r2
 8000cea:	4564      	cmp	r4, ip
 8000cec:	4673      	mov	r3, lr
 8000cee:	46e1      	mov	r9, ip
 8000cf0:	d362      	bcc.n	8000db8 <__udivmoddi4+0x2a8>
 8000cf2:	d05f      	beq.n	8000db4 <__udivmoddi4+0x2a4>
 8000cf4:	b15d      	cbz	r5, 8000d0e <__udivmoddi4+0x1fe>
 8000cf6:	ebb8 0203 	subs.w	r2, r8, r3
 8000cfa:	eb64 0409 	sbc.w	r4, r4, r9
 8000cfe:	fa04 f606 	lsl.w	r6, r4, r6
 8000d02:	fa22 f301 	lsr.w	r3, r2, r1
 8000d06:	431e      	orrs	r6, r3
 8000d08:	40cc      	lsrs	r4, r1
 8000d0a:	e9c5 6400 	strd	r6, r4, [r5]
 8000d0e:	2100      	movs	r1, #0
 8000d10:	e74f      	b.n	8000bb2 <__udivmoddi4+0xa2>
 8000d12:	fbb1 fcf2 	udiv	ip, r1, r2
 8000d16:	0c01      	lsrs	r1, r0, #16
 8000d18:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000d1c:	b280      	uxth	r0, r0
 8000d1e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000d22:	463b      	mov	r3, r7
 8000d24:	4638      	mov	r0, r7
 8000d26:	463c      	mov	r4, r7
 8000d28:	46b8      	mov	r8, r7
 8000d2a:	46be      	mov	lr, r7
 8000d2c:	2620      	movs	r6, #32
 8000d2e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000d32:	eba2 0208 	sub.w	r2, r2, r8
 8000d36:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000d3a:	e766      	b.n	8000c0a <__udivmoddi4+0xfa>
 8000d3c:	4601      	mov	r1, r0
 8000d3e:	e718      	b.n	8000b72 <__udivmoddi4+0x62>
 8000d40:	4610      	mov	r0, r2
 8000d42:	e72c      	b.n	8000b9e <__udivmoddi4+0x8e>
 8000d44:	f1c6 0220 	rsb	r2, r6, #32
 8000d48:	fa2e f302 	lsr.w	r3, lr, r2
 8000d4c:	40b7      	lsls	r7, r6
 8000d4e:	40b1      	lsls	r1, r6
 8000d50:	fa20 f202 	lsr.w	r2, r0, r2
 8000d54:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d58:	430a      	orrs	r2, r1
 8000d5a:	fbb3 f8fe 	udiv	r8, r3, lr
 8000d5e:	b2bc      	uxth	r4, r7
 8000d60:	fb0e 3318 	mls	r3, lr, r8, r3
 8000d64:	0c11      	lsrs	r1, r2, #16
 8000d66:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d6a:	fb08 f904 	mul.w	r9, r8, r4
 8000d6e:	40b0      	lsls	r0, r6
 8000d70:	4589      	cmp	r9, r1
 8000d72:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000d76:	b280      	uxth	r0, r0
 8000d78:	d93e      	bls.n	8000df8 <__udivmoddi4+0x2e8>
 8000d7a:	1879      	adds	r1, r7, r1
 8000d7c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000d80:	d201      	bcs.n	8000d86 <__udivmoddi4+0x276>
 8000d82:	4589      	cmp	r9, r1
 8000d84:	d81f      	bhi.n	8000dc6 <__udivmoddi4+0x2b6>
 8000d86:	eba1 0109 	sub.w	r1, r1, r9
 8000d8a:	fbb1 f9fe 	udiv	r9, r1, lr
 8000d8e:	fb09 f804 	mul.w	r8, r9, r4
 8000d92:	fb0e 1119 	mls	r1, lr, r9, r1
 8000d96:	b292      	uxth	r2, r2
 8000d98:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000d9c:	4542      	cmp	r2, r8
 8000d9e:	d229      	bcs.n	8000df4 <__udivmoddi4+0x2e4>
 8000da0:	18ba      	adds	r2, r7, r2
 8000da2:	f109 31ff 	add.w	r1, r9, #4294967295
 8000da6:	d2c4      	bcs.n	8000d32 <__udivmoddi4+0x222>
 8000da8:	4542      	cmp	r2, r8
 8000daa:	d2c2      	bcs.n	8000d32 <__udivmoddi4+0x222>
 8000dac:	f1a9 0102 	sub.w	r1, r9, #2
 8000db0:	443a      	add	r2, r7
 8000db2:	e7be      	b.n	8000d32 <__udivmoddi4+0x222>
 8000db4:	45f0      	cmp	r8, lr
 8000db6:	d29d      	bcs.n	8000cf4 <__udivmoddi4+0x1e4>
 8000db8:	ebbe 0302 	subs.w	r3, lr, r2
 8000dbc:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000dc0:	3801      	subs	r0, #1
 8000dc2:	46e1      	mov	r9, ip
 8000dc4:	e796      	b.n	8000cf4 <__udivmoddi4+0x1e4>
 8000dc6:	eba7 0909 	sub.w	r9, r7, r9
 8000dca:	4449      	add	r1, r9
 8000dcc:	f1a8 0c02 	sub.w	ip, r8, #2
 8000dd0:	fbb1 f9fe 	udiv	r9, r1, lr
 8000dd4:	fb09 f804 	mul.w	r8, r9, r4
 8000dd8:	e7db      	b.n	8000d92 <__udivmoddi4+0x282>
 8000dda:	4673      	mov	r3, lr
 8000ddc:	e77f      	b.n	8000cde <__udivmoddi4+0x1ce>
 8000dde:	4650      	mov	r0, sl
 8000de0:	e766      	b.n	8000cb0 <__udivmoddi4+0x1a0>
 8000de2:	4608      	mov	r0, r1
 8000de4:	e6fd      	b.n	8000be2 <__udivmoddi4+0xd2>
 8000de6:	443b      	add	r3, r7
 8000de8:	3a02      	subs	r2, #2
 8000dea:	e733      	b.n	8000c54 <__udivmoddi4+0x144>
 8000dec:	f1ac 0c02 	sub.w	ip, ip, #2
 8000df0:	443b      	add	r3, r7
 8000df2:	e71c      	b.n	8000c2e <__udivmoddi4+0x11e>
 8000df4:	4649      	mov	r1, r9
 8000df6:	e79c      	b.n	8000d32 <__udivmoddi4+0x222>
 8000df8:	eba1 0109 	sub.w	r1, r1, r9
 8000dfc:	46c4      	mov	ip, r8
 8000dfe:	fbb1 f9fe 	udiv	r9, r1, lr
 8000e02:	fb09 f804 	mul.w	r8, r9, r4
 8000e06:	e7c4      	b.n	8000d92 <__udivmoddi4+0x282>

08000e08 <__aeabi_idiv0>:
 8000e08:	4770      	bx	lr
 8000e0a:	bf00      	nop

08000e0c <Encoder_Init>:
Encoder Encoder_EL = {
  .Pulses_per_revolution = 611,
  .Safe_start_value = 30
};

void Encoder_Init(Encoder *Encoder_xx) { // Запуск моторов должен быть обязательно до начала инициализации Encoder. Движение в сторону минусовых углов
 8000e0c:	b580      	push	{r7, lr}
 8000e0e:	b088      	sub	sp, #32
 8000e10:	af00      	add	r7, sp, #0
 8000e12:	6078      	str	r0, [r7, #4]
  unsigned int New_value = 0;
 8000e14:	2300      	movs	r3, #0
 8000e16:	61fb      	str	r3, [r7, #28]
  unsigned int Old_value = 0;
 8000e18:	2300      	movs	r3, #0
 8000e1a:	617b      	str	r3, [r7, #20]
  Motor *Motor_xx = (Encoder_xx == &Encoder_AZ) ? &Motor_AZ : &Motor_EL;
 8000e1c:	687b      	ldr	r3, [r7, #4]
 8000e1e:	4a1f      	ldr	r2, [pc, #124]	@ (8000e9c <Encoder_Init+0x90>)
 8000e20:	4293      	cmp	r3, r2
 8000e22:	d101      	bne.n	8000e28 <Encoder_Init+0x1c>
 8000e24:	4b1e      	ldr	r3, [pc, #120]	@ (8000ea0 <Encoder_Init+0x94>)
 8000e26:	e000      	b.n	8000e2a <Encoder_Init+0x1e>
 8000e28:	4b1e      	ldr	r3, [pc, #120]	@ (8000ea4 <Encoder_Init+0x98>)
 8000e2a:	613b      	str	r3, [r7, #16]

  Motor_DirRot(Motor_xx, GPIO_PIN_RESET);
 8000e2c:	2100      	movs	r1, #0
 8000e2e:	6938      	ldr	r0, [r7, #16]
 8000e30:	f000 fc16 	bl	8001660 <Motor_DirRot>
  Motor_Start(Motor_xx);
 8000e34:	6938      	ldr	r0, [r7, #16]
 8000e36:	f000 fcb5 	bl	80017a4 <Motor_Start>
  do {
    Old_value = New_value;
 8000e3a:	69fb      	ldr	r3, [r7, #28]
 8000e3c:	617b      	str	r3, [r7, #20]

    unsigned int tickstart = HAL_GetTick();
 8000e3e:	f001 fca3 	bl	8002788 <HAL_GetTick>
 8000e42:	60f8      	str	r0, [r7, #12]
    unsigned int wait = 1000;
 8000e44:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000e48:	61bb      	str	r3, [r7, #24]
    if (wait < HAL_MAX_DELAY) wait += (uint32_t)(uwTickFreq); /* Add a freq to guarantee minimum wait */
 8000e4a:	69bb      	ldr	r3, [r7, #24]
 8000e4c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000e50:	d005      	beq.n	8000e5e <Encoder_Init+0x52>
 8000e52:	4b15      	ldr	r3, [pc, #84]	@ (8000ea8 <Encoder_Init+0x9c>)
 8000e54:	781b      	ldrb	r3, [r3, #0]
 8000e56:	461a      	mov	r2, r3
 8000e58:	69bb      	ldr	r3, [r7, #24]
 8000e5a:	4413      	add	r3, r2
 8000e5c:	61bb      	str	r3, [r7, #24]
    while((HAL_GetTick() - tickstart) < wait) {}
 8000e5e:	bf00      	nop
 8000e60:	f001 fc92 	bl	8002788 <HAL_GetTick>
 8000e64:	4602      	mov	r2, r0
 8000e66:	68fb      	ldr	r3, [r7, #12]
 8000e68:	1ad3      	subs	r3, r2, r3
 8000e6a:	69ba      	ldr	r2, [r7, #24]
 8000e6c:	429a      	cmp	r2, r3
 8000e6e:	d8f7      	bhi.n	8000e60 <Encoder_Init+0x54>

    New_value = Encoder_xx->Timer_number->Instance->CNT;
 8000e70:	687b      	ldr	r3, [r7, #4]
 8000e72:	681b      	ldr	r3, [r3, #0]
 8000e74:	681b      	ldr	r3, [r3, #0]
 8000e76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000e78:	61fb      	str	r3, [r7, #28]
  } while (New_value != Old_value);
 8000e7a:	69fa      	ldr	r2, [r7, #28]
 8000e7c:	697b      	ldr	r3, [r7, #20]
 8000e7e:	429a      	cmp	r2, r3
 8000e80:	d1db      	bne.n	8000e3a <Encoder_Init+0x2e>

  Encoder_xx->Timer_number->Instance->CNT = Encoder_xx->Safe_start_value;
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	88da      	ldrh	r2, [r3, #6]
 8000e86:	687b      	ldr	r3, [r7, #4]
 8000e88:	681b      	ldr	r3, [r3, #0]
 8000e8a:	681b      	ldr	r3, [r3, #0]
 8000e8c:	625a      	str	r2, [r3, #36]	@ 0x24

  Motor_Stop(Motor_xx);
 8000e8e:	6938      	ldr	r0, [r7, #16]
 8000e90:	f000 fca9 	bl	80017e6 <Motor_Stop>
};
 8000e94:	bf00      	nop
 8000e96:	3720      	adds	r7, #32
 8000e98:	46bd      	mov	sp, r7
 8000e9a:	bd80      	pop	{r7, pc}
 8000e9c:	20000000 	.word	0x20000000
 8000ea0:	20000028 	.word	0x20000028
 8000ea4:	2000005c 	.word	0x2000005c
 8000ea8:	200000b0 	.word	0x200000b0

08000eac <Encoder_GetAngular>:


void Encoder_GetAngular(Encoder *Encoder_xx) {
 8000eac:	b480      	push	{r7}
 8000eae:	b085      	sub	sp, #20
 8000eb0:	af00      	add	r7, sp, #0
 8000eb2:	6078      	str	r0, [r7, #4]
  unsigned short Encoder_value = Encoder_xx->Timer_number->Instance->CNT / 4;
 8000eb4:	687b      	ldr	r3, [r7, #4]
 8000eb6:	681b      	ldr	r3, [r3, #0]
 8000eb8:	681b      	ldr	r3, [r3, #0]
 8000eba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000ebc:	089b      	lsrs	r3, r3, #2
 8000ebe:	81fb      	strh	r3, [r7, #14]
  (Encoder_xx == &Encoder_AZ) ?
    (Systema_AZ.Actual_angular = Systema_AZ.Minimum + (float)(Encoder_value - Encoder_xx->Safe_start_value) * (Systema_AZ.Maximum - Systema_AZ.Minimum) / Encoder_xx->Pulses_per_revolution) :
 8000ec0:	687b      	ldr	r3, [r7, #4]
 8000ec2:	4a27      	ldr	r2, [pc, #156]	@ (8000f60 <Encoder_GetAngular+0xb4>)
 8000ec4:	4293      	cmp	r3, r2
 8000ec6:	d122      	bne.n	8000f0e <Encoder_GetAngular+0x62>
 8000ec8:	4b26      	ldr	r3, [pc, #152]	@ (8000f64 <Encoder_GetAngular+0xb8>)
 8000eca:	ed93 7a02 	vldr	s14, [r3, #8]
 8000ece:	89fb      	ldrh	r3, [r7, #14]
 8000ed0:	687a      	ldr	r2, [r7, #4]
 8000ed2:	88d2      	ldrh	r2, [r2, #6]
 8000ed4:	1a9b      	subs	r3, r3, r2
 8000ed6:	ee07 3a90 	vmov	s15, r3
 8000eda:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000ede:	4b21      	ldr	r3, [pc, #132]	@ (8000f64 <Encoder_GetAngular+0xb8>)
 8000ee0:	ed93 6a01 	vldr	s12, [r3, #4]
 8000ee4:	4b1f      	ldr	r3, [pc, #124]	@ (8000f64 <Encoder_GetAngular+0xb8>)
 8000ee6:	edd3 7a02 	vldr	s15, [r3, #8]
 8000eea:	ee76 7a67 	vsub.f32	s15, s12, s15
 8000eee:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8000ef2:	687b      	ldr	r3, [r7, #4]
 8000ef4:	889b      	ldrh	r3, [r3, #4]
 8000ef6:	ee07 3a90 	vmov	s15, r3
 8000efa:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000efe:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8000f02:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f06:	4b17      	ldr	r3, [pc, #92]	@ (8000f64 <Encoder_GetAngular+0xb8>)
 8000f08:	edc3 7a00 	vstr	s15, [r3]
    (Systema_EL.Actual_angular = Systema_EL.Minimum + (float)(Encoder_value - Encoder_xx->Safe_start_value) * (Systema_EL.Maximum - Systema_EL.Minimum) / Encoder_xx->Pulses_per_revolution);
};
 8000f0c:	e021      	b.n	8000f52 <Encoder_GetAngular+0xa6>
    (Systema_EL.Actual_angular = Systema_EL.Minimum + (float)(Encoder_value - Encoder_xx->Safe_start_value) * (Systema_EL.Maximum - Systema_EL.Minimum) / Encoder_xx->Pulses_per_revolution);
 8000f0e:	4b16      	ldr	r3, [pc, #88]	@ (8000f68 <Encoder_GetAngular+0xbc>)
 8000f10:	ed93 7a02 	vldr	s14, [r3, #8]
 8000f14:	89fb      	ldrh	r3, [r7, #14]
 8000f16:	687a      	ldr	r2, [r7, #4]
 8000f18:	88d2      	ldrh	r2, [r2, #6]
 8000f1a:	1a9b      	subs	r3, r3, r2
 8000f1c:	ee07 3a90 	vmov	s15, r3
 8000f20:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000f24:	4b10      	ldr	r3, [pc, #64]	@ (8000f68 <Encoder_GetAngular+0xbc>)
 8000f26:	ed93 6a01 	vldr	s12, [r3, #4]
 8000f2a:	4b0f      	ldr	r3, [pc, #60]	@ (8000f68 <Encoder_GetAngular+0xbc>)
 8000f2c:	edd3 7a02 	vldr	s15, [r3, #8]
 8000f30:	ee76 7a67 	vsub.f32	s15, s12, s15
 8000f34:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	889b      	ldrh	r3, [r3, #4]
 8000f3c:	ee07 3a90 	vmov	s15, r3
 8000f40:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000f44:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8000f48:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f4c:	4b06      	ldr	r3, [pc, #24]	@ (8000f68 <Encoder_GetAngular+0xbc>)
 8000f4e:	edc3 7a00 	vstr	s15, [r3]
};
 8000f52:	bf00      	nop
 8000f54:	3714      	adds	r7, #20
 8000f56:	46bd      	mov	sp, r7
 8000f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f5c:	4770      	bx	lr
 8000f5e:	bf00      	nop
 8000f60:	20000000 	.word	0x20000000
 8000f64:	20000090 	.word	0x20000090
 8000f68:	2000009c 	.word	0x2000009c

08000f6c <Mode_Manual>:
#include "Operating_mode.h"

Mode_Automatic_data Automatic_data_AZ = {.Requirement_stop = 'N'};
Mode_Automatic_data Automatic_data_EL = {.Requirement_stop = 'N'};

void Mode_Manual(Motor *Motor_xx) {
 8000f6c:	b580      	push	{r7, lr}
 8000f6e:	b082      	sub	sp, #8
 8000f70:	af00      	add	r7, sp, #0
 8000f72:	6078      	str	r0, [r7, #4]
  if (Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) {
 8000f74:	687b      	ldr	r3, [r7, #4]
 8000f76:	4a33      	ldr	r2, [pc, #204]	@ (8001044 <Mode_Manual+0xd8>)
 8000f78:	4293      	cmp	r3, r2
 8000f7a:	d10b      	bne.n	8000f94 <Mode_Manual+0x28>
 8000f7c:	4b32      	ldr	r3, [pc, #200]	@ (8001048 <Mode_Manual+0xdc>)
 8000f7e:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8000f82:	eef5 7a40 	vcmp.f32	s15, #0.0
 8000f86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f8a:	bf14      	ite	ne
 8000f8c:	2301      	movne	r3, #1
 8000f8e:	2300      	moveq	r3, #0
 8000f90:	b2db      	uxtb	r3, r3
 8000f92:	e00a      	b.n	8000faa <Mode_Manual+0x3e>
 8000f94:	4b2c      	ldr	r3, [pc, #176]	@ (8001048 <Mode_Manual+0xdc>)
 8000f96:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8000f9a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8000f9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fa2:	bf14      	ite	ne
 8000fa4:	2301      	movne	r3, #1
 8000fa6:	2300      	moveq	r3, #0
 8000fa8:	b2db      	uxtb	r3, r3
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	d043      	beq.n	8001036 <Mode_Manual+0xca>
    if (Motor_xx->Status.Functioning) {
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8000fb4:	2b00      	cmp	r3, #0
 8000fb6:	d01b      	beq.n	8000ff0 <Mode_Manual+0x84>
      Motor_xx->Status.Tik[0] = TIM5->CNT;
 8000fb8:	4b24      	ldr	r3, [pc, #144]	@ (800104c <Mode_Manual+0xe0>)
 8000fba:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000fbc:	687b      	ldr	r3, [r7, #4]
 8000fbe:	62da      	str	r2, [r3, #44]	@ 0x2c
      if (abs(Motor_xx->Status.Tik[0] - Motor_xx->Status.Tik[1]) / TIM5->PSC > 2000) {
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000fc8:	1ad3      	subs	r3, r2, r3
 8000fca:	2b00      	cmp	r3, #0
 8000fcc:	bfb8      	it	lt
 8000fce:	425b      	neglt	r3, r3
 8000fd0:	461a      	mov	r2, r3
 8000fd2:	4b1e      	ldr	r3, [pc, #120]	@ (800104c <Mode_Manual+0xe0>)
 8000fd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000fd6:	fbb2 f3f3 	udiv	r3, r2, r3
 8000fda:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 8000fde:	d92d      	bls.n	800103c <Mode_Manual+0xd0>
    	Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000fe4:	687b      	ldr	r3, [r7, #4]
 8000fe6:	631a      	str	r2, [r3, #48]	@ 0x30
        Motor_UpFrequency(Motor_xx);
 8000fe8:	6878      	ldr	r0, [r7, #4]
 8000fea:	f000 fbb7 	bl	800175c <Motor_UpFrequency>
    } else {
      Motor_DirRot(Motor_xx, (Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) > 0 ? Hight : Low);
      Motor_Start(Motor_xx);
    };
  } else {Motor_Stop(Motor_xx);};
};
 8000fee:	e025      	b.n	800103c <Mode_Manual+0xd0>
      Motor_DirRot(Motor_xx, (Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) > 0 ? Hight : Low);
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	4a14      	ldr	r2, [pc, #80]	@ (8001044 <Mode_Manual+0xd8>)
 8000ff4:	4293      	cmp	r3, r2
 8000ff6:	d10b      	bne.n	8001010 <Mode_Manual+0xa4>
 8000ff8:	4b13      	ldr	r3, [pc, #76]	@ (8001048 <Mode_Manual+0xdc>)
 8000ffa:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8000ffe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001002:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001006:	bfcc      	ite	gt
 8001008:	2301      	movgt	r3, #1
 800100a:	2300      	movle	r3, #0
 800100c:	b2db      	uxtb	r3, r3
 800100e:	e00a      	b.n	8001026 <Mode_Manual+0xba>
 8001010:	4b0d      	ldr	r3, [pc, #52]	@ (8001048 <Mode_Manual+0xdc>)
 8001012:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8001016:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800101a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800101e:	bfcc      	ite	gt
 8001020:	2301      	movgt	r3, #1
 8001022:	2300      	movle	r3, #0
 8001024:	b2db      	uxtb	r3, r3
 8001026:	4619      	mov	r1, r3
 8001028:	6878      	ldr	r0, [r7, #4]
 800102a:	f000 fb19 	bl	8001660 <Motor_DirRot>
      Motor_Start(Motor_xx);
 800102e:	6878      	ldr	r0, [r7, #4]
 8001030:	f000 fbb8 	bl	80017a4 <Motor_Start>
};
 8001034:	e002      	b.n	800103c <Mode_Manual+0xd0>
  } else {Motor_Stop(Motor_xx);};
 8001036:	6878      	ldr	r0, [r7, #4]
 8001038:	f000 fbd5 	bl	80017e6 <Motor_Stop>
};
 800103c:	bf00      	nop
 800103e:	3708      	adds	r7, #8
 8001040:	46bd      	mov	sp, r7
 8001042:	bd80      	pop	{r7, pc}
 8001044:	20000028 	.word	0x20000028
 8001048:	20000120 	.word	0x20000120
 800104c:	40000c00 	.word	0x40000c00

08001050 <Mode_Semi_automatic>:

void Mode_Semi_automatic(Motor *Motor_xx) {
 8001050:	b580      	push	{r7, lr}
 8001052:	b082      	sub	sp, #8
 8001054:	af00      	add	r7, sp, #0
 8001056:	6078      	str	r0, [r7, #4]
  if (Motor_xx == &Motor_AZ ? abs(RP_message.Azimuth - Systema_AZ.Actual_angular) != 0 : abs(RP_message.Elevation - Systema_EL.Actual_angular) != 0) {
 8001058:	687b      	ldr	r3, [r7, #4]
 800105a:	4a3e      	ldr	r2, [pc, #248]	@ (8001154 <Mode_Semi_automatic+0x104>)
 800105c:	4293      	cmp	r3, r2
 800105e:	d111      	bne.n	8001084 <Mode_Semi_automatic+0x34>
 8001060:	4b3d      	ldr	r3, [pc, #244]	@ (8001158 <Mode_Semi_automatic+0x108>)
 8001062:	ed93 7a0a 	vldr	s14, [r3, #40]	@ 0x28
 8001066:	4b3d      	ldr	r3, [pc, #244]	@ (800115c <Mode_Semi_automatic+0x10c>)
 8001068:	edd3 7a00 	vldr	s15, [r3]
 800106c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001070:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001074:	ee17 3a90 	vmov	r3, s15
 8001078:	2b00      	cmp	r3, #0
 800107a:	bf14      	ite	ne
 800107c:	2301      	movne	r3, #1
 800107e:	2300      	moveq	r3, #0
 8001080:	b2db      	uxtb	r3, r3
 8001082:	e010      	b.n	80010a6 <Mode_Semi_automatic+0x56>
 8001084:	4b34      	ldr	r3, [pc, #208]	@ (8001158 <Mode_Semi_automatic+0x108>)
 8001086:	ed93 7a0b 	vldr	s14, [r3, #44]	@ 0x2c
 800108a:	4b35      	ldr	r3, [pc, #212]	@ (8001160 <Mode_Semi_automatic+0x110>)
 800108c:	edd3 7a00 	vldr	s15, [r3]
 8001090:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001094:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001098:	ee17 3a90 	vmov	r3, s15
 800109c:	2b00      	cmp	r3, #0
 800109e:	bf14      	ite	ne
 80010a0:	2301      	movne	r3, #1
 80010a2:	2300      	moveq	r3, #0
 80010a4:	b2db      	uxtb	r3, r3
 80010a6:	2b00      	cmp	r3, #0
 80010a8:	d04d      	beq.n	8001146 <Mode_Semi_automatic+0xf6>
    if (Motor_xx->Status.Functioning) {
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d01b      	beq.n	80010ec <Mode_Semi_automatic+0x9c>
      Motor_xx->Status.Tik[0] = TIM5->CNT;
 80010b4:	4b2b      	ldr	r3, [pc, #172]	@ (8001164 <Mode_Semi_automatic+0x114>)
 80010b6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	62da      	str	r2, [r3, #44]	@ 0x2c
      if (abs(Motor_xx->Status.Tik[0] - Motor_xx->Status.Tik[1]) / TIM5->PSC > 2000) {
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010c4:	1ad3      	subs	r3, r2, r3
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	bfb8      	it	lt
 80010ca:	425b      	neglt	r3, r3
 80010cc:	461a      	mov	r2, r3
 80010ce:	4b25      	ldr	r3, [pc, #148]	@ (8001164 <Mode_Semi_automatic+0x114>)
 80010d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80010d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80010d6:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 80010da:	d937      	bls.n	800114c <Mode_Semi_automatic+0xfc>
    	Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80010e0:	687b      	ldr	r3, [r7, #4]
 80010e2:	631a      	str	r2, [r3, #48]	@ 0x30
        Motor_UpFrequency(Motor_xx);
 80010e4:	6878      	ldr	r0, [r7, #4]
 80010e6:	f000 fb39 	bl	800175c <Motor_UpFrequency>
    } else {
      Motor_DirRot(Motor_xx, (Motor_xx == &Motor_AZ ? RP_message.Azimuth - Systema_AZ.Actual_angular : RP_message.Elevation - Systema_EL.Actual_angular) > 0 ? Hight : Low);
      Motor_Start(Motor_xx);
    };
  } else {Motor_Stop(Motor_xx);};
};
 80010ea:	e02f      	b.n	800114c <Mode_Semi_automatic+0xfc>
      Motor_DirRot(Motor_xx, (Motor_xx == &Motor_AZ ? RP_message.Azimuth - Systema_AZ.Actual_angular : RP_message.Elevation - Systema_EL.Actual_angular) > 0 ? Hight : Low);
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	4a19      	ldr	r2, [pc, #100]	@ (8001154 <Mode_Semi_automatic+0x104>)
 80010f0:	4293      	cmp	r3, r2
 80010f2:	d110      	bne.n	8001116 <Mode_Semi_automatic+0xc6>
 80010f4:	4b18      	ldr	r3, [pc, #96]	@ (8001158 <Mode_Semi_automatic+0x108>)
 80010f6:	ed93 7a0a 	vldr	s14, [r3, #40]	@ 0x28
 80010fa:	4b18      	ldr	r3, [pc, #96]	@ (800115c <Mode_Semi_automatic+0x10c>)
 80010fc:	edd3 7a00 	vldr	s15, [r3]
 8001100:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001104:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001108:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800110c:	bfcc      	ite	gt
 800110e:	2301      	movgt	r3, #1
 8001110:	2300      	movle	r3, #0
 8001112:	b2db      	uxtb	r3, r3
 8001114:	e00f      	b.n	8001136 <Mode_Semi_automatic+0xe6>
 8001116:	4b10      	ldr	r3, [pc, #64]	@ (8001158 <Mode_Semi_automatic+0x108>)
 8001118:	ed93 7a0b 	vldr	s14, [r3, #44]	@ 0x2c
 800111c:	4b10      	ldr	r3, [pc, #64]	@ (8001160 <Mode_Semi_automatic+0x110>)
 800111e:	edd3 7a00 	vldr	s15, [r3]
 8001122:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001126:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800112a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800112e:	bfcc      	ite	gt
 8001130:	2301      	movgt	r3, #1
 8001132:	2300      	movle	r3, #0
 8001134:	b2db      	uxtb	r3, r3
 8001136:	4619      	mov	r1, r3
 8001138:	6878      	ldr	r0, [r7, #4]
 800113a:	f000 fa91 	bl	8001660 <Motor_DirRot>
      Motor_Start(Motor_xx);
 800113e:	6878      	ldr	r0, [r7, #4]
 8001140:	f000 fb30 	bl	80017a4 <Motor_Start>
};
 8001144:	e002      	b.n	800114c <Mode_Semi_automatic+0xfc>
  } else {Motor_Stop(Motor_xx);};
 8001146:	6878      	ldr	r0, [r7, #4]
 8001148:	f000 fb4d 	bl	80017e6 <Motor_Stop>
};
 800114c:	bf00      	nop
 800114e:	3708      	adds	r7, #8
 8001150:	46bd      	mov	sp, r7
 8001152:	bd80      	pop	{r7, pc}
 8001154:	20000028 	.word	0x20000028
 8001158:	20000120 	.word	0x20000120
 800115c:	20000090 	.word	0x20000090
 8001160:	2000009c 	.word	0x2000009c
 8001164:	40000c00 	.word	0x40000c00

08001168 <Mode_Moving_away_from_borders>:

void Mode_Moving_away_from_borders(Motor *Motor_xx) {
 8001168:	b580      	push	{r7, lr}
 800116a:	b084      	sub	sp, #16
 800116c:	af00      	add	r7, sp, #0
 800116e:	6078      	str	r0, [r7, #4]
  Systems *Systema_xx = Motor_xx == &Motor_AZ ? &Systema_AZ : &Systema_EL;
 8001170:	687b      	ldr	r3, [r7, #4]
 8001172:	4a1d      	ldr	r2, [pc, #116]	@ (80011e8 <Mode_Moving_away_from_borders+0x80>)
 8001174:	4293      	cmp	r3, r2
 8001176:	d101      	bne.n	800117c <Mode_Moving_away_from_borders+0x14>
 8001178:	4b1c      	ldr	r3, [pc, #112]	@ (80011ec <Mode_Moving_away_from_borders+0x84>)
 800117a:	e000      	b.n	800117e <Mode_Moving_away_from_borders+0x16>
 800117c:	4b1c      	ldr	r3, [pc, #112]	@ (80011f0 <Mode_Moving_away_from_borders+0x88>)
 800117e:	60fb      	str	r3, [r7, #12]

  if (System_CheckLimit(Systema_xx)) {
 8001180:	68f8      	ldr	r0, [r7, #12]
 8001182:	f000 fb51 	bl	8001828 <System_CheckLimit>
 8001186:	4603      	mov	r3, r0
 8001188:	2b00      	cmp	r3, #0
 800118a:	d017      	beq.n	80011bc <Mode_Moving_away_from_borders+0x54>
	Motor_xx->Status.Tik[0] = TIM5->CNT;
 800118c:	4b19      	ldr	r3, [pc, #100]	@ (80011f4 <Mode_Moving_away_from_borders+0x8c>)
 800118e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001190:	687b      	ldr	r3, [r7, #4]
 8001192:	62da      	str	r2, [r3, #44]	@ 0x2c
    if (abs(Motor_xx->Status.Tik[0] - Motor_xx->Status.Tik[1]) > 20000) {
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800119c:	1ad3      	subs	r3, r2, r3
 800119e:	2b00      	cmp	r3, #0
 80011a0:	bfb8      	it	lt
 80011a2:	425b      	neglt	r3, r3
 80011a4:	f644 6220 	movw	r2, #20000	@ 0x4e20
 80011a8:	4293      	cmp	r3, r2
 80011aa:	dd19      	ble.n	80011e0 <Mode_Moving_away_from_borders+0x78>
      Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 80011ac:	687b      	ldr	r3, [r7, #4]
 80011ae:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80011b0:	687b      	ldr	r3, [r7, #4]
 80011b2:	631a      	str	r2, [r3, #48]	@ 0x30
      Motor_Stop(Motor_xx);
 80011b4:	6878      	ldr	r0, [r7, #4]
 80011b6:	f000 fb16 	bl	80017e6 <Motor_Stop>
    }
  } else {
    Motor_DirRot(Motor_xx, Systema_xx->Actual_angular > 0 ? Hight : Low);
    Motor_Start(Motor_xx);
  };
};
 80011ba:	e011      	b.n	80011e0 <Mode_Moving_away_from_borders+0x78>
    Motor_DirRot(Motor_xx, Systema_xx->Actual_angular > 0 ? Hight : Low);
 80011bc:	68fb      	ldr	r3, [r7, #12]
 80011be:	edd3 7a00 	vldr	s15, [r3]
 80011c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80011c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80011ca:	bfcc      	ite	gt
 80011cc:	2301      	movgt	r3, #1
 80011ce:	2300      	movle	r3, #0
 80011d0:	b2db      	uxtb	r3, r3
 80011d2:	4619      	mov	r1, r3
 80011d4:	6878      	ldr	r0, [r7, #4]
 80011d6:	f000 fa43 	bl	8001660 <Motor_DirRot>
    Motor_Start(Motor_xx);
 80011da:	6878      	ldr	r0, [r7, #4]
 80011dc:	f000 fae2 	bl	80017a4 <Motor_Start>
};
 80011e0:	bf00      	nop
 80011e2:	3710      	adds	r7, #16
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bd80      	pop	{r7, pc}
 80011e8:	20000028 	.word	0x20000028
 80011ec:	20000090 	.word	0x20000090
 80011f0:	2000009c 	.word	0x2000009c
 80011f4:	40000c00 	.word	0x40000c00

080011f8 <Mode_Automatic>:

void Mode_Automatic(Motor *Motor_xx) {
 80011f8:	b5b0      	push	{r4, r5, r7, lr}
 80011fa:	b086      	sub	sp, #24
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	6078      	str	r0, [r7, #4]
  Mode_Automatic_data *Automatic_data_xx = Motor_xx == &Motor_AZ ? &Automatic_data_AZ : &Automatic_data_EL;
 8001200:	687b      	ldr	r3, [r7, #4]
 8001202:	4a9b      	ldr	r2, [pc, #620]	@ (8001470 <Mode_Automatic+0x278>)
 8001204:	4293      	cmp	r3, r2
 8001206:	d101      	bne.n	800120c <Mode_Automatic+0x14>
 8001208:	4b9a      	ldr	r3, [pc, #616]	@ (8001474 <Mode_Automatic+0x27c>)
 800120a:	e000      	b.n	800120e <Mode_Automatic+0x16>
 800120c:	4b9a      	ldr	r3, [pc, #616]	@ (8001478 <Mode_Automatic+0x280>)
 800120e:	617b      	str	r3, [r7, #20]

  if (Motor_xx->Status.Functioning == 0) {  // && Приказ от Raspberry на остановку == 'N'
 8001210:	687b      	ldr	r3, [r7, #4]
 8001212:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8001216:	2b00      	cmp	r3, #0
 8001218:	d12d      	bne.n	8001276 <Mode_Automatic+0x7e>
    Motor_xx->Status.Direction_of_rotation = (Motor_xx == &Motor_AZ ? (RP_message.Azimuth > 0 ? Low : Hight) : (RP_message.Elevation > 0 ? Hight : Low)) ;
 800121a:	687b      	ldr	r3, [r7, #4]
 800121c:	4a94      	ldr	r2, [pc, #592]	@ (8001470 <Mode_Automatic+0x278>)
 800121e:	4293      	cmp	r3, r2
 8001220:	d10f      	bne.n	8001242 <Mode_Automatic+0x4a>
 8001222:	4b96      	ldr	r3, [pc, #600]	@ (800147c <Mode_Automatic+0x284>)
 8001224:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8001228:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800122c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001230:	bfcc      	ite	gt
 8001232:	2301      	movgt	r3, #1
 8001234:	2300      	movle	r3, #0
 8001236:	b2db      	uxtb	r3, r3
 8001238:	f083 0301 	eor.w	r3, r3, #1
 800123c:	b2db      	uxtb	r3, r3
 800123e:	b2da      	uxtb	r2, r3
 8001240:	e00b      	b.n	800125a <Mode_Automatic+0x62>
 8001242:	4b8e      	ldr	r3, [pc, #568]	@ (800147c <Mode_Automatic+0x284>)
 8001244:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8001248:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800124c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001250:	bfcc      	ite	gt
 8001252:	2301      	movgt	r3, #1
 8001254:	2300      	movle	r3, #0
 8001256:	b2db      	uxtb	r3, r3
 8001258:	461a      	mov	r2, r3
 800125a:	687b      	ldr	r3, [r7, #4]
 800125c:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
    Motor_DirRot(Motor_xx, Motor_xx->Status.Direction_of_rotation);
 8001260:	687b      	ldr	r3, [r7, #4]
 8001262:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 8001266:	4619      	mov	r1, r3
 8001268:	6878      	ldr	r0, [r7, #4]
 800126a:	f000 f9f9 	bl	8001660 <Motor_DirRot>
    Motor_Start(Motor_xx);
 800126e:	6878      	ldr	r0, [r7, #4]
 8001270:	f000 fa98 	bl	80017a4 <Motor_Start>
	      }
	    };
	  };
	};
  };
};
 8001274:	e13d      	b.n	80014f2 <Mode_Automatic+0x2fa>
	  Automatic_data_xx->Buffer_differens_angular[1] = Automatic_data_xx->Buffer_differens_angular[0];
 8001276:	697b      	ldr	r3, [r7, #20]
 8001278:	681a      	ldr	r2, [r3, #0]
 800127a:	697b      	ldr	r3, [r7, #20]
 800127c:	605a      	str	r2, [r3, #4]
	  Automatic_data_xx->Buffer_differens_angular[0] = Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation;
 800127e:	687b      	ldr	r3, [r7, #4]
 8001280:	4a7b      	ldr	r2, [pc, #492]	@ (8001470 <Mode_Automatic+0x278>)
 8001282:	4293      	cmp	r3, r2
 8001284:	d102      	bne.n	800128c <Mode_Automatic+0x94>
 8001286:	4b7d      	ldr	r3, [pc, #500]	@ (800147c <Mode_Automatic+0x284>)
 8001288:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800128a:	e001      	b.n	8001290 <Mode_Automatic+0x98>
 800128c:	4b7b      	ldr	r3, [pc, #492]	@ (800147c <Mode_Automatic+0x284>)
 800128e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001290:	697a      	ldr	r2, [r7, #20]
 8001292:	6013      	str	r3, [r2, #0]
	    100 * sqrt(Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) +
 8001294:	687b      	ldr	r3, [r7, #4]
 8001296:	4a76      	ldr	r2, [pc, #472]	@ (8001470 <Mode_Automatic+0x278>)
 8001298:	4293      	cmp	r3, r2
 800129a:	d102      	bne.n	80012a2 <Mode_Automatic+0xaa>
 800129c:	4b77      	ldr	r3, [pc, #476]	@ (800147c <Mode_Automatic+0x284>)
 800129e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80012a0:	e001      	b.n	80012a6 <Mode_Automatic+0xae>
 80012a2:	4b76      	ldr	r3, [pc, #472]	@ (800147c <Mode_Automatic+0x284>)
 80012a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80012a6:	4618      	mov	r0, r3
 80012a8:	f7ff f8f2 	bl	8000490 <__aeabi_f2d>
 80012ac:	4602      	mov	r2, r0
 80012ae:	460b      	mov	r3, r1
 80012b0:	ec43 2b10 	vmov	d0, r2, r3
 80012b4:	f004 f9e6 	bl	8005684 <sqrt>
 80012b8:	ec51 0b10 	vmov	r0, r1, d0
 80012bc:	f04f 0200 	mov.w	r2, #0
 80012c0:	4b6f      	ldr	r3, [pc, #444]	@ (8001480 <Mode_Automatic+0x288>)
 80012c2:	f7ff f93d 	bl	8000540 <__aeabi_dmul>
 80012c6:	4602      	mov	r2, r0
 80012c8:	460b      	mov	r3, r1
 80012ca:	4614      	mov	r4, r2
 80012cc:	461d      	mov	r5, r3
		140 * (Automatic_data_xx->Buffer_differens_angular[0] - Automatic_data_xx->Buffer_differens_angular[1]);
 80012ce:	697b      	ldr	r3, [r7, #20]
 80012d0:	ed93 7a00 	vldr	s14, [r3]
 80012d4:	697b      	ldr	r3, [r7, #20]
 80012d6:	edd3 7a01 	vldr	s15, [r3, #4]
 80012da:	ee77 7a67 	vsub.f32	s15, s14, s15
 80012de:	ed9f 7a69 	vldr	s14, [pc, #420]	@ 8001484 <Mode_Automatic+0x28c>
 80012e2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012e6:	ee17 0a90 	vmov	r0, s15
 80012ea:	f7ff f8d1 	bl	8000490 <__aeabi_f2d>
 80012ee:	4602      	mov	r2, r0
 80012f0:	460b      	mov	r3, r1
	    100 * sqrt(Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) +
 80012f2:	4620      	mov	r0, r4
 80012f4:	4629      	mov	r1, r5
 80012f6:	f7fe ff6d 	bl	80001d4 <__adddf3>
 80012fa:	4602      	mov	r2, r0
 80012fc:	460b      	mov	r3, r1
	  unsigned int Increment_frequensy =
 80012fe:	4610      	mov	r0, r2
 8001300:	4619      	mov	r1, r3
 8001302:	f7ff fbcd 	bl	8000aa0 <__aeabi_d2uiz>
 8001306:	4603      	mov	r3, r0
 8001308:	613b      	str	r3, [r7, #16]
	  if (Motor_xx == &Motor_AZ ? RP_message.Azimuth : RP_message.Elevation) {
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	4a58      	ldr	r2, [pc, #352]	@ (8001470 <Mode_Automatic+0x278>)
 800130e:	4293      	cmp	r3, r2
 8001310:	d10b      	bne.n	800132a <Mode_Automatic+0x132>
 8001312:	4b5a      	ldr	r3, [pc, #360]	@ (800147c <Mode_Automatic+0x284>)
 8001314:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8001318:	eef5 7a40 	vcmp.f32	s15, #0.0
 800131c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001320:	bf14      	ite	ne
 8001322:	2301      	movne	r3, #1
 8001324:	2300      	moveq	r3, #0
 8001326:	b2db      	uxtb	r3, r3
 8001328:	e00a      	b.n	8001340 <Mode_Automatic+0x148>
 800132a:	4b54      	ldr	r3, [pc, #336]	@ (800147c <Mode_Automatic+0x284>)
 800132c:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8001330:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001334:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001338:	bf14      	ite	ne
 800133a:	2301      	movne	r3, #1
 800133c:	2300      	moveq	r3, #0
 800133e:	b2db      	uxtb	r3, r3
 8001340:	2b00      	cmp	r3, #0
 8001342:	d064      	beq.n	800140e <Mode_Automatic+0x216>
	    if (Motor_xx->Status.Direction_of_rotation) {
 8001344:	687b      	ldr	r3, [r7, #4]
 8001346:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800134a:	2b00      	cmp	r3, #0
 800134c:	d033      	beq.n	80013b6 <Mode_Automatic+0x1be>
	      if (Motor_xx->Status.Frequency - Increment_frequensy < Motor_xx->Parameters.Frequency.Minimum) {
 800134e:	687b      	ldr	r3, [r7, #4]
 8001350:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001352:	693b      	ldr	r3, [r7, #16]
 8001354:	1ad2      	subs	r2, r2, r3
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	69db      	ldr	r3, [r3, #28]
 800135a:	429a      	cmp	r2, r3
 800135c:	d211      	bcs.n	8001382 <Mode_Automatic+0x18a>
	        Motor_Stop(Motor_xx);
 800135e:	6878      	ldr	r0, [r7, #4]
 8001360:	f000 fa41 	bl	80017e6 <Motor_Stop>
	        Motor_xx->Status.Direction_of_rotation = Low;
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	2200      	movs	r2, #0
 8001368:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
	        Motor_DirRot(Motor_xx, Motor_xx->Status.Direction_of_rotation);
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 8001372:	4619      	mov	r1, r3
 8001374:	6878      	ldr	r0, [r7, #4]
 8001376:	f000 f973 	bl	8001660 <Motor_DirRot>
	        Motor_Start(Motor_xx);
 800137a:	6878      	ldr	r0, [r7, #4]
 800137c:	f000 fa12 	bl	80017a4 <Motor_Start>
};
 8001380:	e0b7      	b.n	80014f2 <Mode_Automatic+0x2fa>
	    	Frequensy = Motor_xx->Status.Frequency - Increment_frequensy;
 8001382:	687b      	ldr	r3, [r7, #4]
 8001384:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001386:	693b      	ldr	r3, [r7, #16]
 8001388:	1ad3      	subs	r3, r2, r3
 800138a:	60fb      	str	r3, [r7, #12]
	    	Motor_xx->Status.Tik[0] = TIM5->CNT;
 800138c:	4b3e      	ldr	r3, [pc, #248]	@ (8001488 <Mode_Automatic+0x290>)
 800138e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001390:	687b      	ldr	r3, [r7, #4]
 8001392:	62da      	str	r2, [r3, #44]	@ 0x2c
	    	Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 8001394:	687b      	ldr	r3, [r7, #4]
 8001396:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001398:	687b      	ldr	r3, [r7, #4]
 800139a:	631a      	str	r2, [r3, #48]	@ 0x30
	    	Motor_SetFrequency(Motor_xx, Frequensy);
 800139c:	68f9      	ldr	r1, [r7, #12]
 800139e:	6878      	ldr	r0, [r7, #4]
 80013a0:	f000 f97a 	bl	8001698 <Motor_SetFrequency>
	    	HAL_TIM_PWM_Start(Motor_xx->Parameters.Timer.Number_timer, Motor_xx->Parameters.Timer.Channel);
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	691a      	ldr	r2, [r3, #16]
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	695b      	ldr	r3, [r3, #20]
 80013ac:	4619      	mov	r1, r3
 80013ae:	4610      	mov	r0, r2
 80013b0:	f002 fa5c 	bl	800386c <HAL_TIM_PWM_Start>
};
 80013b4:	e09d      	b.n	80014f2 <Mode_Automatic+0x2fa>
	      Frequensy = Motor_xx->Status.Frequency + Increment_frequensy;
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80013ba:	693a      	ldr	r2, [r7, #16]
 80013bc:	4413      	add	r3, r2
 80013be:	60fb      	str	r3, [r7, #12]
	      Motor_xx->Status.Tik[0] = TIM5->CNT;
 80013c0:	4b31      	ldr	r3, [pc, #196]	@ (8001488 <Mode_Automatic+0x290>)
 80013c2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	62da      	str	r2, [r3, #44]	@ 0x2c
	      if (abs(Motor_xx->Status.Tik[0] - Motor_xx->Status.Tik[1]) / TIM5->PSC > 5000) {
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80013cc:	687b      	ldr	r3, [r7, #4]
 80013ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013d0:	1ad3      	subs	r3, r2, r3
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	bfb8      	it	lt
 80013d6:	425b      	neglt	r3, r3
 80013d8:	461a      	mov	r2, r3
 80013da:	4b2b      	ldr	r3, [pc, #172]	@ (8001488 <Mode_Automatic+0x290>)
 80013dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80013de:	fbb2 f3f3 	udiv	r3, r2, r3
 80013e2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80013e6:	4293      	cmp	r3, r2
 80013e8:	f240 8083 	bls.w	80014f2 <Mode_Automatic+0x2fa>
	        Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80013f0:	687b      	ldr	r3, [r7, #4]
 80013f2:	631a      	str	r2, [r3, #48]	@ 0x30
	        Motor_SetFrequency(Motor_xx, Frequensy);
 80013f4:	68f9      	ldr	r1, [r7, #12]
 80013f6:	6878      	ldr	r0, [r7, #4]
 80013f8:	f000 f94e 	bl	8001698 <Motor_SetFrequency>
	        HAL_TIM_PWM_Start(Motor_xx->Parameters.Timer.Number_timer, Motor_xx->Parameters.Timer.Channel);
 80013fc:	687b      	ldr	r3, [r7, #4]
 80013fe:	691a      	ldr	r2, [r3, #16]
 8001400:	687b      	ldr	r3, [r7, #4]
 8001402:	695b      	ldr	r3, [r3, #20]
 8001404:	4619      	mov	r1, r3
 8001406:	4610      	mov	r0, r2
 8001408:	f002 fa30 	bl	800386c <HAL_TIM_PWM_Start>
};
 800140c:	e071      	b.n	80014f2 <Mode_Automatic+0x2fa>
	    if (Motor_xx->Status.Direction_of_rotation) {
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 8001414:	2b00      	cmp	r3, #0
 8001416:	d039      	beq.n	800148c <Mode_Automatic+0x294>
	      Frequensy = Motor_xx->Status.Frequency + Increment_frequensy;
 8001418:	687b      	ldr	r3, [r7, #4]
 800141a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800141c:	693a      	ldr	r2, [r7, #16]
 800141e:	4413      	add	r3, r2
 8001420:	60fb      	str	r3, [r7, #12]
	      Motor_xx->Status.Tik[0] = TIM5->CNT;
 8001422:	4b19      	ldr	r3, [pc, #100]	@ (8001488 <Mode_Automatic+0x290>)
 8001424:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001426:	687b      	ldr	r3, [r7, #4]
 8001428:	62da      	str	r2, [r3, #44]	@ 0x2c
	      if (abs(Motor_xx->Status.Tik[0] - Motor_xx->Status.Tik[1]) / TIM5->PSC > 5000) {
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800142e:	687b      	ldr	r3, [r7, #4]
 8001430:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001432:	1ad3      	subs	r3, r2, r3
 8001434:	2b00      	cmp	r3, #0
 8001436:	bfb8      	it	lt
 8001438:	425b      	neglt	r3, r3
 800143a:	461a      	mov	r2, r3
 800143c:	4b12      	ldr	r3, [pc, #72]	@ (8001488 <Mode_Automatic+0x290>)
 800143e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001440:	fbb2 f3f3 	udiv	r3, r2, r3
 8001444:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001448:	4293      	cmp	r3, r2
 800144a:	d952      	bls.n	80014f2 <Mode_Automatic+0x2fa>
	        Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 800144c:	687b      	ldr	r3, [r7, #4]
 800144e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	631a      	str	r2, [r3, #48]	@ 0x30
	        Motor_SetFrequency(Motor_xx, Frequensy);
 8001454:	68f9      	ldr	r1, [r7, #12]
 8001456:	6878      	ldr	r0, [r7, #4]
 8001458:	f000 f91e 	bl	8001698 <Motor_SetFrequency>
	        HAL_TIM_PWM_Start(Motor_xx->Parameters.Timer.Number_timer, Motor_xx->Parameters.Timer.Channel);
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	691a      	ldr	r2, [r3, #16]
 8001460:	687b      	ldr	r3, [r7, #4]
 8001462:	695b      	ldr	r3, [r3, #20]
 8001464:	4619      	mov	r1, r3
 8001466:	4610      	mov	r0, r2
 8001468:	f002 fa00 	bl	800386c <HAL_TIM_PWM_Start>
};
 800146c:	e041      	b.n	80014f2 <Mode_Automatic+0x2fa>
 800146e:	bf00      	nop
 8001470:	20000028 	.word	0x20000028
 8001474:	20000010 	.word	0x20000010
 8001478:	2000001c 	.word	0x2000001c
 800147c:	20000120 	.word	0x20000120
 8001480:	40590000 	.word	0x40590000
 8001484:	430c0000 	.word	0x430c0000
 8001488:	40000c00 	.word	0x40000c00
	      if (Motor_xx->Status.Frequency - Increment_frequensy < Motor_xx->Parameters.Frequency.Minimum) {
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001490:	693b      	ldr	r3, [r7, #16]
 8001492:	1ad2      	subs	r2, r2, r3
 8001494:	687b      	ldr	r3, [r7, #4]
 8001496:	69db      	ldr	r3, [r3, #28]
 8001498:	429a      	cmp	r2, r3
 800149a:	d211      	bcs.n	80014c0 <Mode_Automatic+0x2c8>
	        Motor_Stop(Motor_xx);
 800149c:	6878      	ldr	r0, [r7, #4]
 800149e:	f000 f9a2 	bl	80017e6 <Motor_Stop>
	        Motor_xx->Status.Direction_of_rotation = Hight;
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	2201      	movs	r2, #1
 80014a6:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
	        Motor_DirRot(Motor_xx, Motor_xx->Status.Direction_of_rotation);
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 80014b0:	4619      	mov	r1, r3
 80014b2:	6878      	ldr	r0, [r7, #4]
 80014b4:	f000 f8d4 	bl	8001660 <Motor_DirRot>
	        Motor_Start(Motor_xx);
 80014b8:	6878      	ldr	r0, [r7, #4]
 80014ba:	f000 f973 	bl	80017a4 <Motor_Start>
};
 80014be:	e018      	b.n	80014f2 <Mode_Automatic+0x2fa>
	        Frequensy = Motor_xx->Status.Frequency - Increment_frequensy;
 80014c0:	687b      	ldr	r3, [r7, #4]
 80014c2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80014c4:	693b      	ldr	r3, [r7, #16]
 80014c6:	1ad3      	subs	r3, r2, r3
 80014c8:	60fb      	str	r3, [r7, #12]
	        Motor_xx->Status.Tik[0] = TIM5->CNT;
 80014ca:	4b0c      	ldr	r3, [pc, #48]	@ (80014fc <Mode_Automatic+0x304>)
 80014cc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	62da      	str	r2, [r3, #44]	@ 0x2c
	        Motor_xx->Status.Tik[1] = Motor_xx->Status.Tik[0];
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	631a      	str	r2, [r3, #48]	@ 0x30
	        Motor_SetFrequency(Motor_xx, Frequensy);
 80014da:	68f9      	ldr	r1, [r7, #12]
 80014dc:	6878      	ldr	r0, [r7, #4]
 80014de:	f000 f8db 	bl	8001698 <Motor_SetFrequency>
	        HAL_TIM_PWM_Start(Motor_xx->Parameters.Timer.Number_timer, Motor_xx->Parameters.Timer.Channel);
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	691a      	ldr	r2, [r3, #16]
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	695b      	ldr	r3, [r3, #20]
 80014ea:	4619      	mov	r1, r3
 80014ec:	4610      	mov	r0, r2
 80014ee:	f002 f9bd 	bl	800386c <HAL_TIM_PWM_Start>
};
 80014f2:	bf00      	nop
 80014f4:	3718      	adds	r7, #24
 80014f6:	46bd      	mov	sp, r7
 80014f8:	bdb0      	pop	{r4, r5, r7, pc}
 80014fa:	bf00      	nop
 80014fc:	40000c00 	.word	0x40000c00

08001500 <Raspberry_DatPpars>:

#include "Raspberry.h"

Raspberry RP_message = {0};

void Raspberry_DatPpars(unsigned char Rx_data[21]) {
 8001500:	b480      	push	{r7}
 8001502:	b083      	sub	sp, #12
 8001504:	af00      	add	r7, sp, #0
 8001506:	6078      	str	r0, [r7, #4]
  RP_message.Azimuth =
    (Rx_data[3]  - '0') * 100.0f +
 8001508:	687b      	ldr	r3, [r7, #4]
 800150a:	3303      	adds	r3, #3
 800150c:	781b      	ldrb	r3, [r3, #0]
 800150e:	3b30      	subs	r3, #48	@ 0x30
 8001510:	ee07 3a90 	vmov	s15, r3
 8001514:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001518:	ed9f 7a40 	vldr	s14, [pc, #256]	@ 800161c <Raspberry_DatPpars+0x11c>
 800151c:	ee27 7a87 	vmul.f32	s14, s15, s14
    (Rx_data[4]  - '0') * 10.0f +
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	3304      	adds	r3, #4
 8001524:	781b      	ldrb	r3, [r3, #0]
 8001526:	3b30      	subs	r3, #48	@ 0x30
 8001528:	ee07 3a90 	vmov	s15, r3
 800152c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001530:	eef2 6a04 	vmov.f32	s13, #36	@ 0x41200000  10.0
 8001534:	ee67 7aa6 	vmul.f32	s15, s15, s13
    (Rx_data[3]  - '0') * 100.0f +
 8001538:	ee37 7a27 	vadd.f32	s14, s14, s15
    (Rx_data[5]  - '0') +
 800153c:	687b      	ldr	r3, [r7, #4]
 800153e:	3305      	adds	r3, #5
 8001540:	781b      	ldrb	r3, [r3, #0]
 8001542:	3b30      	subs	r3, #48	@ 0x30
    (Rx_data[4]  - '0') * 10.0f +
 8001544:	ee07 3a90 	vmov	s15, r3
 8001548:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800154c:	ee37 7a27 	vadd.f32	s14, s14, s15
    (Rx_data[6]  - '0') * 0.1f;
 8001550:	687b      	ldr	r3, [r7, #4]
 8001552:	3306      	adds	r3, #6
 8001554:	781b      	ldrb	r3, [r3, #0]
 8001556:	3b30      	subs	r3, #48	@ 0x30
 8001558:	ee07 3a90 	vmov	s15, r3
 800155c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001560:	eddf 6a2f 	vldr	s13, [pc, #188]	@ 8001620 <Raspberry_DatPpars+0x120>
 8001564:	ee67 7aa6 	vmul.f32	s15, s15, s13
    (Rx_data[5]  - '0') +
 8001568:	ee77 7a27 	vadd.f32	s15, s14, s15
  RP_message.Azimuth =
 800156c:	4b2d      	ldr	r3, [pc, #180]	@ (8001624 <Raspberry_DatPpars+0x124>)
 800156e:	edc3 7a0a 	vstr	s15, [r3, #40]	@ 0x28
  if (Rx_data[2] == '-') RP_message.Azimuth = -RP_message.Azimuth;
 8001572:	687b      	ldr	r3, [r7, #4]
 8001574:	3302      	adds	r3, #2
 8001576:	781b      	ldrb	r3, [r3, #0]
 8001578:	2b2d      	cmp	r3, #45	@ 0x2d
 800157a:	d107      	bne.n	800158c <Raspberry_DatPpars+0x8c>
 800157c:	4b29      	ldr	r3, [pc, #164]	@ (8001624 <Raspberry_DatPpars+0x124>)
 800157e:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8001582:	eef1 7a67 	vneg.f32	s15, s15
 8001586:	4b27      	ldr	r3, [pc, #156]	@ (8001624 <Raspberry_DatPpars+0x124>)
 8001588:	edc3 7a0a 	vstr	s15, [r3, #40]	@ 0x28

  RP_message.Elevation =
    (Rx_data[10] - '0') * 100.0f +
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	330a      	adds	r3, #10
 8001590:	781b      	ldrb	r3, [r3, #0]
 8001592:	3b30      	subs	r3, #48	@ 0x30
 8001594:	ee07 3a90 	vmov	s15, r3
 8001598:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800159c:	ed9f 7a1f 	vldr	s14, [pc, #124]	@ 800161c <Raspberry_DatPpars+0x11c>
 80015a0:	ee27 7a87 	vmul.f32	s14, s15, s14
    (Rx_data[11] - '0') * 10.0f +
 80015a4:	687b      	ldr	r3, [r7, #4]
 80015a6:	330b      	adds	r3, #11
 80015a8:	781b      	ldrb	r3, [r3, #0]
 80015aa:	3b30      	subs	r3, #48	@ 0x30
 80015ac:	ee07 3a90 	vmov	s15, r3
 80015b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015b4:	eef2 6a04 	vmov.f32	s13, #36	@ 0x41200000  10.0
 80015b8:	ee67 7aa6 	vmul.f32	s15, s15, s13
    (Rx_data[10] - '0') * 100.0f +
 80015bc:	ee37 7a27 	vadd.f32	s14, s14, s15
    (Rx_data[12] - '0') +
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	330c      	adds	r3, #12
 80015c4:	781b      	ldrb	r3, [r3, #0]
 80015c6:	3b30      	subs	r3, #48	@ 0x30
    (Rx_data[11] - '0') * 10.0f +
 80015c8:	ee07 3a90 	vmov	s15, r3
 80015cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015d0:	ee37 7a27 	vadd.f32	s14, s14, s15
    (Rx_data[13] - '0') * 0.1f;
 80015d4:	687b      	ldr	r3, [r7, #4]
 80015d6:	330d      	adds	r3, #13
 80015d8:	781b      	ldrb	r3, [r3, #0]
 80015da:	3b30      	subs	r3, #48	@ 0x30
 80015dc:	ee07 3a90 	vmov	s15, r3
 80015e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015e4:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8001620 <Raspberry_DatPpars+0x120>
 80015e8:	ee67 7aa6 	vmul.f32	s15, s15, s13
    (Rx_data[12] - '0') +
 80015ec:	ee77 7a27 	vadd.f32	s15, s14, s15
  RP_message.Elevation =
 80015f0:	4b0c      	ldr	r3, [pc, #48]	@ (8001624 <Raspberry_DatPpars+0x124>)
 80015f2:	edc3 7a0b 	vstr	s15, [r3, #44]	@ 0x2c
  if (Rx_data[9] == '-') RP_message.Elevation = -RP_message.Elevation;
 80015f6:	687b      	ldr	r3, [r7, #4]
 80015f8:	3309      	adds	r3, #9
 80015fa:	781b      	ldrb	r3, [r3, #0]
 80015fc:	2b2d      	cmp	r3, #45	@ 0x2d
 80015fe:	d107      	bne.n	8001610 <Raspberry_DatPpars+0x110>
 8001600:	4b08      	ldr	r3, [pc, #32]	@ (8001624 <Raspberry_DatPpars+0x124>)
 8001602:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8001606:	eef1 7a67 	vneg.f32	s15, s15
 800160a:	4b06      	ldr	r3, [pc, #24]	@ (8001624 <Raspberry_DatPpars+0x124>)
 800160c:	edc3 7a0b 	vstr	s15, [r3, #44]	@ 0x2c
};
 8001610:	bf00      	nop
 8001612:	370c      	adds	r7, #12
 8001614:	46bd      	mov	sp, r7
 8001616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800161a:	4770      	bx	lr
 800161c:	42c80000 	.word	0x42c80000
 8001620:	3dcccccd 	.word	0x3dcccccd
 8001624:	20000120 	.word	0x20000120

08001628 <Pin_SetLevl>:
	}
  },
  .Status = {0}
};

void Pin_SetLevl(Bundle_Port_Pin *Pin, Levl_signal State) {
 8001628:	b480      	push	{r7}
 800162a:	b083      	sub	sp, #12
 800162c:	af00      	add	r7, sp, #0
 800162e:	6078      	str	r0, [r7, #4]
 8001630:	460b      	mov	r3, r1
 8001632:	70fb      	strb	r3, [r7, #3]
   * Иначе возрращается параметр
   * */
  assert_param(IS_GPIO_PIN(Pin->Pin));
  assert_param(IS_GPIO_PIN_ACTION(State));

  if(State != Low) {Pin->Port->BSRR = Pin->Pin;}
 8001634:	78fb      	ldrb	r3, [r7, #3]
 8001636:	2b00      	cmp	r3, #0
 8001638:	d005      	beq.n	8001646 <Pin_SetLevl+0x1e>
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	889a      	ldrh	r2, [r3, #4]
 800163e:	687b      	ldr	r3, [r7, #4]
 8001640:	681b      	ldr	r3, [r3, #0]
 8001642:	619a      	str	r2, [r3, #24]
  else {Pin->Port->BSRR = (uint32_t)Pin->Pin << 16U;};
};
 8001644:	e006      	b.n	8001654 <Pin_SetLevl+0x2c>
  else {Pin->Port->BSRR = (uint32_t)Pin->Pin << 16U;};
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	889b      	ldrh	r3, [r3, #4]
 800164a:	461a      	mov	r2, r3
 800164c:	687b      	ldr	r3, [r7, #4]
 800164e:	681b      	ldr	r3, [r3, #0]
 8001650:	0412      	lsls	r2, r2, #16
 8001652:	619a      	str	r2, [r3, #24]
};
 8001654:	bf00      	nop
 8001656:	370c      	adds	r7, #12
 8001658:	46bd      	mov	sp, r7
 800165a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800165e:	4770      	bx	lr

08001660 <Motor_DirRot>:

void Motor_DirRot(Motor *Motor_xx, Levl_signal Direction_of_rotation) {
 8001660:	b480      	push	{r7}
 8001662:	b083      	sub	sp, #12
 8001664:	af00      	add	r7, sp, #0
 8001666:	6078      	str	r0, [r7, #4]
 8001668:	460b      	mov	r3, r1
 800166a:	70fb      	strb	r3, [r7, #3]
   * Иначе возрращается параметр
   * */
  assert_param(IS_GPIO_PIN(Motor_xx->Setting.Pin.DIR.Pin));
  assert_param(IS_GPIO_PIN_ACTION(Direction_of_rotation));

  if(Direction_of_rotation != Low) {Motor_xx->Parameters.Pins.DIR.Port->BSRR = Motor_xx->Parameters.Pins.DIR.Pin;}
 800166c:	78fb      	ldrb	r3, [r7, #3]
 800166e:	2b00      	cmp	r3, #0
 8001670:	d005      	beq.n	800167e <Motor_DirRot+0x1e>
 8001672:	687b      	ldr	r3, [r7, #4]
 8001674:	899a      	ldrh	r2, [r3, #12]
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	689b      	ldr	r3, [r3, #8]
 800167a:	619a      	str	r2, [r3, #24]
  else {Motor_xx->Parameters.Pins.DIR.Port->BSRR = (uint32_t)Motor_xx->Parameters.Pins.DIR.Pin << 16U;};
};
 800167c:	e006      	b.n	800168c <Motor_DirRot+0x2c>
  else {Motor_xx->Parameters.Pins.DIR.Port->BSRR = (uint32_t)Motor_xx->Parameters.Pins.DIR.Pin << 16U;};
 800167e:	687b      	ldr	r3, [r7, #4]
 8001680:	899b      	ldrh	r3, [r3, #12]
 8001682:	461a      	mov	r2, r3
 8001684:	687b      	ldr	r3, [r7, #4]
 8001686:	689b      	ldr	r3, [r3, #8]
 8001688:	0412      	lsls	r2, r2, #16
 800168a:	619a      	str	r2, [r3, #24]
};
 800168c:	bf00      	nop
 800168e:	370c      	adds	r7, #12
 8001690:	46bd      	mov	sp, r7
 8001692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001696:	4770      	bx	lr

08001698 <Motor_SetFrequency>:

void Motor_SetFrequency(Motor *Motor_xx, unsigned int frequency) {
 8001698:	b580      	push	{r7, lr}
 800169a:	b084      	sub	sp, #16
 800169c:	af00      	add	r7, sp, #0
 800169e:	6078      	str	r0, [r7, #4]
 80016a0:	6039      	str	r1, [r7, #0]
  TIM_HandleTypeDef *Number_xx = Motor_xx->Parameters.Timer.Number_timer;
 80016a2:	687b      	ldr	r3, [r7, #4]
 80016a4:	691b      	ldr	r3, [r3, #16]
 80016a6:	60bb      	str	r3, [r7, #8]

  static unsigned int prescaler = 0;
  unsigned int period = ((SystemCoreClock >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]) * 2 / (frequency * (prescaler + 1))) - 1;
 80016a8:	4b28      	ldr	r3, [pc, #160]	@ (800174c <Motor_SetFrequency+0xb4>)
 80016aa:	681b      	ldr	r3, [r3, #0]
 80016ac:	4a28      	ldr	r2, [pc, #160]	@ (8001750 <Motor_SetFrequency+0xb8>)
 80016ae:	6892      	ldr	r2, [r2, #8]
 80016b0:	0a92      	lsrs	r2, r2, #10
 80016b2:	f002 0207 	and.w	r2, r2, #7
 80016b6:	4927      	ldr	r1, [pc, #156]	@ (8001754 <Motor_SetFrequency+0xbc>)
 80016b8:	5c8a      	ldrb	r2, [r1, r2]
 80016ba:	40d3      	lsrs	r3, r2
 80016bc:	005a      	lsls	r2, r3, #1
 80016be:	4b26      	ldr	r3, [pc, #152]	@ (8001758 <Motor_SetFrequency+0xc0>)
 80016c0:	681b      	ldr	r3, [r3, #0]
 80016c2:	3301      	adds	r3, #1
 80016c4:	6839      	ldr	r1, [r7, #0]
 80016c6:	fb01 f303 	mul.w	r3, r1, r3
 80016ca:	fbb2 f3f3 	udiv	r3, r2, r3
 80016ce:	3b01      	subs	r3, #1
 80016d0:	60fb      	str	r3, [r7, #12]

  while (period > 0xFFFF) {
 80016d2:	e019      	b.n	8001708 <Motor_SetFrequency+0x70>
    prescaler++;
 80016d4:	4b20      	ldr	r3, [pc, #128]	@ (8001758 <Motor_SetFrequency+0xc0>)
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	3301      	adds	r3, #1
 80016da:	4a1f      	ldr	r2, [pc, #124]	@ (8001758 <Motor_SetFrequency+0xc0>)
 80016dc:	6013      	str	r3, [r2, #0]
    period = ((SystemCoreClock >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]) * 2 / (frequency * (prescaler + 1))) - 1;
 80016de:	4b1b      	ldr	r3, [pc, #108]	@ (800174c <Motor_SetFrequency+0xb4>)
 80016e0:	681b      	ldr	r3, [r3, #0]
 80016e2:	4a1b      	ldr	r2, [pc, #108]	@ (8001750 <Motor_SetFrequency+0xb8>)
 80016e4:	6892      	ldr	r2, [r2, #8]
 80016e6:	0a92      	lsrs	r2, r2, #10
 80016e8:	f002 0207 	and.w	r2, r2, #7
 80016ec:	4919      	ldr	r1, [pc, #100]	@ (8001754 <Motor_SetFrequency+0xbc>)
 80016ee:	5c8a      	ldrb	r2, [r1, r2]
 80016f0:	40d3      	lsrs	r3, r2
 80016f2:	005a      	lsls	r2, r3, #1
 80016f4:	4b18      	ldr	r3, [pc, #96]	@ (8001758 <Motor_SetFrequency+0xc0>)
 80016f6:	681b      	ldr	r3, [r3, #0]
 80016f8:	3301      	adds	r3, #1
 80016fa:	6839      	ldr	r1, [r7, #0]
 80016fc:	fb01 f303 	mul.w	r3, r1, r3
 8001700:	fbb2 f3f3 	udiv	r3, r2, r3
 8001704:	3b01      	subs	r3, #1
 8001706:	60fb      	str	r3, [r7, #12]
  while (period > 0xFFFF) {
 8001708:	68fb      	ldr	r3, [r7, #12]
 800170a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800170e:	d2e1      	bcs.n	80016d4 <Motor_SetFrequency+0x3c>
  };

  HAL_TIM_PWM_Stop(Number_xx, Motor_xx->Parameters.Timer.Channel);
 8001710:	687b      	ldr	r3, [r7, #4]
 8001712:	695b      	ldr	r3, [r3, #20]
 8001714:	4619      	mov	r1, r3
 8001716:	68b8      	ldr	r0, [r7, #8]
 8001718:	f002 f970 	bl	80039fc <HAL_TIM_PWM_Stop>
  Number_xx->Instance->PSC = prescaler;
 800171c:	68bb      	ldr	r3, [r7, #8]
 800171e:	681b      	ldr	r3, [r3, #0]
 8001720:	4a0d      	ldr	r2, [pc, #52]	@ (8001758 <Motor_SetFrequency+0xc0>)
 8001722:	6812      	ldr	r2, [r2, #0]
 8001724:	629a      	str	r2, [r3, #40]	@ 0x28
  Number_xx->Instance->ARR = period;
 8001726:	68bb      	ldr	r3, [r7, #8]
 8001728:	681b      	ldr	r3, [r3, #0]
 800172a:	68fa      	ldr	r2, [r7, #12]
 800172c:	62da      	str	r2, [r3, #44]	@ 0x2c
  Number_xx->Instance->CCR1 = Number_xx->Instance->ARR / 2;
 800172e:	68bb      	ldr	r3, [r7, #8]
 8001730:	681b      	ldr	r3, [r3, #0]
 8001732:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001734:	68bb      	ldr	r3, [r7, #8]
 8001736:	681b      	ldr	r3, [r3, #0]
 8001738:	0852      	lsrs	r2, r2, #1
 800173a:	635a      	str	r2, [r3, #52]	@ 0x34

  Motor_xx->Status.Frequency = frequency;
 800173c:	687b      	ldr	r3, [r7, #4]
 800173e:	683a      	ldr	r2, [r7, #0]
 8001740:	625a      	str	r2, [r3, #36]	@ 0x24
};
 8001742:	bf00      	nop
 8001744:	3710      	adds	r7, #16
 8001746:	46bd      	mov	sp, r7
 8001748:	bd80      	pop	{r7, pc}
 800174a:	bf00      	nop
 800174c:	200000a8 	.word	0x200000a8
 8001750:	40023800 	.word	0x40023800
 8001754:	080058b0 	.word	0x080058b0
 8001758:	20000150 	.word	0x20000150

0800175c <Motor_UpFrequency>:

void Motor_UpFrequency(Motor *Motor_xx) {
 800175c:	b580      	push	{r7, lr}
 800175e:	b082      	sub	sp, #8
 8001760:	af00      	add	r7, sp, #0
 8001762:	6078      	str	r0, [r7, #4]
  if (Motor_xx->Status.Frequency < Motor_xx->Parameters.Frequency.Maximum) {
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001768:	687b      	ldr	r3, [r7, #4]
 800176a:	699b      	ldr	r3, [r3, #24]
 800176c:	429a      	cmp	r2, r3
 800176e:	d215      	bcs.n	800179c <Motor_UpFrequency+0x40>
    Motor_SetFrequency(
	  Motor_xx,
	  Motor_xx->Status.Frequency + Motor_xx->Parameters.Frequency.StepUp < Motor_xx->Parameters.Frequency.Maximum ?
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	699a      	ldr	r2, [r3, #24]
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8001778:	687b      	ldr	r3, [r7, #4]
 800177a:	6a1b      	ldr	r3, [r3, #32]
 800177c:	440b      	add	r3, r1
    Motor_SetFrequency(
 800177e:	4293      	cmp	r3, r2
 8001780:	bf28      	it	cs
 8001782:	4613      	movcs	r3, r2
 8001784:	4619      	mov	r1, r3
 8001786:	6878      	ldr	r0, [r7, #4]
 8001788:	f7ff ff86 	bl	8001698 <Motor_SetFrequency>
	    Motor_xx->Status.Frequency + Motor_xx->Parameters.Frequency.StepUp :
	    Motor_xx->Parameters.Frequency.Maximum
	);
    HAL_TIM_PWM_Start(Motor_xx->Parameters.Timer.Number_timer, Motor_xx->Parameters.Timer.Channel);
 800178c:	687b      	ldr	r3, [r7, #4]
 800178e:	691a      	ldr	r2, [r3, #16]
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	695b      	ldr	r3, [r3, #20]
 8001794:	4619      	mov	r1, r3
 8001796:	4610      	mov	r0, r2
 8001798:	f002 f868 	bl	800386c <HAL_TIM_PWM_Start>
  };
};
 800179c:	bf00      	nop
 800179e:	3708      	adds	r7, #8
 80017a0:	46bd      	mov	sp, r7
 80017a2:	bd80      	pop	{r7, pc}

080017a4 <Motor_Start>:

void Motor_Start(Motor *Motor_xx) {
 80017a4:	b580      	push	{r7, lr}
 80017a6:	b084      	sub	sp, #16
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
  System_parameters *Setting_xx = &Motor_xx->Parameters;
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	60fb      	str	r3, [r7, #12]

  Motor_SetFrequency(Motor_xx, Setting_xx->Frequency.Minimum);
 80017b0:	68fb      	ldr	r3, [r7, #12]
 80017b2:	69db      	ldr	r3, [r3, #28]
 80017b4:	4619      	mov	r1, r3
 80017b6:	6878      	ldr	r0, [r7, #4]
 80017b8:	f7ff ff6e 	bl	8001698 <Motor_SetFrequency>
  HAL_TIM_PWM_Start(Setting_xx->Timer.Number_timer, Setting_xx->Timer.Channel);
 80017bc:	68fb      	ldr	r3, [r7, #12]
 80017be:	691a      	ldr	r2, [r3, #16]
 80017c0:	68fb      	ldr	r3, [r7, #12]
 80017c2:	695b      	ldr	r3, [r3, #20]
 80017c4:	4619      	mov	r1, r3
 80017c6:	4610      	mov	r0, r2
 80017c8:	f002 f850 	bl	800386c <HAL_TIM_PWM_Start>
//    tmpsmcr = Number_xx->Instance->SMCR & TIM_SMCR_SMS;
//    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr)) __HAL_TIM_ENABLE(Number_xx);
//  }
//  else __HAL_TIM_ENABLE(Number_xx);

  Pin_SetLevl(&Setting_xx->Pins.ENA, Low);
 80017cc:	68fb      	ldr	r3, [r7, #12]
 80017ce:	2100      	movs	r1, #0
 80017d0:	4618      	mov	r0, r3
 80017d2:	f7ff ff29 	bl	8001628 <Pin_SetLevl>
  Motor_xx->Status.Functioning = Hight;
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	2201      	movs	r2, #1
 80017da:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
};
 80017de:	bf00      	nop
 80017e0:	3710      	adds	r7, #16
 80017e2:	46bd      	mov	sp, r7
 80017e4:	bd80      	pop	{r7, pc}

080017e6 <Motor_Stop>:
//  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET) __HAL_TIM_MOE_DISABLE(htim); /* Disable the Main Output */
//  __HAL_TIM_DISABLE(htim); /* Disable the Peripheral */
//  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY); /* Set the TIM channel state */
//}

void Motor_Stop(Motor *Motor_xx) {
 80017e6:	b580      	push	{r7, lr}
 80017e8:	b084      	sub	sp, #16
 80017ea:	af00      	add	r7, sp, #0
 80017ec:	6078      	str	r0, [r7, #4]
  System_parameters *Setting_xx = &Motor_xx->Parameters;
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	60fb      	str	r3, [r7, #12]

  Pin_SetLevl(&Setting_xx->Pins.ENA, Hight);
 80017f2:	68fb      	ldr	r3, [r7, #12]
 80017f4:	2101      	movs	r1, #1
 80017f6:	4618      	mov	r0, r3
 80017f8:	f7ff ff16 	bl	8001628 <Pin_SetLevl>
  Motor_SetFrequency(Motor_xx, Setting_xx->Frequency.Minimum);
 80017fc:	68fb      	ldr	r3, [r7, #12]
 80017fe:	69db      	ldr	r3, [r3, #28]
 8001800:	4619      	mov	r1, r3
 8001802:	6878      	ldr	r0, [r7, #4]
 8001804:	f7ff ff48 	bl	8001698 <Motor_SetFrequency>
  HAL_TIM_PWM_Stop(Setting_xx->Timer.Number_timer, Setting_xx->Timer.Channel);
 8001808:	68fb      	ldr	r3, [r7, #12]
 800180a:	691a      	ldr	r2, [r3, #16]
 800180c:	68fb      	ldr	r3, [r7, #12]
 800180e:	695b      	ldr	r3, [r3, #20]
 8001810:	4619      	mov	r1, r3
 8001812:	4610      	mov	r0, r2
 8001814:	f002 f8f2 	bl	80039fc <HAL_TIM_PWM_Stop>
//  TIM_CCxChannelCmd(Setting_xx->Timer.Number->Instance, Setting_xx->Timer.Channel, TIM_CCx_DISABLE); /* Disable the Capture compare channel */
//  if (IS_TIM_BREAK_INSTANCE(Setting_xx->Timer.Number) != RESET) __HAL_TIM_MOE_DISABLE(Setting_xx->Timer.Number); /* Disable the Main Output */
//  __HAL_TIM_DISABLE(Setting_xx->Timer.Number); /* Disable the Peripheral */
//  TIM_CHANNEL_STATE_SET(Setting_xx->Timer.Number, Setting_xx->Timer.Channel, HAL_TIM_CHANNEL_STATE_READY); /* Set the TIM channel state */

  Motor_xx->Status.Functioning = Low;
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	2200      	movs	r2, #0
 800181c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
};
 8001820:	bf00      	nop
 8001822:	3710      	adds	r7, #16
 8001824:	46bd      	mov	sp, r7
 8001826:	bd80      	pop	{r7, pc}

08001828 <System_CheckLimit>:
Systems Systema_EL = {
  .Maximum = 90.0f,
  .Minimum = -20.0f
};

int System_CheckLimit(Systems *Systema_xx) {
 8001828:	b480      	push	{r7}
 800182a:	b087      	sub	sp, #28
 800182c:	af00      	add	r7, sp, #0
 800182e:	6078      	str	r0, [r7, #4]
  float lower_limit = Systema_xx->Minimum + 5.0f;
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	edd3 7a02 	vldr	s15, [r3, #8]
 8001836:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800183a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800183e:	edc7 7a05 	vstr	s15, [r7, #20]
  float upper_limit = Systema_xx->Maximum - 5.0f;
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	edd3 7a01 	vldr	s15, [r3, #4]
 8001848:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800184c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001850:	edc7 7a04 	vstr	s15, [r7, #16]

  /*
   * Не удалять так как значение угла может выйти за границы
   * В этом случае условие равенства границам нарушится
   * */
  float current_angle = CLAMP(Systema_xx->Actual_angular, lower_limit, upper_limit);
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	edd3 7a00 	vldr	s15, [r3]
 800185a:	ed97 7a04 	vldr	s14, [r7, #16]
 800185e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001862:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001866:	dd03      	ble.n	8001870 <System_CheckLimit+0x48>
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	edd3 7a00 	vldr	s15, [r3]
 800186e:	e001      	b.n	8001874 <System_CheckLimit+0x4c>
 8001870:	edd7 7a04 	vldr	s15, [r7, #16]
 8001874:	ed97 7a05 	vldr	s14, [r7, #20]
 8001878:	eef4 7ac7 	vcmpe.f32	s15, s14
 800187c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001880:	d501      	bpl.n	8001886 <System_CheckLimit+0x5e>
 8001882:	697b      	ldr	r3, [r7, #20]
 8001884:	e00d      	b.n	80018a2 <System_CheckLimit+0x7a>
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	edd3 7a00 	vldr	s15, [r3]
 800188c:	ed97 7a04 	vldr	s14, [r7, #16]
 8001890:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001898:	dd02      	ble.n	80018a0 <System_CheckLimit+0x78>
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	681b      	ldr	r3, [r3, #0]
 800189e:	e000      	b.n	80018a2 <System_CheckLimit+0x7a>
 80018a0:	693b      	ldr	r3, [r7, #16]
 80018a2:	60fb      	str	r3, [r7, #12]
  return
    (current_angle != lower_limit) && (current_angle != upper_limit) ?
      Hight:
 80018a4:	ed97 7a03 	vldr	s14, [r7, #12]
 80018a8:	edd7 7a05 	vldr	s15, [r7, #20]
 80018ac:	eeb4 7a67 	vcmp.f32	s14, s15
 80018b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80018b4:	d00a      	beq.n	80018cc <System_CheckLimit+0xa4>
 80018b6:	ed97 7a03 	vldr	s14, [r7, #12]
 80018ba:	edd7 7a04 	vldr	s15, [r7, #16]
 80018be:	eeb4 7a67 	vcmp.f32	s14, s15
 80018c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80018c6:	d001      	beq.n	80018cc <System_CheckLimit+0xa4>
 80018c8:	2301      	movs	r3, #1
 80018ca:	e000      	b.n	80018ce <System_CheckLimit+0xa6>
 80018cc:	2300      	movs	r3, #0
	  Low;
};
 80018ce:	4618      	mov	r0, r3
 80018d0:	371c      	adds	r7, #28
 80018d2:	46bd      	mov	sp, r7
 80018d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018d8:	4770      	bx	lr
	...

080018dc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80018dc:	b580      	push	{r7, lr}
 80018de:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN 1 */
  Motor_AZ.Parameters.Timer.Number_timer = &htim3;
 80018e0:	4b7d      	ldr	r3, [pc, #500]	@ (8001ad8 <main+0x1fc>)
 80018e2:	4a7e      	ldr	r2, [pc, #504]	@ (8001adc <main+0x200>)
 80018e4:	611a      	str	r2, [r3, #16]
  Motor_AZ.Parameters.Timer.Channel = TIM_CHANNEL_1;
 80018e6:	4b7c      	ldr	r3, [pc, #496]	@ (8001ad8 <main+0x1fc>)
 80018e8:	2200      	movs	r2, #0
 80018ea:	615a      	str	r2, [r3, #20]
  Motor_EL.Parameters.Timer.Number_timer = &htim2;
 80018ec:	4b7c      	ldr	r3, [pc, #496]	@ (8001ae0 <main+0x204>)
 80018ee:	4a7d      	ldr	r2, [pc, #500]	@ (8001ae4 <main+0x208>)
 80018f0:	611a      	str	r2, [r3, #16]
  Motor_EL.Parameters.Timer.Channel = TIM_CHANNEL_1;
 80018f2:	4b7b      	ldr	r3, [pc, #492]	@ (8001ae0 <main+0x204>)
 80018f4:	2200      	movs	r2, #0
 80018f6:	615a      	str	r2, [r3, #20]

  Encoder_AZ.Timer_number = &htim8;
 80018f8:	4b7b      	ldr	r3, [pc, #492]	@ (8001ae8 <main+0x20c>)
 80018fa:	4a7c      	ldr	r2, [pc, #496]	@ (8001aec <main+0x210>)
 80018fc:	601a      	str	r2, [r3, #0]
  Encoder_EL.Timer_number = &htim4;
 80018fe:	4b7c      	ldr	r3, [pc, #496]	@ (8001af0 <main+0x214>)
 8001900:	4a7c      	ldr	r2, [pc, #496]	@ (8001af4 <main+0x218>)
 8001902:	601a      	str	r2, [r3, #0]

  RP_message.UART_port = &huart2;
 8001904:	4b7c      	ldr	r3, [pc, #496]	@ (8001af8 <main+0x21c>)
 8001906:	4a7d      	ldr	r2, [pc, #500]	@ (8001afc <main+0x220>)
 8001908:	601a      	str	r2, [r3, #0]
  Size_Rx_UART = sizeof(RP_message.Rx_data);
 800190a:	4b7d      	ldr	r3, [pc, #500]	@ (8001b00 <main+0x224>)
 800190c:	2215      	movs	r2, #21
 800190e:	601a      	str	r2, [r3, #0]
  Size_Tx_UART = sizeof(RP_message.Tx_data);
 8001910:	4b7c      	ldr	r3, [pc, #496]	@ (8001b04 <main+0x228>)
 8001912:	220d      	movs	r2, #13
 8001914:	601a      	str	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001916:	f000 fed1 	bl	80026bc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800191a:	f000 f909 	bl	8001b30 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800191e:	f000 fb8f 	bl	8002040 <MX_GPIO_Init>
  MX_TIM2_Init();
 8001922:	f000 f96f 	bl	8001c04 <MX_TIM2_Init>
  MX_TIM3_Init();
 8001926:	f000 f9c5 	bl	8001cb4 <MX_TIM3_Init>
  MX_TIM4_Init();
 800192a:	f000 fa1d 	bl	8001d68 <MX_TIM4_Init>
  MX_USART2_UART_Init();
 800192e:	f000 fb5d 	bl	8001fec <MX_USART2_UART_Init>
  MX_TIM8_Init();
 8001932:	f000 fae9 	bl	8001f08 <MX_TIM8_Init>
  MX_TIM5_Init();
 8001936:	f000 fa87 	bl	8001e48 <MX_TIM5_Init>

  Encoder_Init(&Encoder_AZ);
 800193a:	486b      	ldr	r0, [pc, #428]	@ (8001ae8 <main+0x20c>)
 800193c:	f7ff fa66 	bl	8000e0c <Encoder_Init>
  Encoder_Init(&Encoder_EL);
 8001940:	486b      	ldr	r0, [pc, #428]	@ (8001af0 <main+0x214>)
 8001942:	f7ff fa63 	bl	8000e0c <Encoder_Init>

  Motor_AZ.Status.Tik[0] = htim5.Instance->CNT;
 8001946:	4b70      	ldr	r3, [pc, #448]	@ (8001b08 <main+0x22c>)
 8001948:	681b      	ldr	r3, [r3, #0]
 800194a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800194c:	4a62      	ldr	r2, [pc, #392]	@ (8001ad8 <main+0x1fc>)
 800194e:	62d3      	str	r3, [r2, #44]	@ 0x2c
  Motor_EL.Status.Tik[0] = htim5.Instance->CNT;
 8001950:	4b6d      	ldr	r3, [pc, #436]	@ (8001b08 <main+0x22c>)
 8001952:	681b      	ldr	r3, [r3, #0]
 8001954:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001956:	4a62      	ldr	r2, [pc, #392]	@ (8001ae0 <main+0x204>)
 8001958:	62d3      	str	r3, [r2, #44]	@ 0x2c

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	Encoder_GetAngular(&Encoder_AZ);
 800195a:	4863      	ldr	r0, [pc, #396]	@ (8001ae8 <main+0x20c>)
 800195c:	f7ff faa6 	bl	8000eac <Encoder_GetAngular>
    Encoder_GetAngular(&Encoder_EL);
 8001960:	4863      	ldr	r0, [pc, #396]	@ (8001af0 <main+0x214>)
 8001962:	f7ff faa3 	bl	8000eac <Encoder_GetAngular>

	if (System_CheckLimit(&Systema_AZ) && System_CheckLimit(&Systema_EL)) {
 8001966:	4869      	ldr	r0, [pc, #420]	@ (8001b0c <main+0x230>)
 8001968:	f7ff ff5e 	bl	8001828 <System_CheckLimit>
 800196c:	4603      	mov	r3, r0
 800196e:	2b00      	cmp	r3, #0
 8001970:	d026      	beq.n	80019c0 <main+0xe4>
 8001972:	4867      	ldr	r0, [pc, #412]	@ (8001b10 <main+0x234>)
 8001974:	f7ff ff58 	bl	8001828 <System_CheckLimit>
 8001978:	4603      	mov	r3, r0
 800197a:	2b00      	cmp	r3, #0
 800197c:	d020      	beq.n	80019c0 <main+0xe4>
	  switch (RP_message.Rx_data[15]) {
 800197e:	4b5e      	ldr	r3, [pc, #376]	@ (8001af8 <main+0x21c>)
 8001980:	7d1b      	ldrb	r3, [r3, #20]
 8001982:	2b32      	cmp	r3, #50	@ 0x32
 8001984:	d014      	beq.n	80019b0 <main+0xd4>
 8001986:	2b32      	cmp	r3, #50	@ 0x32
 8001988:	dc26      	bgt.n	80019d8 <main+0xfc>
 800198a:	2b30      	cmp	r3, #48	@ 0x30
 800198c:	d002      	beq.n	8001994 <main+0xb8>
 800198e:	2b31      	cmp	r3, #49	@ 0x31
 8001990:	d007      	beq.n	80019a2 <main+0xc6>
 8001992:	e021      	b.n	80019d8 <main+0xfc>
	    case '0':
	      Mode_Manual(&Motor_AZ);
 8001994:	4850      	ldr	r0, [pc, #320]	@ (8001ad8 <main+0x1fc>)
 8001996:	f7ff fae9 	bl	8000f6c <Mode_Manual>
	      Mode_Manual(&Motor_EL);
 800199a:	4851      	ldr	r0, [pc, #324]	@ (8001ae0 <main+0x204>)
 800199c:	f7ff fae6 	bl	8000f6c <Mode_Manual>
		  break;
 80019a0:	e00d      	b.n	80019be <main+0xe2>
	    case '1':
	      Mode_Semi_automatic(&Motor_AZ);
 80019a2:	484d      	ldr	r0, [pc, #308]	@ (8001ad8 <main+0x1fc>)
 80019a4:	f7ff fb54 	bl	8001050 <Mode_Semi_automatic>
	      Mode_Semi_automatic(&Motor_EL);
 80019a8:	484d      	ldr	r0, [pc, #308]	@ (8001ae0 <main+0x204>)
 80019aa:	f7ff fb51 	bl	8001050 <Mode_Semi_automatic>
	      break;
 80019ae:	e006      	b.n	80019be <main+0xe2>
	    case '2':
	      Mode_Automatic(&Motor_AZ);
 80019b0:	4849      	ldr	r0, [pc, #292]	@ (8001ad8 <main+0x1fc>)
 80019b2:	f7ff fc21 	bl	80011f8 <Mode_Automatic>
	      Mode_Automatic(&Motor_EL);
 80019b6:	484a      	ldr	r0, [pc, #296]	@ (8001ae0 <main+0x204>)
 80019b8:	f7ff fc1e 	bl	80011f8 <Mode_Automatic>
	      break;
 80019bc:	bf00      	nop
	  switch (RP_message.Rx_data[15]) {
 80019be:	e00b      	b.n	80019d8 <main+0xfc>
	  };
	} else {
	  Motor_Stop(&Motor_AZ);
 80019c0:	4845      	ldr	r0, [pc, #276]	@ (8001ad8 <main+0x1fc>)
 80019c2:	f7ff ff10 	bl	80017e6 <Motor_Stop>
	  Motor_Stop(&Motor_EL);
 80019c6:	4846      	ldr	r0, [pc, #280]	@ (8001ae0 <main+0x204>)
 80019c8:	f7ff ff0d 	bl	80017e6 <Motor_Stop>

	  Mode_Moving_away_from_borders(&Motor_AZ);
 80019cc:	4842      	ldr	r0, [pc, #264]	@ (8001ad8 <main+0x1fc>)
 80019ce:	f7ff fbcb 	bl	8001168 <Mode_Moving_away_from_borders>
	  Mode_Moving_away_from_borders(&Motor_EL);
 80019d2:	4843      	ldr	r0, [pc, #268]	@ (8001ae0 <main+0x204>)
 80019d4:	f7ff fbc8 	bl	8001168 <Mode_Moving_away_from_borders>
	};
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	Frequency_AZ = Motor_AZ.Status.Frequency;
 80019d8:	4b3f      	ldr	r3, [pc, #252]	@ (8001ad8 <main+0x1fc>)
 80019da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80019dc:	4a4d      	ldr	r2, [pc, #308]	@ (8001b14 <main+0x238>)
 80019de:	6013      	str	r3, [r2, #0]
	Frequency_EL = Motor_EL.Status.Frequency;
 80019e0:	4b3f      	ldr	r3, [pc, #252]	@ (8001ae0 <main+0x204>)
 80019e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80019e4:	4a4c      	ldr	r2, [pc, #304]	@ (8001b18 <main+0x23c>)
 80019e6:	6013      	str	r3, [r2, #0]
	Angular_AZ = Systema_AZ.Actual_angular;
 80019e8:	4b48      	ldr	r3, [pc, #288]	@ (8001b0c <main+0x230>)
 80019ea:	681b      	ldr	r3, [r3, #0]
 80019ec:	4a4b      	ldr	r2, [pc, #300]	@ (8001b1c <main+0x240>)
 80019ee:	6013      	str	r3, [r2, #0]
	Angular_EL = Systema_EL.Actual_angular;
 80019f0:	4b47      	ldr	r3, [pc, #284]	@ (8001b10 <main+0x234>)
 80019f2:	681b      	ldr	r3, [r3, #0]
 80019f4:	4a4a      	ldr	r2, [pc, #296]	@ (8001b20 <main+0x244>)
 80019f6:	6013      	str	r3, [r2, #0]
	Error_AZ = abs(RP_message.Azimuth - Systema_AZ.Actual_angular);
 80019f8:	4b3f      	ldr	r3, [pc, #252]	@ (8001af8 <main+0x21c>)
 80019fa:	ed93 7a0a 	vldr	s14, [r3, #40]	@ 0x28
 80019fe:	4b43      	ldr	r3, [pc, #268]	@ (8001b0c <main+0x230>)
 8001a00:	edd3 7a00 	vldr	s15, [r3]
 8001a04:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001a0c:	ee17 3a90 	vmov	r3, s15
 8001a10:	2b00      	cmp	r3, #0
 8001a12:	bfb8      	it	lt
 8001a14:	425b      	neglt	r3, r3
 8001a16:	ee07 3a90 	vmov	s15, r3
 8001a1a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a1e:	4b41      	ldr	r3, [pc, #260]	@ (8001b24 <main+0x248>)
 8001a20:	edc3 7a00 	vstr	s15, [r3]
	Error_EL = abs(RP_message.Elevation - Systema_EL.Actual_angular);
 8001a24:	4b34      	ldr	r3, [pc, #208]	@ (8001af8 <main+0x21c>)
 8001a26:	ed93 7a0b 	vldr	s14, [r3, #44]	@ 0x2c
 8001a2a:	4b39      	ldr	r3, [pc, #228]	@ (8001b10 <main+0x234>)
 8001a2c:	edd3 7a00 	vldr	s15, [r3]
 8001a30:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001a38:	ee17 3a90 	vmov	r3, s15
 8001a3c:	2b00      	cmp	r3, #0
 8001a3e:	bfb8      	it	lt
 8001a40:	425b      	neglt	r3, r3
 8001a42:	ee07 3a90 	vmov	s15, r3
 8001a46:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a4a:	4b37      	ldr	r3, [pc, #220]	@ (8001b28 <main+0x24c>)
 8001a4c:	edc3 7a00 	vstr	s15, [r3]

	RP_message.Rx_data[0] = 'A';  RP_message.Rx_data[1] = 'z';
 8001a50:	4b29      	ldr	r3, [pc, #164]	@ (8001af8 <main+0x21c>)
 8001a52:	2241      	movs	r2, #65	@ 0x41
 8001a54:	715a      	strb	r2, [r3, #5]
 8001a56:	4b28      	ldr	r3, [pc, #160]	@ (8001af8 <main+0x21c>)
 8001a58:	227a      	movs	r2, #122	@ 0x7a
 8001a5a:	719a      	strb	r2, [r3, #6]
	RP_message.Rx_data[2] = '+'; RP_message.Rx_data[3] = '0'; RP_message.Rx_data[4] = '0'; RP_message.Rx_data[5] = '5'; /*,*/ RP_message.Rx_data[6] = '0';
 8001a5c:	4b26      	ldr	r3, [pc, #152]	@ (8001af8 <main+0x21c>)
 8001a5e:	222b      	movs	r2, #43	@ 0x2b
 8001a60:	71da      	strb	r2, [r3, #7]
 8001a62:	4b25      	ldr	r3, [pc, #148]	@ (8001af8 <main+0x21c>)
 8001a64:	2230      	movs	r2, #48	@ 0x30
 8001a66:	721a      	strb	r2, [r3, #8]
 8001a68:	4b23      	ldr	r3, [pc, #140]	@ (8001af8 <main+0x21c>)
 8001a6a:	2230      	movs	r2, #48	@ 0x30
 8001a6c:	725a      	strb	r2, [r3, #9]
 8001a6e:	4b22      	ldr	r3, [pc, #136]	@ (8001af8 <main+0x21c>)
 8001a70:	2235      	movs	r2, #53	@ 0x35
 8001a72:	729a      	strb	r2, [r3, #10]
 8001a74:	4b20      	ldr	r3, [pc, #128]	@ (8001af8 <main+0x21c>)
 8001a76:	2230      	movs	r2, #48	@ 0x30
 8001a78:	72da      	strb	r2, [r3, #11]

	RP_message.Rx_data[7] = 'E';  RP_message.Rx_data[8] = 'l';
 8001a7a:	4b1f      	ldr	r3, [pc, #124]	@ (8001af8 <main+0x21c>)
 8001a7c:	2245      	movs	r2, #69	@ 0x45
 8001a7e:	731a      	strb	r2, [r3, #12]
 8001a80:	4b1d      	ldr	r3, [pc, #116]	@ (8001af8 <main+0x21c>)
 8001a82:	226c      	movs	r2, #108	@ 0x6c
 8001a84:	735a      	strb	r2, [r3, #13]
	RP_message.Rx_data[9] = '-'; RP_message.Rx_data[10] = '0'; RP_message.Rx_data[11] = '0'; RP_message.Rx_data[12] = '5'; /*,*/ RP_message.Rx_data[13] = '0';
 8001a86:	4b1c      	ldr	r3, [pc, #112]	@ (8001af8 <main+0x21c>)
 8001a88:	222d      	movs	r2, #45	@ 0x2d
 8001a8a:	739a      	strb	r2, [r3, #14]
 8001a8c:	4b1a      	ldr	r3, [pc, #104]	@ (8001af8 <main+0x21c>)
 8001a8e:	2230      	movs	r2, #48	@ 0x30
 8001a90:	73da      	strb	r2, [r3, #15]
 8001a92:	4b19      	ldr	r3, [pc, #100]	@ (8001af8 <main+0x21c>)
 8001a94:	2230      	movs	r2, #48	@ 0x30
 8001a96:	741a      	strb	r2, [r3, #16]
 8001a98:	4b17      	ldr	r3, [pc, #92]	@ (8001af8 <main+0x21c>)
 8001a9a:	2235      	movs	r2, #53	@ 0x35
 8001a9c:	745a      	strb	r2, [r3, #17]
 8001a9e:	4b16      	ldr	r3, [pc, #88]	@ (8001af8 <main+0x21c>)
 8001aa0:	2230      	movs	r2, #48	@ 0x30
 8001aa2:	749a      	strb	r2, [r3, #18]

	RP_message.Rx_data[14] = 'M';
 8001aa4:	4b14      	ldr	r3, [pc, #80]	@ (8001af8 <main+0x21c>)
 8001aa6:	224d      	movs	r2, #77	@ 0x4d
 8001aa8:	74da      	strb	r2, [r3, #19]
	RP_message.Rx_data[15] = '0';
 8001aaa:	4b13      	ldr	r3, [pc, #76]	@ (8001af8 <main+0x21c>)
 8001aac:	2230      	movs	r2, #48	@ 0x30
 8001aae:	751a      	strb	r2, [r3, #20]

	RP_message.Rx_data[16] = 'F';
 8001ab0:	4b11      	ldr	r3, [pc, #68]	@ (8001af8 <main+0x21c>)
 8001ab2:	2246      	movs	r2, #70	@ 0x46
 8001ab4:	755a      	strb	r2, [r3, #21]
	RP_message.Rx_data[17] = '0';
 8001ab6:	4b10      	ldr	r3, [pc, #64]	@ (8001af8 <main+0x21c>)
 8001ab8:	2230      	movs	r2, #48	@ 0x30
 8001aba:	759a      	strb	r2, [r3, #22]

	RP_message.Rx_data[18] = '\r'; RP_message.Rx_data[19] = '\n'; RP_message.Rx_data[20] = '\0';
 8001abc:	4b0e      	ldr	r3, [pc, #56]	@ (8001af8 <main+0x21c>)
 8001abe:	220d      	movs	r2, #13
 8001ac0:	75da      	strb	r2, [r3, #23]
 8001ac2:	4b0d      	ldr	r3, [pc, #52]	@ (8001af8 <main+0x21c>)
 8001ac4:	220a      	movs	r2, #10
 8001ac6:	761a      	strb	r2, [r3, #24]
 8001ac8:	4b0b      	ldr	r3, [pc, #44]	@ (8001af8 <main+0x21c>)
 8001aca:	2200      	movs	r2, #0
 8001acc:	765a      	strb	r2, [r3, #25]
	Raspberry_DatPpars(RP_message.Rx_data);
 8001ace:	4817      	ldr	r0, [pc, #92]	@ (8001b2c <main+0x250>)
 8001ad0:	f7ff fd16 	bl	8001500 <Raspberry_DatPpars>
	Encoder_GetAngular(&Encoder_AZ);
 8001ad4:	e741      	b.n	800195a <main+0x7e>
 8001ad6:	bf00      	nop
 8001ad8:	20000028 	.word	0x20000028
 8001adc:	2000019c 	.word	0x2000019c
 8001ae0:	2000005c 	.word	0x2000005c
 8001ae4:	20000154 	.word	0x20000154
 8001ae8:	20000000 	.word	0x20000000
 8001aec:	20000274 	.word	0x20000274
 8001af0:	20000008 	.word	0x20000008
 8001af4:	200001e4 	.word	0x200001e4
 8001af8:	20000120 	.word	0x20000120
 8001afc:	200002bc 	.word	0x200002bc
 8001b00:	20000304 	.word	0x20000304
 8001b04:	20000308 	.word	0x20000308
 8001b08:	2000022c 	.word	0x2000022c
 8001b0c:	20000090 	.word	0x20000090
 8001b10:	2000009c 	.word	0x2000009c
 8001b14:	2000030c 	.word	0x2000030c
 8001b18:	20000310 	.word	0x20000310
 8001b1c:	20000314 	.word	0x20000314
 8001b20:	20000318 	.word	0x20000318
 8001b24:	2000031c 	.word	0x2000031c
 8001b28:	20000320 	.word	0x20000320
 8001b2c:	20000125 	.word	0x20000125

08001b30 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001b30:	b580      	push	{r7, lr}
 8001b32:	b094      	sub	sp, #80	@ 0x50
 8001b34:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001b36:	f107 0320 	add.w	r3, r7, #32
 8001b3a:	2230      	movs	r2, #48	@ 0x30
 8001b3c:	2100      	movs	r1, #0
 8001b3e:	4618      	mov	r0, r3
 8001b40:	f003 fd6e 	bl	8005620 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001b44:	f107 030c 	add.w	r3, r7, #12
 8001b48:	2200      	movs	r2, #0
 8001b4a:	601a      	str	r2, [r3, #0]
 8001b4c:	605a      	str	r2, [r3, #4]
 8001b4e:	609a      	str	r2, [r3, #8]
 8001b50:	60da      	str	r2, [r3, #12]
 8001b52:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b54:	2300      	movs	r3, #0
 8001b56:	60bb      	str	r3, [r7, #8]
 8001b58:	4b28      	ldr	r3, [pc, #160]	@ (8001bfc <SystemClock_Config+0xcc>)
 8001b5a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b5c:	4a27      	ldr	r2, [pc, #156]	@ (8001bfc <SystemClock_Config+0xcc>)
 8001b5e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001b62:	6413      	str	r3, [r2, #64]	@ 0x40
 8001b64:	4b25      	ldr	r3, [pc, #148]	@ (8001bfc <SystemClock_Config+0xcc>)
 8001b66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b68:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001b6c:	60bb      	str	r3, [r7, #8]
 8001b6e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001b70:	2300      	movs	r3, #0
 8001b72:	607b      	str	r3, [r7, #4]
 8001b74:	4b22      	ldr	r3, [pc, #136]	@ (8001c00 <SystemClock_Config+0xd0>)
 8001b76:	681b      	ldr	r3, [r3, #0]
 8001b78:	4a21      	ldr	r2, [pc, #132]	@ (8001c00 <SystemClock_Config+0xd0>)
 8001b7a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001b7e:	6013      	str	r3, [r2, #0]
 8001b80:	4b1f      	ldr	r3, [pc, #124]	@ (8001c00 <SystemClock_Config+0xd0>)
 8001b82:	681b      	ldr	r3, [r3, #0]
 8001b84:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001b88:	607b      	str	r3, [r7, #4]
 8001b8a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001b8c:	2301      	movs	r3, #1
 8001b8e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001b90:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001b94:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001b96:	2302      	movs	r3, #2
 8001b98:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001b9a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001b9e:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001ba0:	2308      	movs	r3, #8
 8001ba2:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001ba4:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 8001ba8:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001baa:	2302      	movs	r3, #2
 8001bac:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001bae:	2304      	movs	r3, #4
 8001bb0:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001bb2:	f107 0320 	add.w	r3, r7, #32
 8001bb6:	4618      	mov	r0, r3
 8001bb8:	f001 f970 	bl	8002e9c <HAL_RCC_OscConfig>
 8001bbc:	4603      	mov	r3, r0
 8001bbe:	2b00      	cmp	r3, #0
 8001bc0:	d001      	beq.n	8001bc6 <SystemClock_Config+0x96>
  {
    Error_Handler();
 8001bc2:	f000 fafb 	bl	80021bc <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001bc6:	230f      	movs	r3, #15
 8001bc8:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001bca:	2302      	movs	r3, #2
 8001bcc:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001bce:	2300      	movs	r3, #0
 8001bd0:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001bd2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8001bd6:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001bd8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001bdc:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001bde:	f107 030c 	add.w	r3, r7, #12
 8001be2:	2105      	movs	r1, #5
 8001be4:	4618      	mov	r0, r3
 8001be6:	f001 fbd1 	bl	800338c <HAL_RCC_ClockConfig>
 8001bea:	4603      	mov	r3, r0
 8001bec:	2b00      	cmp	r3, #0
 8001bee:	d001      	beq.n	8001bf4 <SystemClock_Config+0xc4>
  {
    Error_Handler();
 8001bf0:	f000 fae4 	bl	80021bc <Error_Handler>
  }
}
 8001bf4:	bf00      	nop
 8001bf6:	3750      	adds	r7, #80	@ 0x50
 8001bf8:	46bd      	mov	sp, r7
 8001bfa:	bd80      	pop	{r7, pc}
 8001bfc:	40023800 	.word	0x40023800
 8001c00:	40007000 	.word	0x40007000

08001c04 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001c04:	b580      	push	{r7, lr}
 8001c06:	b08a      	sub	sp, #40	@ 0x28
 8001c08:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001c0a:	f107 0320 	add.w	r3, r7, #32
 8001c0e:	2200      	movs	r2, #0
 8001c10:	601a      	str	r2, [r3, #0]
 8001c12:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001c14:	1d3b      	adds	r3, r7, #4
 8001c16:	2200      	movs	r2, #0
 8001c18:	601a      	str	r2, [r3, #0]
 8001c1a:	605a      	str	r2, [r3, #4]
 8001c1c:	609a      	str	r2, [r3, #8]
 8001c1e:	60da      	str	r2, [r3, #12]
 8001c20:	611a      	str	r2, [r3, #16]
 8001c22:	615a      	str	r2, [r3, #20]
 8001c24:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001c26:	4b22      	ldr	r3, [pc, #136]	@ (8001cb0 <MX_TIM2_Init+0xac>)
 8001c28:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001c2c:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8001c2e:	4b20      	ldr	r3, [pc, #128]	@ (8001cb0 <MX_TIM2_Init+0xac>)
 8001c30:	2200      	movs	r2, #0
 8001c32:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c34:	4b1e      	ldr	r3, [pc, #120]	@ (8001cb0 <MX_TIM2_Init+0xac>)
 8001c36:	2200      	movs	r2, #0
 8001c38:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8001c3a:	4b1d      	ldr	r3, [pc, #116]	@ (8001cb0 <MX_TIM2_Init+0xac>)
 8001c3c:	f04f 32ff 	mov.w	r2, #4294967295
 8001c40:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c42:	4b1b      	ldr	r3, [pc, #108]	@ (8001cb0 <MX_TIM2_Init+0xac>)
 8001c44:	2200      	movs	r2, #0
 8001c46:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001c48:	4b19      	ldr	r3, [pc, #100]	@ (8001cb0 <MX_TIM2_Init+0xac>)
 8001c4a:	2200      	movs	r2, #0
 8001c4c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001c4e:	4818      	ldr	r0, [pc, #96]	@ (8001cb0 <MX_TIM2_Init+0xac>)
 8001c50:	f001 fdbc 	bl	80037cc <HAL_TIM_PWM_Init>
 8001c54:	4603      	mov	r3, r0
 8001c56:	2b00      	cmp	r3, #0
 8001c58:	d001      	beq.n	8001c5e <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 8001c5a:	f000 faaf 	bl	80021bc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001c5e:	2300      	movs	r3, #0
 8001c60:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001c62:	2300      	movs	r3, #0
 8001c64:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001c66:	f107 0320 	add.w	r3, r7, #32
 8001c6a:	4619      	mov	r1, r3
 8001c6c:	4810      	ldr	r0, [pc, #64]	@ (8001cb0 <MX_TIM2_Init+0xac>)
 8001c6e:	f002 fcc9 	bl	8004604 <HAL_TIMEx_MasterConfigSynchronization>
 8001c72:	4603      	mov	r3, r0
 8001c74:	2b00      	cmp	r3, #0
 8001c76:	d001      	beq.n	8001c7c <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 8001c78:	f000 faa0 	bl	80021bc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c7c:	2360      	movs	r3, #96	@ 0x60
 8001c7e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001c80:	2300      	movs	r3, #0
 8001c82:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001c84:	2300      	movs	r3, #0
 8001c86:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001c88:	2300      	movs	r3, #0
 8001c8a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c8c:	1d3b      	adds	r3, r7, #4
 8001c8e:	2200      	movs	r2, #0
 8001c90:	4619      	mov	r1, r3
 8001c92:	4807      	ldr	r0, [pc, #28]	@ (8001cb0 <MX_TIM2_Init+0xac>)
 8001c94:	f002 f946 	bl	8003f24 <HAL_TIM_PWM_ConfigChannel>
 8001c98:	4603      	mov	r3, r0
 8001c9a:	2b00      	cmp	r3, #0
 8001c9c:	d001      	beq.n	8001ca2 <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 8001c9e:	f000 fa8d 	bl	80021bc <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001ca2:	4803      	ldr	r0, [pc, #12]	@ (8001cb0 <MX_TIM2_Init+0xac>)
 8001ca4:	f000 fbb6 	bl	8002414 <HAL_TIM_MspPostInit>

}
 8001ca8:	bf00      	nop
 8001caa:	3728      	adds	r7, #40	@ 0x28
 8001cac:	46bd      	mov	sp, r7
 8001cae:	bd80      	pop	{r7, pc}
 8001cb0:	20000154 	.word	0x20000154

08001cb4 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001cb4:	b580      	push	{r7, lr}
 8001cb6:	b08a      	sub	sp, #40	@ 0x28
 8001cb8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001cba:	f107 0320 	add.w	r3, r7, #32
 8001cbe:	2200      	movs	r2, #0
 8001cc0:	601a      	str	r2, [r3, #0]
 8001cc2:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001cc4:	1d3b      	adds	r3, r7, #4
 8001cc6:	2200      	movs	r2, #0
 8001cc8:	601a      	str	r2, [r3, #0]
 8001cca:	605a      	str	r2, [r3, #4]
 8001ccc:	609a      	str	r2, [r3, #8]
 8001cce:	60da      	str	r2, [r3, #12]
 8001cd0:	611a      	str	r2, [r3, #16]
 8001cd2:	615a      	str	r2, [r3, #20]
 8001cd4:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001cd6:	4b22      	ldr	r3, [pc, #136]	@ (8001d60 <MX_TIM3_Init+0xac>)
 8001cd8:	4a22      	ldr	r2, [pc, #136]	@ (8001d64 <MX_TIM3_Init+0xb0>)
 8001cda:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 8001cdc:	4b20      	ldr	r3, [pc, #128]	@ (8001d60 <MX_TIM3_Init+0xac>)
 8001cde:	2200      	movs	r2, #0
 8001ce0:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ce2:	4b1f      	ldr	r3, [pc, #124]	@ (8001d60 <MX_TIM3_Init+0xac>)
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8001ce8:	4b1d      	ldr	r3, [pc, #116]	@ (8001d60 <MX_TIM3_Init+0xac>)
 8001cea:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001cee:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001cf0:	4b1b      	ldr	r3, [pc, #108]	@ (8001d60 <MX_TIM3_Init+0xac>)
 8001cf2:	2200      	movs	r2, #0
 8001cf4:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001cf6:	4b1a      	ldr	r3, [pc, #104]	@ (8001d60 <MX_TIM3_Init+0xac>)
 8001cf8:	2200      	movs	r2, #0
 8001cfa:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001cfc:	4818      	ldr	r0, [pc, #96]	@ (8001d60 <MX_TIM3_Init+0xac>)
 8001cfe:	f001 fd65 	bl	80037cc <HAL_TIM_PWM_Init>
 8001d02:	4603      	mov	r3, r0
 8001d04:	2b00      	cmp	r3, #0
 8001d06:	d001      	beq.n	8001d0c <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 8001d08:	f000 fa58 	bl	80021bc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001d0c:	2300      	movs	r3, #0
 8001d0e:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001d10:	2300      	movs	r3, #0
 8001d12:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001d14:	f107 0320 	add.w	r3, r7, #32
 8001d18:	4619      	mov	r1, r3
 8001d1a:	4811      	ldr	r0, [pc, #68]	@ (8001d60 <MX_TIM3_Init+0xac>)
 8001d1c:	f002 fc72 	bl	8004604 <HAL_TIMEx_MasterConfigSynchronization>
 8001d20:	4603      	mov	r3, r0
 8001d22:	2b00      	cmp	r3, #0
 8001d24:	d001      	beq.n	8001d2a <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 8001d26:	f000 fa49 	bl	80021bc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001d2a:	2360      	movs	r3, #96	@ 0x60
 8001d2c:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001d2e:	2300      	movs	r3, #0
 8001d30:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001d32:	2300      	movs	r3, #0
 8001d34:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001d36:	2300      	movs	r3, #0
 8001d38:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001d3a:	1d3b      	adds	r3, r7, #4
 8001d3c:	2200      	movs	r2, #0
 8001d3e:	4619      	mov	r1, r3
 8001d40:	4807      	ldr	r0, [pc, #28]	@ (8001d60 <MX_TIM3_Init+0xac>)
 8001d42:	f002 f8ef 	bl	8003f24 <HAL_TIM_PWM_ConfigChannel>
 8001d46:	4603      	mov	r3, r0
 8001d48:	2b00      	cmp	r3, #0
 8001d4a:	d001      	beq.n	8001d50 <MX_TIM3_Init+0x9c>
  {
    Error_Handler();
 8001d4c:	f000 fa36 	bl	80021bc <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8001d50:	4803      	ldr	r0, [pc, #12]	@ (8001d60 <MX_TIM3_Init+0xac>)
 8001d52:	f000 fb5f 	bl	8002414 <HAL_TIM_MspPostInit>

}
 8001d56:	bf00      	nop
 8001d58:	3728      	adds	r7, #40	@ 0x28
 8001d5a:	46bd      	mov	sp, r7
 8001d5c:	bd80      	pop	{r7, pc}
 8001d5e:	bf00      	nop
 8001d60:	2000019c 	.word	0x2000019c
 8001d64:	40000400 	.word	0x40000400

08001d68 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8001d68:	b580      	push	{r7, lr}
 8001d6a:	b08c      	sub	sp, #48	@ 0x30
 8001d6c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8001d6e:	f107 030c 	add.w	r3, r7, #12
 8001d72:	2224      	movs	r2, #36	@ 0x24
 8001d74:	2100      	movs	r1, #0
 8001d76:	4618      	mov	r0, r3
 8001d78:	f003 fc52 	bl	8005620 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001d7c:	1d3b      	adds	r3, r7, #4
 8001d7e:	2200      	movs	r2, #0
 8001d80:	601a      	str	r2, [r3, #0]
 8001d82:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001d84:	4b2d      	ldr	r3, [pc, #180]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001d86:	4a2e      	ldr	r2, [pc, #184]	@ (8001e40 <MX_TIM4_Init+0xd8>)
 8001d88:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8001d8a:	4b2c      	ldr	r3, [pc, #176]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001d8c:	2200      	movs	r2, #0
 8001d8e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d90:	4b2a      	ldr	r3, [pc, #168]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001d92:	2200      	movs	r2, #0
 8001d94:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 2440;
 8001d96:	4b29      	ldr	r3, [pc, #164]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001d98:	f640 1288 	movw	r2, #2440	@ 0x988
 8001d9c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001d9e:	4b27      	ldr	r3, [pc, #156]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001da0:	2200      	movs	r2, #0
 8001da2:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001da4:	4b25      	ldr	r3, [pc, #148]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001da6:	2200      	movs	r2, #0
 8001da8:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8001daa:	2303      	movs	r3, #3
 8001dac:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8001dae:	2300      	movs	r3, #0
 8001db0:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8001db2:	2301      	movs	r3, #1
 8001db4:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8001db6:	2300      	movs	r3, #0
 8001db8:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 15;
 8001dba:	230f      	movs	r3, #15
 8001dbc:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8001dbe:	2300      	movs	r3, #0
 8001dc0:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8001dc2:	2301      	movs	r3, #1
 8001dc4:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8001dc6:	2300      	movs	r3, #0
 8001dc8:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 15;
 8001dca:	230f      	movs	r3, #15
 8001dcc:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 8001dce:	f107 030c 	add.w	r3, r7, #12
 8001dd2:	4619      	mov	r1, r3
 8001dd4:	4819      	ldr	r0, [pc, #100]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001dd6:	f001 fe81 	bl	8003adc <HAL_TIM_Encoder_Init>
 8001dda:	4603      	mov	r3, r0
 8001ddc:	2b00      	cmp	r3, #0
 8001dde:	d001      	beq.n	8001de4 <MX_TIM4_Init+0x7c>
  {
    Error_Handler();
 8001de0:	f000 f9ec 	bl	80021bc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001de4:	2300      	movs	r3, #0
 8001de6:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001de8:	2300      	movs	r3, #0
 8001dea:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001dec:	1d3b      	adds	r3, r7, #4
 8001dee:	4619      	mov	r1, r3
 8001df0:	4812      	ldr	r0, [pc, #72]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001df2:	f002 fc07 	bl	8004604 <HAL_TIMEx_MasterConfigSynchronization>
 8001df6:	4603      	mov	r3, r0
 8001df8:	2b00      	cmp	r3, #0
 8001dfa:	d001      	beq.n	8001e00 <MX_TIM4_Init+0x98>
  {
    Error_Handler();
 8001dfc:	f000 f9de 	bl	80021bc <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */
  htim4.Init.Period = Encoder_EL.Pulses_per_revolution * 4 + Encoder_EL.Safe_start_value * 2;
 8001e00:	4b10      	ldr	r3, [pc, #64]	@ (8001e44 <MX_TIM4_Init+0xdc>)
 8001e02:	889b      	ldrh	r3, [r3, #4]
 8001e04:	005b      	lsls	r3, r3, #1
 8001e06:	4a0f      	ldr	r2, [pc, #60]	@ (8001e44 <MX_TIM4_Init+0xdc>)
 8001e08:	88d2      	ldrh	r2, [r2, #6]
 8001e0a:	4413      	add	r3, r2
 8001e0c:	005b      	lsls	r3, r3, #1
 8001e0e:	461a      	mov	r2, r3
 8001e10:	4b0a      	ldr	r3, [pc, #40]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001e12:	60da      	str	r2, [r3, #12]
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK) {Error_Handler();}
 8001e14:	f107 030c 	add.w	r3, r7, #12
 8001e18:	4619      	mov	r1, r3
 8001e1a:	4808      	ldr	r0, [pc, #32]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001e1c:	f001 fe5e 	bl	8003adc <HAL_TIM_Encoder_Init>
 8001e20:	4603      	mov	r3, r0
 8001e22:	2b00      	cmp	r3, #0
 8001e24:	d001      	beq.n	8001e2a <MX_TIM4_Init+0xc2>
 8001e26:	f000 f9c9 	bl	80021bc <Error_Handler>
  HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 8001e2a:	213c      	movs	r1, #60	@ 0x3c
 8001e2c:	4803      	ldr	r0, [pc, #12]	@ (8001e3c <MX_TIM4_Init+0xd4>)
 8001e2e:	f001 fefb 	bl	8003c28 <HAL_TIM_Encoder_Start>
  /* USER CODE END TIM4_Init 2 */

}
 8001e32:	bf00      	nop
 8001e34:	3730      	adds	r7, #48	@ 0x30
 8001e36:	46bd      	mov	sp, r7
 8001e38:	bd80      	pop	{r7, pc}
 8001e3a:	bf00      	nop
 8001e3c:	200001e4 	.word	0x200001e4
 8001e40:	40000800 	.word	0x40000800
 8001e44:	20000008 	.word	0x20000008

08001e48 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8001e48:	b580      	push	{r7, lr}
 8001e4a:	b08a      	sub	sp, #40	@ 0x28
 8001e4c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001e4e:	f107 0320 	add.w	r3, r7, #32
 8001e52:	2200      	movs	r2, #0
 8001e54:	601a      	str	r2, [r3, #0]
 8001e56:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001e58:	1d3b      	adds	r3, r7, #4
 8001e5a:	2200      	movs	r2, #0
 8001e5c:	601a      	str	r2, [r3, #0]
 8001e5e:	605a      	str	r2, [r3, #4]
 8001e60:	609a      	str	r2, [r3, #8]
 8001e62:	60da      	str	r2, [r3, #12]
 8001e64:	611a      	str	r2, [r3, #16]
 8001e66:	615a      	str	r2, [r3, #20]
 8001e68:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8001e6a:	4b24      	ldr	r3, [pc, #144]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001e6c:	4a24      	ldr	r2, [pc, #144]	@ (8001f00 <MX_TIM5_Init+0xb8>)
 8001e6e:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 100;
 8001e70:	4b22      	ldr	r3, [pc, #136]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001e72:	2264      	movs	r2, #100	@ 0x64
 8001e74:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e76:	4b21      	ldr	r3, [pc, #132]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001e78:	2200      	movs	r2, #0
 8001e7a:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8001e7c:	4b1f      	ldr	r3, [pc, #124]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001e7e:	f04f 32ff 	mov.w	r2, #4294967295
 8001e82:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e84:	4b1d      	ldr	r3, [pc, #116]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001e86:	2200      	movs	r2, #0
 8001e88:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e8a:	4b1c      	ldr	r3, [pc, #112]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001e8c:	2200      	movs	r2, #0
 8001e8e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8001e90:	481a      	ldr	r0, [pc, #104]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001e92:	f001 fc9b 	bl	80037cc <HAL_TIM_PWM_Init>
 8001e96:	4603      	mov	r3, r0
 8001e98:	2b00      	cmp	r3, #0
 8001e9a:	d001      	beq.n	8001ea0 <MX_TIM5_Init+0x58>
  {
    Error_Handler();
 8001e9c:	f000 f98e 	bl	80021bc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001ea0:	2300      	movs	r3, #0
 8001ea2:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001ea4:	2300      	movs	r3, #0
 8001ea6:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001ea8:	f107 0320 	add.w	r3, r7, #32
 8001eac:	4619      	mov	r1, r3
 8001eae:	4813      	ldr	r0, [pc, #76]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001eb0:	f002 fba8 	bl	8004604 <HAL_TIMEx_MasterConfigSynchronization>
 8001eb4:	4603      	mov	r3, r0
 8001eb6:	2b00      	cmp	r3, #0
 8001eb8:	d001      	beq.n	8001ebe <MX_TIM5_Init+0x76>
  {
    Error_Handler();
 8001eba:	f000 f97f 	bl	80021bc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001ebe:	2360      	movs	r3, #96	@ 0x60
 8001ec0:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 2152533152;
 8001ec2:	4b10      	ldr	r3, [pc, #64]	@ (8001f04 <MX_TIM5_Init+0xbc>)
 8001ec4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001ec6:	2300      	movs	r3, #0
 8001ec8:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001eca:	2300      	movs	r3, #0
 8001ecc:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001ece:	1d3b      	adds	r3, r7, #4
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	4619      	mov	r1, r3
 8001ed4:	4809      	ldr	r0, [pc, #36]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001ed6:	f002 f825 	bl	8003f24 <HAL_TIM_PWM_ConfigChannel>
 8001eda:	4603      	mov	r3, r0
 8001edc:	2b00      	cmp	r3, #0
 8001ede:	d001      	beq.n	8001ee4 <MX_TIM5_Init+0x9c>
  {
    Error_Handler();
 8001ee0:	f000 f96c 	bl	80021bc <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */
  HAL_TIM_PWM_Start(&htim5, TIM_CHANNEL_1);
 8001ee4:	2100      	movs	r1, #0
 8001ee6:	4805      	ldr	r0, [pc, #20]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001ee8:	f001 fcc0 	bl	800386c <HAL_TIM_PWM_Start>
  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
 8001eec:	4803      	ldr	r0, [pc, #12]	@ (8001efc <MX_TIM5_Init+0xb4>)
 8001eee:	f000 fa91 	bl	8002414 <HAL_TIM_MspPostInit>

}
 8001ef2:	bf00      	nop
 8001ef4:	3728      	adds	r7, #40	@ 0x28
 8001ef6:	46bd      	mov	sp, r7
 8001ef8:	bd80      	pop	{r7, pc}
 8001efa:	bf00      	nop
 8001efc:	2000022c 	.word	0x2000022c
 8001f00:	40000c00 	.word	0x40000c00
 8001f04:	804d0ca0 	.word	0x804d0ca0

08001f08 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8001f08:	b580      	push	{r7, lr}
 8001f0a:	b08c      	sub	sp, #48	@ 0x30
 8001f0c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8001f0e:	f107 030c 	add.w	r3, r7, #12
 8001f12:	2224      	movs	r2, #36	@ 0x24
 8001f14:	2100      	movs	r1, #0
 8001f16:	4618      	mov	r0, r3
 8001f18:	f003 fb82 	bl	8005620 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f1c:	1d3b      	adds	r3, r7, #4
 8001f1e:	2200      	movs	r2, #0
 8001f20:	601a      	str	r2, [r3, #0]
 8001f22:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8001f24:	4b2e      	ldr	r3, [pc, #184]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001f26:	4a2f      	ldr	r2, [pc, #188]	@ (8001fe4 <MX_TIM8_Init+0xdc>)
 8001f28:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 8001f2a:	4b2d      	ldr	r3, [pc, #180]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001f2c:	2200      	movs	r2, #0
 8001f2e:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f30:	4b2b      	ldr	r3, [pc, #172]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001f32:	2200      	movs	r2, #0
 8001f34:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 8001f36:	4b2a      	ldr	r3, [pc, #168]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001f38:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001f3c:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f3e:	4b28      	ldr	r3, [pc, #160]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001f40:	2200      	movs	r2, #0
 8001f42:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 8001f44:	4b26      	ldr	r3, [pc, #152]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001f46:	2200      	movs	r2, #0
 8001f48:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f4a:	4b25      	ldr	r3, [pc, #148]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001f4c:	2200      	movs	r2, #0
 8001f4e:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8001f50:	2303      	movs	r3, #3
 8001f52:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8001f54:	2300      	movs	r3, #0
 8001f56:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8001f58:	2301      	movs	r3, #1
 8001f5a:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8001f5c:	2300      	movs	r3, #0
 8001f5e:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 15;
 8001f60:	230f      	movs	r3, #15
 8001f62:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8001f64:	2300      	movs	r3, #0
 8001f66:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8001f68:	2301      	movs	r3, #1
 8001f6a:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8001f6c:	2300      	movs	r3, #0
 8001f6e:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 8001f70:	2300      	movs	r3, #0
 8001f72:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK)
 8001f74:	f107 030c 	add.w	r3, r7, #12
 8001f78:	4619      	mov	r1, r3
 8001f7a:	4819      	ldr	r0, [pc, #100]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001f7c:	f001 fdae 	bl	8003adc <HAL_TIM_Encoder_Init>
 8001f80:	4603      	mov	r3, r0
 8001f82:	2b00      	cmp	r3, #0
 8001f84:	d001      	beq.n	8001f8a <MX_TIM8_Init+0x82>
  {
    Error_Handler();
 8001f86:	f000 f919 	bl	80021bc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001f8a:	2300      	movs	r3, #0
 8001f8c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f8e:	2300      	movs	r3, #0
 8001f90:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8001f92:	1d3b      	adds	r3, r7, #4
 8001f94:	4619      	mov	r1, r3
 8001f96:	4812      	ldr	r0, [pc, #72]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001f98:	f002 fb34 	bl	8004604 <HAL_TIMEx_MasterConfigSynchronization>
 8001f9c:	4603      	mov	r3, r0
 8001f9e:	2b00      	cmp	r3, #0
 8001fa0:	d001      	beq.n	8001fa6 <MX_TIM8_Init+0x9e>
  {
    Error_Handler();
 8001fa2:	f000 f90b 	bl	80021bc <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */
  htim8.Init.Period = Encoder_AZ.Pulses_per_revolution * 4 + Encoder_AZ.Safe_start_value * 2;
 8001fa6:	4b10      	ldr	r3, [pc, #64]	@ (8001fe8 <MX_TIM8_Init+0xe0>)
 8001fa8:	889b      	ldrh	r3, [r3, #4]
 8001faa:	005b      	lsls	r3, r3, #1
 8001fac:	4a0e      	ldr	r2, [pc, #56]	@ (8001fe8 <MX_TIM8_Init+0xe0>)
 8001fae:	88d2      	ldrh	r2, [r2, #6]
 8001fb0:	4413      	add	r3, r2
 8001fb2:	005b      	lsls	r3, r3, #1
 8001fb4:	461a      	mov	r2, r3
 8001fb6:	4b0a      	ldr	r3, [pc, #40]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001fb8:	60da      	str	r2, [r3, #12]
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK) {Error_Handler();}
 8001fba:	f107 030c 	add.w	r3, r7, #12
 8001fbe:	4619      	mov	r1, r3
 8001fc0:	4807      	ldr	r0, [pc, #28]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001fc2:	f001 fd8b 	bl	8003adc <HAL_TIM_Encoder_Init>
 8001fc6:	4603      	mov	r3, r0
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	d001      	beq.n	8001fd0 <MX_TIM8_Init+0xc8>
 8001fcc:	f000 f8f6 	bl	80021bc <Error_Handler>
  HAL_TIM_Encoder_Start(&htim8, TIM_CHANNEL_ALL);
 8001fd0:	213c      	movs	r1, #60	@ 0x3c
 8001fd2:	4803      	ldr	r0, [pc, #12]	@ (8001fe0 <MX_TIM8_Init+0xd8>)
 8001fd4:	f001 fe28 	bl	8003c28 <HAL_TIM_Encoder_Start>
  /* USER CODE END TIM8_Init 2 */

}
 8001fd8:	bf00      	nop
 8001fda:	3730      	adds	r7, #48	@ 0x30
 8001fdc:	46bd      	mov	sp, r7
 8001fde:	bd80      	pop	{r7, pc}
 8001fe0:	20000274 	.word	0x20000274
 8001fe4:	40010400 	.word	0x40010400
 8001fe8:	20000000 	.word	0x20000000

08001fec <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001fec:	b580      	push	{r7, lr}
 8001fee:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001ff0:	4b11      	ldr	r3, [pc, #68]	@ (8002038 <MX_USART2_UART_Init+0x4c>)
 8001ff2:	4a12      	ldr	r2, [pc, #72]	@ (800203c <MX_USART2_UART_Init+0x50>)
 8001ff4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 921600;
 8001ff6:	4b10      	ldr	r3, [pc, #64]	@ (8002038 <MX_USART2_UART_Init+0x4c>)
 8001ff8:	f44f 2261 	mov.w	r2, #921600	@ 0xe1000
 8001ffc:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001ffe:	4b0e      	ldr	r3, [pc, #56]	@ (8002038 <MX_USART2_UART_Init+0x4c>)
 8002000:	2200      	movs	r2, #0
 8002002:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002004:	4b0c      	ldr	r3, [pc, #48]	@ (8002038 <MX_USART2_UART_Init+0x4c>)
 8002006:	2200      	movs	r2, #0
 8002008:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800200a:	4b0b      	ldr	r3, [pc, #44]	@ (8002038 <MX_USART2_UART_Init+0x4c>)
 800200c:	2200      	movs	r2, #0
 800200e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002010:	4b09      	ldr	r3, [pc, #36]	@ (8002038 <MX_USART2_UART_Init+0x4c>)
 8002012:	220c      	movs	r2, #12
 8002014:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002016:	4b08      	ldr	r3, [pc, #32]	@ (8002038 <MX_USART2_UART_Init+0x4c>)
 8002018:	2200      	movs	r2, #0
 800201a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800201c:	4b06      	ldr	r3, [pc, #24]	@ (8002038 <MX_USART2_UART_Init+0x4c>)
 800201e:	2200      	movs	r2, #0
 8002020:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002022:	4805      	ldr	r0, [pc, #20]	@ (8002038 <MX_USART2_UART_Init+0x4c>)
 8002024:	f002 fb7e 	bl	8004724 <HAL_UART_Init>
 8002028:	4603      	mov	r3, r0
 800202a:	2b00      	cmp	r3, #0
 800202c:	d001      	beq.n	8002032 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800202e:	f000 f8c5 	bl	80021bc <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002032:	bf00      	nop
 8002034:	bd80      	pop	{r7, pc}
 8002036:	bf00      	nop
 8002038:	200002bc 	.word	0x200002bc
 800203c:	40004400 	.word	0x40004400

08002040 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002040:	b580      	push	{r7, lr}
 8002042:	b08c      	sub	sp, #48	@ 0x30
 8002044:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002046:	f107 031c 	add.w	r3, r7, #28
 800204a:	2200      	movs	r2, #0
 800204c:	601a      	str	r2, [r3, #0]
 800204e:	605a      	str	r2, [r3, #4]
 8002050:	609a      	str	r2, [r3, #8]
 8002052:	60da      	str	r2, [r3, #12]
 8002054:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002056:	2300      	movs	r3, #0
 8002058:	61bb      	str	r3, [r7, #24]
 800205a:	4b40      	ldr	r3, [pc, #256]	@ (800215c <MX_GPIO_Init+0x11c>)
 800205c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800205e:	4a3f      	ldr	r2, [pc, #252]	@ (800215c <MX_GPIO_Init+0x11c>)
 8002060:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002064:	6313      	str	r3, [r2, #48]	@ 0x30
 8002066:	4b3d      	ldr	r3, [pc, #244]	@ (800215c <MX_GPIO_Init+0x11c>)
 8002068:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800206a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800206e:	61bb      	str	r3, [r7, #24]
 8002070:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002072:	2300      	movs	r3, #0
 8002074:	617b      	str	r3, [r7, #20]
 8002076:	4b39      	ldr	r3, [pc, #228]	@ (800215c <MX_GPIO_Init+0x11c>)
 8002078:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800207a:	4a38      	ldr	r2, [pc, #224]	@ (800215c <MX_GPIO_Init+0x11c>)
 800207c:	f043 0301 	orr.w	r3, r3, #1
 8002080:	6313      	str	r3, [r2, #48]	@ 0x30
 8002082:	4b36      	ldr	r3, [pc, #216]	@ (800215c <MX_GPIO_Init+0x11c>)
 8002084:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002086:	f003 0301 	and.w	r3, r3, #1
 800208a:	617b      	str	r3, [r7, #20]
 800208c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800208e:	2300      	movs	r3, #0
 8002090:	613b      	str	r3, [r7, #16]
 8002092:	4b32      	ldr	r3, [pc, #200]	@ (800215c <MX_GPIO_Init+0x11c>)
 8002094:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002096:	4a31      	ldr	r2, [pc, #196]	@ (800215c <MX_GPIO_Init+0x11c>)
 8002098:	f043 0310 	orr.w	r3, r3, #16
 800209c:	6313      	str	r3, [r2, #48]	@ 0x30
 800209e:	4b2f      	ldr	r3, [pc, #188]	@ (800215c <MX_GPIO_Init+0x11c>)
 80020a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020a2:	f003 0310 	and.w	r3, r3, #16
 80020a6:	613b      	str	r3, [r7, #16]
 80020a8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80020aa:	2300      	movs	r3, #0
 80020ac:	60fb      	str	r3, [r7, #12]
 80020ae:	4b2b      	ldr	r3, [pc, #172]	@ (800215c <MX_GPIO_Init+0x11c>)
 80020b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020b2:	4a2a      	ldr	r2, [pc, #168]	@ (800215c <MX_GPIO_Init+0x11c>)
 80020b4:	f043 0308 	orr.w	r3, r3, #8
 80020b8:	6313      	str	r3, [r2, #48]	@ 0x30
 80020ba:	4b28      	ldr	r3, [pc, #160]	@ (800215c <MX_GPIO_Init+0x11c>)
 80020bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020be:	f003 0308 	and.w	r3, r3, #8
 80020c2:	60fb      	str	r3, [r7, #12]
 80020c4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80020c6:	2300      	movs	r3, #0
 80020c8:	60bb      	str	r3, [r7, #8]
 80020ca:	4b24      	ldr	r3, [pc, #144]	@ (800215c <MX_GPIO_Init+0x11c>)
 80020cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020ce:	4a23      	ldr	r2, [pc, #140]	@ (800215c <MX_GPIO_Init+0x11c>)
 80020d0:	f043 0304 	orr.w	r3, r3, #4
 80020d4:	6313      	str	r3, [r2, #48]	@ 0x30
 80020d6:	4b21      	ldr	r3, [pc, #132]	@ (800215c <MX_GPIO_Init+0x11c>)
 80020d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020da:	f003 0304 	and.w	r3, r3, #4
 80020de:	60bb      	str	r3, [r7, #8]
 80020e0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80020e2:	2300      	movs	r3, #0
 80020e4:	607b      	str	r3, [r7, #4]
 80020e6:	4b1d      	ldr	r3, [pc, #116]	@ (800215c <MX_GPIO_Init+0x11c>)
 80020e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020ea:	4a1c      	ldr	r2, [pc, #112]	@ (800215c <MX_GPIO_Init+0x11c>)
 80020ec:	f043 0302 	orr.w	r3, r3, #2
 80020f0:	6313      	str	r3, [r2, #48]	@ 0x30
 80020f2:	4b1a      	ldr	r3, [pc, #104]	@ (800215c <MX_GPIO_Init+0x11c>)
 80020f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020f6:	f003 0302 	and.w	r3, r3, #2
 80020fa:	607b      	str	r3, [r7, #4]
 80020fc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_11|GPIO_PIN_12, GPIO_PIN_SET);
 80020fe:	2201      	movs	r2, #1
 8002100:	f44f 51d8 	mov.w	r1, #6912	@ 0x1b00
 8002104:	4816      	ldr	r0, [pc, #88]	@ (8002160 <MX_GPIO_Init+0x120>)
 8002106:	f000 feaf 	bl	8002e68 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 800210a:	2200      	movs	r2, #0
 800210c:	f44f 4170 	mov.w	r1, #61440	@ 0xf000
 8002110:	4814      	ldr	r0, [pc, #80]	@ (8002164 <MX_GPIO_Init+0x124>)
 8002112:	f000 fea9 	bl	8002e68 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PE8 PE9 PE11 PE12 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_11|GPIO_PIN_12;
 8002116:	f44f 53d8 	mov.w	r3, #6912	@ 0x1b00
 800211a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800211c:	2301      	movs	r3, #1
 800211e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002120:	2300      	movs	r3, #0
 8002122:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002124:	2303      	movs	r3, #3
 8002126:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002128:	f107 031c 	add.w	r3, r7, #28
 800212c:	4619      	mov	r1, r3
 800212e:	480c      	ldr	r0, [pc, #48]	@ (8002160 <MX_GPIO_Init+0x120>)
 8002130:	f000 fcfe 	bl	8002b30 <HAL_GPIO_Init>

  /*Configure GPIO pins : PD12 PD13 PD14 PD15 */
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 8002134:	f44f 4370 	mov.w	r3, #61440	@ 0xf000
 8002138:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800213a:	2301      	movs	r3, #1
 800213c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800213e:	2300      	movs	r3, #0
 8002140:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002142:	2303      	movs	r3, #3
 8002144:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002146:	f107 031c 	add.w	r3, r7, #28
 800214a:	4619      	mov	r1, r3
 800214c:	4805      	ldr	r0, [pc, #20]	@ (8002164 <MX_GPIO_Init+0x124>)
 800214e:	f000 fcef 	bl	8002b30 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8002152:	bf00      	nop
 8002154:	3730      	adds	r7, #48	@ 0x30
 8002156:	46bd      	mov	sp, r7
 8002158:	bd80      	pop	{r7, pc}
 800215a:	bf00      	nop
 800215c:	40023800 	.word	0x40023800
 8002160:	40021000 	.word	0x40021000
 8002164:	40020c00 	.word	0x40020c00

08002168 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8002168:	b580      	push	{r7, lr}
 800216a:	b082      	sub	sp, #8
 800216c:	af00      	add	r7, sp, #0
 800216e:	6078      	str	r0, [r7, #4]
	Raspberry_DatPpars(RP_message.Rx_data);
 8002170:	4807      	ldr	r0, [pc, #28]	@ (8002190 <HAL_UART_RxCpltCallback+0x28>)
 8002172:	f7ff f9c5 	bl	8001500 <Raspberry_DatPpars>
	HAL_UART_Receive_IT(RP_message.UART_port, (uint8_t*)RP_message.Rx_data, Size_Rx_UART);
 8002176:	4b07      	ldr	r3, [pc, #28]	@ (8002194 <HAL_UART_RxCpltCallback+0x2c>)
 8002178:	681b      	ldr	r3, [r3, #0]
 800217a:	4a07      	ldr	r2, [pc, #28]	@ (8002198 <HAL_UART_RxCpltCallback+0x30>)
 800217c:	6812      	ldr	r2, [r2, #0]
 800217e:	b292      	uxth	r2, r2
 8002180:	4903      	ldr	r1, [pc, #12]	@ (8002190 <HAL_UART_RxCpltCallback+0x28>)
 8002182:	4618      	mov	r0, r3
 8002184:	f002 fb1e 	bl	80047c4 <HAL_UART_Receive_IT>
};
 8002188:	bf00      	nop
 800218a:	3708      	adds	r7, #8
 800218c:	46bd      	mov	sp, r7
 800218e:	bd80      	pop	{r7, pc}
 8002190:	20000125 	.word	0x20000125
 8002194:	20000120 	.word	0x20000120
 8002198:	20000304 	.word	0x20000304

0800219c <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {RP_message.transmitting = 0;}
 800219c:	b480      	push	{r7}
 800219e:	b083      	sub	sp, #12
 80021a0:	af00      	add	r7, sp, #0
 80021a2:	6078      	str	r0, [r7, #4]
 80021a4:	4b04      	ldr	r3, [pc, #16]	@ (80021b8 <HAL_UART_TxCpltCallback+0x1c>)
 80021a6:	2200      	movs	r2, #0
 80021a8:	711a      	strb	r2, [r3, #4]
 80021aa:	bf00      	nop
 80021ac:	370c      	adds	r7, #12
 80021ae:	46bd      	mov	sp, r7
 80021b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021b4:	4770      	bx	lr
 80021b6:	bf00      	nop
 80021b8:	20000120 	.word	0x20000120

080021bc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80021bc:	b580      	push	{r7, lr}
 80021be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET);
 80021c0:	2200      	movs	r2, #0
 80021c2:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80021c6:	4816      	ldr	r0, [pc, #88]	@ (8002220 <Error_Handler+0x64>)
 80021c8:	f000 fe4e 	bl	8002e68 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80021cc:	2200      	movs	r2, #0
 80021ce:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80021d2:	4813      	ldr	r0, [pc, #76]	@ (8002220 <Error_Handler+0x64>)
 80021d4:	f000 fe48 	bl	8002e68 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET);
 80021d8:	2200      	movs	r2, #0
 80021da:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80021de:	4810      	ldr	r0, [pc, #64]	@ (8002220 <Error_Handler+0x64>)
 80021e0:	f000 fe42 	bl	8002e68 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_RESET);
 80021e4:	2200      	movs	r2, #0
 80021e6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80021ea:	480d      	ldr	r0, [pc, #52]	@ (8002220 <Error_Handler+0x64>)
 80021ec:	f000 fe3c 	bl	8002e68 <HAL_GPIO_WritePin>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80021f0:	b672      	cpsid	i
}
 80021f2:	bf00      	nop
  __disable_irq();
  while (1)
  {
    HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_SET);
 80021f4:	2201      	movs	r2, #1
 80021f6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80021fa:	4809      	ldr	r0, [pc, #36]	@ (8002220 <Error_Handler+0x64>)
 80021fc:	f000 fe34 	bl	8002e68 <HAL_GPIO_WritePin>
    HAL_Delay(500);
 8002200:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8002204:	f000 facc 	bl	80027a0 <HAL_Delay>
    HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_RESET);
 8002208:	2200      	movs	r2, #0
 800220a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800220e:	4804      	ldr	r0, [pc, #16]	@ (8002220 <Error_Handler+0x64>)
 8002210:	f000 fe2a 	bl	8002e68 <HAL_GPIO_WritePin>
    HAL_Delay(500);
 8002214:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8002218:	f000 fac2 	bl	80027a0 <HAL_Delay>
    HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_SET);
 800221c:	bf00      	nop
 800221e:	e7e9      	b.n	80021f4 <Error_Handler+0x38>
 8002220:	40020c00 	.word	0x40020c00

08002224 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002224:	b480      	push	{r7}
 8002226:	b083      	sub	sp, #12
 8002228:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800222a:	2300      	movs	r3, #0
 800222c:	607b      	str	r3, [r7, #4]
 800222e:	4b10      	ldr	r3, [pc, #64]	@ (8002270 <HAL_MspInit+0x4c>)
 8002230:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002232:	4a0f      	ldr	r2, [pc, #60]	@ (8002270 <HAL_MspInit+0x4c>)
 8002234:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002238:	6453      	str	r3, [r2, #68]	@ 0x44
 800223a:	4b0d      	ldr	r3, [pc, #52]	@ (8002270 <HAL_MspInit+0x4c>)
 800223c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800223e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002242:	607b      	str	r3, [r7, #4]
 8002244:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002246:	2300      	movs	r3, #0
 8002248:	603b      	str	r3, [r7, #0]
 800224a:	4b09      	ldr	r3, [pc, #36]	@ (8002270 <HAL_MspInit+0x4c>)
 800224c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800224e:	4a08      	ldr	r2, [pc, #32]	@ (8002270 <HAL_MspInit+0x4c>)
 8002250:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002254:	6413      	str	r3, [r2, #64]	@ 0x40
 8002256:	4b06      	ldr	r3, [pc, #24]	@ (8002270 <HAL_MspInit+0x4c>)
 8002258:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800225a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800225e:	603b      	str	r3, [r7, #0]
 8002260:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002262:	bf00      	nop
 8002264:	370c      	adds	r7, #12
 8002266:	46bd      	mov	sp, r7
 8002268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800226c:	4770      	bx	lr
 800226e:	bf00      	nop
 8002270:	40023800 	.word	0x40023800

08002274 <HAL_TIM_PWM_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_pwm: TIM_PWM handle pointer
  * @retval None
  */
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8002274:	b580      	push	{r7, lr}
 8002276:	b086      	sub	sp, #24
 8002278:	af00      	add	r7, sp, #0
 800227a:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM2)
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	681b      	ldr	r3, [r3, #0]
 8002280:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002284:	d10e      	bne.n	80022a4 <HAL_TIM_PWM_MspInit+0x30>
  {
    /* USER CODE BEGIN TIM2_MspInit 0 */

    /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002286:	2300      	movs	r3, #0
 8002288:	617b      	str	r3, [r7, #20]
 800228a:	4b20      	ldr	r3, [pc, #128]	@ (800230c <HAL_TIM_PWM_MspInit+0x98>)
 800228c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800228e:	4a1f      	ldr	r2, [pc, #124]	@ (800230c <HAL_TIM_PWM_MspInit+0x98>)
 8002290:	f043 0301 	orr.w	r3, r3, #1
 8002294:	6413      	str	r3, [r2, #64]	@ 0x40
 8002296:	4b1d      	ldr	r3, [pc, #116]	@ (800230c <HAL_TIM_PWM_MspInit+0x98>)
 8002298:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800229a:	f003 0301 	and.w	r3, r3, #1
 800229e:	617b      	str	r3, [r7, #20]
 80022a0:	697b      	ldr	r3, [r7, #20]
    /* USER CODE BEGIN TIM5_MspInit 1 */

    /* USER CODE END TIM5_MspInit 1 */
  }

}
 80022a2:	e02e      	b.n	8002302 <HAL_TIM_PWM_MspInit+0x8e>
  else if(htim_pwm->Instance==TIM3)
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	4a19      	ldr	r2, [pc, #100]	@ (8002310 <HAL_TIM_PWM_MspInit+0x9c>)
 80022aa:	4293      	cmp	r3, r2
 80022ac:	d10e      	bne.n	80022cc <HAL_TIM_PWM_MspInit+0x58>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80022ae:	2300      	movs	r3, #0
 80022b0:	613b      	str	r3, [r7, #16]
 80022b2:	4b16      	ldr	r3, [pc, #88]	@ (800230c <HAL_TIM_PWM_MspInit+0x98>)
 80022b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022b6:	4a15      	ldr	r2, [pc, #84]	@ (800230c <HAL_TIM_PWM_MspInit+0x98>)
 80022b8:	f043 0302 	orr.w	r3, r3, #2
 80022bc:	6413      	str	r3, [r2, #64]	@ 0x40
 80022be:	4b13      	ldr	r3, [pc, #76]	@ (800230c <HAL_TIM_PWM_MspInit+0x98>)
 80022c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022c2:	f003 0302 	and.w	r3, r3, #2
 80022c6:	613b      	str	r3, [r7, #16]
 80022c8:	693b      	ldr	r3, [r7, #16]
}
 80022ca:	e01a      	b.n	8002302 <HAL_TIM_PWM_MspInit+0x8e>
  else if(htim_pwm->Instance==TIM5)
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	4a10      	ldr	r2, [pc, #64]	@ (8002314 <HAL_TIM_PWM_MspInit+0xa0>)
 80022d2:	4293      	cmp	r3, r2
 80022d4:	d115      	bne.n	8002302 <HAL_TIM_PWM_MspInit+0x8e>
    __HAL_RCC_TIM5_CLK_ENABLE();
 80022d6:	2300      	movs	r3, #0
 80022d8:	60fb      	str	r3, [r7, #12]
 80022da:	4b0c      	ldr	r3, [pc, #48]	@ (800230c <HAL_TIM_PWM_MspInit+0x98>)
 80022dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022de:	4a0b      	ldr	r2, [pc, #44]	@ (800230c <HAL_TIM_PWM_MspInit+0x98>)
 80022e0:	f043 0308 	orr.w	r3, r3, #8
 80022e4:	6413      	str	r3, [r2, #64]	@ 0x40
 80022e6:	4b09      	ldr	r3, [pc, #36]	@ (800230c <HAL_TIM_PWM_MspInit+0x98>)
 80022e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022ea:	f003 0308 	and.w	r3, r3, #8
 80022ee:	60fb      	str	r3, [r7, #12]
 80022f0:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM5_IRQn, 0, 0);
 80022f2:	2200      	movs	r2, #0
 80022f4:	2100      	movs	r1, #0
 80022f6:	2032      	movs	r0, #50	@ 0x32
 80022f8:	f000 fb51 	bl	800299e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM5_IRQn);
 80022fc:	2032      	movs	r0, #50	@ 0x32
 80022fe:	f000 fb6a 	bl	80029d6 <HAL_NVIC_EnableIRQ>
}
 8002302:	bf00      	nop
 8002304:	3718      	adds	r7, #24
 8002306:	46bd      	mov	sp, r7
 8002308:	bd80      	pop	{r7, pc}
 800230a:	bf00      	nop
 800230c:	40023800 	.word	0x40023800
 8002310:	40000400 	.word	0x40000400
 8002314:	40000c00 	.word	0x40000c00

08002318 <HAL_TIM_Encoder_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_encoder: TIM_Encoder handle pointer
  * @retval None
  */
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 8002318:	b580      	push	{r7, lr}
 800231a:	b08c      	sub	sp, #48	@ 0x30
 800231c:	af00      	add	r7, sp, #0
 800231e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002320:	f107 031c 	add.w	r3, r7, #28
 8002324:	2200      	movs	r2, #0
 8002326:	601a      	str	r2, [r3, #0]
 8002328:	605a      	str	r2, [r3, #4]
 800232a:	609a      	str	r2, [r3, #8]
 800232c:	60da      	str	r2, [r3, #12]
 800232e:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM4)
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	4a32      	ldr	r2, [pc, #200]	@ (8002400 <HAL_TIM_Encoder_MspInit+0xe8>)
 8002336:	4293      	cmp	r3, r2
 8002338:	d12c      	bne.n	8002394 <HAL_TIM_Encoder_MspInit+0x7c>
  {
    /* USER CODE BEGIN TIM4_MspInit 0 */

    /* USER CODE END TIM4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 800233a:	2300      	movs	r3, #0
 800233c:	61bb      	str	r3, [r7, #24]
 800233e:	4b31      	ldr	r3, [pc, #196]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 8002340:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002342:	4a30      	ldr	r2, [pc, #192]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 8002344:	f043 0304 	orr.w	r3, r3, #4
 8002348:	6413      	str	r3, [r2, #64]	@ 0x40
 800234a:	4b2e      	ldr	r3, [pc, #184]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 800234c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800234e:	f003 0304 	and.w	r3, r3, #4
 8002352:	61bb      	str	r3, [r7, #24]
 8002354:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002356:	2300      	movs	r3, #0
 8002358:	617b      	str	r3, [r7, #20]
 800235a:	4b2a      	ldr	r3, [pc, #168]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 800235c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800235e:	4a29      	ldr	r2, [pc, #164]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 8002360:	f043 0302 	orr.w	r3, r3, #2
 8002364:	6313      	str	r3, [r2, #48]	@ 0x30
 8002366:	4b27      	ldr	r3, [pc, #156]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 8002368:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800236a:	f003 0302 	and.w	r3, r3, #2
 800236e:	617b      	str	r3, [r7, #20]
 8002370:	697b      	ldr	r3, [r7, #20]
    /**TIM4 GPIO Configuration
    PB6     ------> TIM4_CH1
    PB7     ------> TIM4_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002372:	23c0      	movs	r3, #192	@ 0xc0
 8002374:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002376:	2302      	movs	r3, #2
 8002378:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800237a:	2301      	movs	r3, #1
 800237c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800237e:	2303      	movs	r3, #3
 8002380:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8002382:	2302      	movs	r3, #2
 8002384:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002386:	f107 031c 	add.w	r3, r7, #28
 800238a:	4619      	mov	r1, r3
 800238c:	481e      	ldr	r0, [pc, #120]	@ (8002408 <HAL_TIM_Encoder_MspInit+0xf0>)
 800238e:	f000 fbcf 	bl	8002b30 <HAL_GPIO_Init>
    /* USER CODE BEGIN TIM8_MspInit 1 */

    /* USER CODE END TIM8_MspInit 1 */
  }

}
 8002392:	e030      	b.n	80023f6 <HAL_TIM_Encoder_MspInit+0xde>
  else if(htim_encoder->Instance==TIM8)
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	4a1c      	ldr	r2, [pc, #112]	@ (800240c <HAL_TIM_Encoder_MspInit+0xf4>)
 800239a:	4293      	cmp	r3, r2
 800239c:	d12b      	bne.n	80023f6 <HAL_TIM_Encoder_MspInit+0xde>
    __HAL_RCC_TIM8_CLK_ENABLE();
 800239e:	2300      	movs	r3, #0
 80023a0:	613b      	str	r3, [r7, #16]
 80023a2:	4b18      	ldr	r3, [pc, #96]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 80023a4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023a6:	4a17      	ldr	r2, [pc, #92]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 80023a8:	f043 0302 	orr.w	r3, r3, #2
 80023ac:	6453      	str	r3, [r2, #68]	@ 0x44
 80023ae:	4b15      	ldr	r3, [pc, #84]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 80023b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023b2:	f003 0302 	and.w	r3, r3, #2
 80023b6:	613b      	str	r3, [r7, #16]
 80023b8:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023ba:	2300      	movs	r3, #0
 80023bc:	60fb      	str	r3, [r7, #12]
 80023be:	4b11      	ldr	r3, [pc, #68]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 80023c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023c2:	4a10      	ldr	r2, [pc, #64]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 80023c4:	f043 0304 	orr.w	r3, r3, #4
 80023c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80023ca:	4b0e      	ldr	r3, [pc, #56]	@ (8002404 <HAL_TIM_Encoder_MspInit+0xec>)
 80023cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023ce:	f003 0304 	and.w	r3, r3, #4
 80023d2:	60fb      	str	r3, [r7, #12]
 80023d4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80023d6:	23c0      	movs	r3, #192	@ 0xc0
 80023d8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023da:	2302      	movs	r3, #2
 80023dc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80023de:	2301      	movs	r3, #1
 80023e0:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023e2:	2303      	movs	r3, #3
 80023e4:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 80023e6:	2303      	movs	r3, #3
 80023e8:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023ea:	f107 031c 	add.w	r3, r7, #28
 80023ee:	4619      	mov	r1, r3
 80023f0:	4807      	ldr	r0, [pc, #28]	@ (8002410 <HAL_TIM_Encoder_MspInit+0xf8>)
 80023f2:	f000 fb9d 	bl	8002b30 <HAL_GPIO_Init>
}
 80023f6:	bf00      	nop
 80023f8:	3730      	adds	r7, #48	@ 0x30
 80023fa:	46bd      	mov	sp, r7
 80023fc:	bd80      	pop	{r7, pc}
 80023fe:	bf00      	nop
 8002400:	40000800 	.word	0x40000800
 8002404:	40023800 	.word	0x40023800
 8002408:	40020400 	.word	0x40020400
 800240c:	40010400 	.word	0x40010400
 8002410:	40020800 	.word	0x40020800

08002414 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002414:	b580      	push	{r7, lr}
 8002416:	b08a      	sub	sp, #40	@ 0x28
 8002418:	af00      	add	r7, sp, #0
 800241a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800241c:	f107 0314 	add.w	r3, r7, #20
 8002420:	2200      	movs	r2, #0
 8002422:	601a      	str	r2, [r3, #0]
 8002424:	605a      	str	r2, [r3, #4]
 8002426:	609a      	str	r2, [r3, #8]
 8002428:	60da      	str	r2, [r3, #12]
 800242a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	681b      	ldr	r3, [r3, #0]
 8002430:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002434:	d11e      	bne.n	8002474 <HAL_TIM_MspPostInit+0x60>
  {
    /* USER CODE BEGIN TIM2_MspPostInit 0 */

    /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002436:	2300      	movs	r3, #0
 8002438:	613b      	str	r3, [r7, #16]
 800243a:	4b34      	ldr	r3, [pc, #208]	@ (800250c <HAL_TIM_MspPostInit+0xf8>)
 800243c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800243e:	4a33      	ldr	r2, [pc, #204]	@ (800250c <HAL_TIM_MspPostInit+0xf8>)
 8002440:	f043 0301 	orr.w	r3, r3, #1
 8002444:	6313      	str	r3, [r2, #48]	@ 0x30
 8002446:	4b31      	ldr	r3, [pc, #196]	@ (800250c <HAL_TIM_MspPostInit+0xf8>)
 8002448:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800244a:	f003 0301 	and.w	r3, r3, #1
 800244e:	613b      	str	r3, [r7, #16]
 8002450:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA5     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8002452:	2320      	movs	r3, #32
 8002454:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002456:	2302      	movs	r3, #2
 8002458:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800245a:	2300      	movs	r3, #0
 800245c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800245e:	2300      	movs	r3, #0
 8002460:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002462:	2301      	movs	r3, #1
 8002464:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002466:	f107 0314 	add.w	r3, r7, #20
 800246a:	4619      	mov	r1, r3
 800246c:	4828      	ldr	r0, [pc, #160]	@ (8002510 <HAL_TIM_MspPostInit+0xfc>)
 800246e:	f000 fb5f 	bl	8002b30 <HAL_GPIO_Init>
    /* USER CODE BEGIN TIM5_MspPostInit 1 */

    /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 8002472:	e046      	b.n	8002502 <HAL_TIM_MspPostInit+0xee>
  else if(htim->Instance==TIM3)
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	4a26      	ldr	r2, [pc, #152]	@ (8002514 <HAL_TIM_MspPostInit+0x100>)
 800247a:	4293      	cmp	r3, r2
 800247c:	d11e      	bne.n	80024bc <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800247e:	2300      	movs	r3, #0
 8002480:	60fb      	str	r3, [r7, #12]
 8002482:	4b22      	ldr	r3, [pc, #136]	@ (800250c <HAL_TIM_MspPostInit+0xf8>)
 8002484:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002486:	4a21      	ldr	r2, [pc, #132]	@ (800250c <HAL_TIM_MspPostInit+0xf8>)
 8002488:	f043 0301 	orr.w	r3, r3, #1
 800248c:	6313      	str	r3, [r2, #48]	@ 0x30
 800248e:	4b1f      	ldr	r3, [pc, #124]	@ (800250c <HAL_TIM_MspPostInit+0xf8>)
 8002490:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002492:	f003 0301 	and.w	r3, r3, #1
 8002496:	60fb      	str	r3, [r7, #12]
 8002498:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 800249a:	2340      	movs	r3, #64	@ 0x40
 800249c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800249e:	2302      	movs	r3, #2
 80024a0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024a2:	2300      	movs	r3, #0
 80024a4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80024a6:	2300      	movs	r3, #0
 80024a8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80024aa:	2302      	movs	r3, #2
 80024ac:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024ae:	f107 0314 	add.w	r3, r7, #20
 80024b2:	4619      	mov	r1, r3
 80024b4:	4816      	ldr	r0, [pc, #88]	@ (8002510 <HAL_TIM_MspPostInit+0xfc>)
 80024b6:	f000 fb3b 	bl	8002b30 <HAL_GPIO_Init>
}
 80024ba:	e022      	b.n	8002502 <HAL_TIM_MspPostInit+0xee>
  else if(htim->Instance==TIM5)
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	4a15      	ldr	r2, [pc, #84]	@ (8002518 <HAL_TIM_MspPostInit+0x104>)
 80024c2:	4293      	cmp	r3, r2
 80024c4:	d11d      	bne.n	8002502 <HAL_TIM_MspPostInit+0xee>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024c6:	2300      	movs	r3, #0
 80024c8:	60bb      	str	r3, [r7, #8]
 80024ca:	4b10      	ldr	r3, [pc, #64]	@ (800250c <HAL_TIM_MspPostInit+0xf8>)
 80024cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024ce:	4a0f      	ldr	r2, [pc, #60]	@ (800250c <HAL_TIM_MspPostInit+0xf8>)
 80024d0:	f043 0301 	orr.w	r3, r3, #1
 80024d4:	6313      	str	r3, [r2, #48]	@ 0x30
 80024d6:	4b0d      	ldr	r3, [pc, #52]	@ (800250c <HAL_TIM_MspPostInit+0xf8>)
 80024d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024da:	f003 0301 	and.w	r3, r3, #1
 80024de:	60bb      	str	r3, [r7, #8]
 80024e0:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80024e2:	2301      	movs	r3, #1
 80024e4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024e6:	2302      	movs	r3, #2
 80024e8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024ea:	2300      	movs	r3, #0
 80024ec:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024ee:	2303      	movs	r3, #3
 80024f0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 80024f2:	2302      	movs	r3, #2
 80024f4:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024f6:	f107 0314 	add.w	r3, r7, #20
 80024fa:	4619      	mov	r1, r3
 80024fc:	4804      	ldr	r0, [pc, #16]	@ (8002510 <HAL_TIM_MspPostInit+0xfc>)
 80024fe:	f000 fb17 	bl	8002b30 <HAL_GPIO_Init>
}
 8002502:	bf00      	nop
 8002504:	3728      	adds	r7, #40	@ 0x28
 8002506:	46bd      	mov	sp, r7
 8002508:	bd80      	pop	{r7, pc}
 800250a:	bf00      	nop
 800250c:	40023800 	.word	0x40023800
 8002510:	40020000 	.word	0x40020000
 8002514:	40000400 	.word	0x40000400
 8002518:	40000c00 	.word	0x40000c00

0800251c <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800251c:	b580      	push	{r7, lr}
 800251e:	b08a      	sub	sp, #40	@ 0x28
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002524:	f107 0314 	add.w	r3, r7, #20
 8002528:	2200      	movs	r2, #0
 800252a:	601a      	str	r2, [r3, #0]
 800252c:	605a      	str	r2, [r3, #4]
 800252e:	609a      	str	r2, [r3, #8]
 8002530:	60da      	str	r2, [r3, #12]
 8002532:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	4a1d      	ldr	r2, [pc, #116]	@ (80025b0 <HAL_UART_MspInit+0x94>)
 800253a:	4293      	cmp	r3, r2
 800253c:	d133      	bne.n	80025a6 <HAL_UART_MspInit+0x8a>
  {
    /* USER CODE BEGIN USART2_MspInit 0 */

    /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 800253e:	2300      	movs	r3, #0
 8002540:	613b      	str	r3, [r7, #16]
 8002542:	4b1c      	ldr	r3, [pc, #112]	@ (80025b4 <HAL_UART_MspInit+0x98>)
 8002544:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002546:	4a1b      	ldr	r2, [pc, #108]	@ (80025b4 <HAL_UART_MspInit+0x98>)
 8002548:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800254c:	6413      	str	r3, [r2, #64]	@ 0x40
 800254e:	4b19      	ldr	r3, [pc, #100]	@ (80025b4 <HAL_UART_MspInit+0x98>)
 8002550:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002552:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002556:	613b      	str	r3, [r7, #16]
 8002558:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 800255a:	2300      	movs	r3, #0
 800255c:	60fb      	str	r3, [r7, #12]
 800255e:	4b15      	ldr	r3, [pc, #84]	@ (80025b4 <HAL_UART_MspInit+0x98>)
 8002560:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002562:	4a14      	ldr	r2, [pc, #80]	@ (80025b4 <HAL_UART_MspInit+0x98>)
 8002564:	f043 0308 	orr.w	r3, r3, #8
 8002568:	6313      	str	r3, [r2, #48]	@ 0x30
 800256a:	4b12      	ldr	r3, [pc, #72]	@ (80025b4 <HAL_UART_MspInit+0x98>)
 800256c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800256e:	f003 0308 	and.w	r3, r3, #8
 8002572:	60fb      	str	r3, [r7, #12]
 8002574:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PD5     ------> USART2_TX
    PD6     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002576:	2360      	movs	r3, #96	@ 0x60
 8002578:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800257a:	2302      	movs	r3, #2
 800257c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800257e:	2300      	movs	r3, #0
 8002580:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002582:	2303      	movs	r3, #3
 8002584:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002586:	2307      	movs	r3, #7
 8002588:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800258a:	f107 0314 	add.w	r3, r7, #20
 800258e:	4619      	mov	r1, r3
 8002590:	4809      	ldr	r0, [pc, #36]	@ (80025b8 <HAL_UART_MspInit+0x9c>)
 8002592:	f000 facd 	bl	8002b30 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8002596:	2200      	movs	r2, #0
 8002598:	2100      	movs	r1, #0
 800259a:	2026      	movs	r0, #38	@ 0x26
 800259c:	f000 f9ff 	bl	800299e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 80025a0:	2026      	movs	r0, #38	@ 0x26
 80025a2:	f000 fa18 	bl	80029d6 <HAL_NVIC_EnableIRQ>

    /* USER CODE END USART2_MspInit 1 */

  }

}
 80025a6:	bf00      	nop
 80025a8:	3728      	adds	r7, #40	@ 0x28
 80025aa:	46bd      	mov	sp, r7
 80025ac:	bd80      	pop	{r7, pc}
 80025ae:	bf00      	nop
 80025b0:	40004400 	.word	0x40004400
 80025b4:	40023800 	.word	0x40023800
 80025b8:	40020c00 	.word	0x40020c00

080025bc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80025bc:	b480      	push	{r7}
 80025be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80025c0:	bf00      	nop
 80025c2:	e7fd      	b.n	80025c0 <NMI_Handler+0x4>

080025c4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80025c4:	b480      	push	{r7}
 80025c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80025c8:	bf00      	nop
 80025ca:	e7fd      	b.n	80025c8 <HardFault_Handler+0x4>

080025cc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80025cc:	b480      	push	{r7}
 80025ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80025d0:	bf00      	nop
 80025d2:	e7fd      	b.n	80025d0 <MemManage_Handler+0x4>

080025d4 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80025d4:	b480      	push	{r7}
 80025d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80025d8:	bf00      	nop
 80025da:	e7fd      	b.n	80025d8 <BusFault_Handler+0x4>

080025dc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80025dc:	b480      	push	{r7}
 80025de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80025e0:	bf00      	nop
 80025e2:	e7fd      	b.n	80025e0 <UsageFault_Handler+0x4>

080025e4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80025e4:	b480      	push	{r7}
 80025e6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80025e8:	bf00      	nop
 80025ea:	46bd      	mov	sp, r7
 80025ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025f0:	4770      	bx	lr

080025f2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80025f2:	b480      	push	{r7}
 80025f4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80025f6:	bf00      	nop
 80025f8:	46bd      	mov	sp, r7
 80025fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025fe:	4770      	bx	lr

08002600 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002600:	b480      	push	{r7}
 8002602:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002604:	bf00      	nop
 8002606:	46bd      	mov	sp, r7
 8002608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800260c:	4770      	bx	lr

0800260e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800260e:	b580      	push	{r7, lr}
 8002610:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002612:	f000 f8a5 	bl	8002760 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002616:	bf00      	nop
 8002618:	bd80      	pop	{r7, pc}
	...

0800261c <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 800261c:	b580      	push	{r7, lr}
 800261e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002620:	4802      	ldr	r0, [pc, #8]	@ (800262c <USART2_IRQHandler+0x10>)
 8002622:	f002 f8f5 	bl	8004810 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8002626:	bf00      	nop
 8002628:	bd80      	pop	{r7, pc}
 800262a:	bf00      	nop
 800262c:	200002bc 	.word	0x200002bc

08002630 <TIM5_IRQHandler>:

/**
  * @brief This function handles TIM5 global interrupt.
  */
void TIM5_IRQHandler(void)
{
 8002630:	b580      	push	{r7, lr}
 8002632:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM5_IRQn 0 */

  /* USER CODE END TIM5_IRQn 0 */
  HAL_TIM_IRQHandler(&htim5);
 8002634:	4802      	ldr	r0, [pc, #8]	@ (8002640 <TIM5_IRQHandler+0x10>)
 8002636:	f001 fb85 	bl	8003d44 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM5_IRQn 1 */

  /* USER CODE END TIM5_IRQn 1 */
}
 800263a:	bf00      	nop
 800263c:	bd80      	pop	{r7, pc}
 800263e:	bf00      	nop
 8002640:	2000022c 	.word	0x2000022c

08002644 <SystemInit>:
 8002644:	b480      	push	{r7}
 8002646:	af00      	add	r7, sp, #0
 8002648:	4b06      	ldr	r3, [pc, #24]	@ (8002664 <SystemInit+0x20>)
 800264a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800264e:	4a05      	ldr	r2, [pc, #20]	@ (8002664 <SystemInit+0x20>)
 8002650:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002654:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002658:	bf00      	nop
 800265a:	46bd      	mov	sp, r7
 800265c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002660:	4770      	bx	lr
 8002662:	bf00      	nop
 8002664:	e000ed00 	.word	0xe000ed00

08002668 <Reset_Handler>:
 8002668:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80026a0 <LoopFillZerobss+0xe>
 800266c:	f7ff ffea 	bl	8002644 <SystemInit>
 8002670:	480c      	ldr	r0, [pc, #48]	@ (80026a4 <LoopFillZerobss+0x12>)
 8002672:	490d      	ldr	r1, [pc, #52]	@ (80026a8 <LoopFillZerobss+0x16>)
 8002674:	4a0d      	ldr	r2, [pc, #52]	@ (80026ac <LoopFillZerobss+0x1a>)
 8002676:	2300      	movs	r3, #0
 8002678:	e002      	b.n	8002680 <LoopCopyDataInit>

0800267a <CopyDataInit>:
 800267a:	58d4      	ldr	r4, [r2, r3]
 800267c:	50c4      	str	r4, [r0, r3]
 800267e:	3304      	adds	r3, #4

08002680 <LoopCopyDataInit>:
 8002680:	18c4      	adds	r4, r0, r3
 8002682:	428c      	cmp	r4, r1
 8002684:	d3f9      	bcc.n	800267a <CopyDataInit>
 8002686:	4a0a      	ldr	r2, [pc, #40]	@ (80026b0 <LoopFillZerobss+0x1e>)
 8002688:	4c0a      	ldr	r4, [pc, #40]	@ (80026b4 <LoopFillZerobss+0x22>)
 800268a:	2300      	movs	r3, #0
 800268c:	e001      	b.n	8002692 <LoopFillZerobss>

0800268e <FillZerobss>:
 800268e:	6013      	str	r3, [r2, #0]
 8002690:	3204      	adds	r2, #4

08002692 <LoopFillZerobss>:
 8002692:	42a2      	cmp	r2, r4
 8002694:	d3fb      	bcc.n	800268e <FillZerobss>
 8002696:	f002 ffd1 	bl	800563c <__libc_init_array>
 800269a:	f7ff f91f 	bl	80018dc <main>
 800269e:	4770      	bx	lr
 80026a0:	20020000 	.word	0x20020000
 80026a4:	20000000 	.word	0x20000000
 80026a8:	20000104 	.word	0x20000104
 80026ac:	080058d8 	.word	0x080058d8
 80026b0:	20000104 	.word	0x20000104
 80026b4:	20000460 	.word	0x20000460

080026b8 <ADC_IRQHandler>:
 80026b8:	e7fe      	b.n	80026b8 <ADC_IRQHandler>
	...

080026bc <HAL_Init>:
 80026bc:	b580      	push	{r7, lr}
 80026be:	af00      	add	r7, sp, #0
 80026c0:	4b0e      	ldr	r3, [pc, #56]	@ (80026fc <HAL_Init+0x40>)
 80026c2:	681b      	ldr	r3, [r3, #0]
 80026c4:	4a0d      	ldr	r2, [pc, #52]	@ (80026fc <HAL_Init+0x40>)
 80026c6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80026ca:	6013      	str	r3, [r2, #0]
 80026cc:	4b0b      	ldr	r3, [pc, #44]	@ (80026fc <HAL_Init+0x40>)
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	4a0a      	ldr	r2, [pc, #40]	@ (80026fc <HAL_Init+0x40>)
 80026d2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80026d6:	6013      	str	r3, [r2, #0]
 80026d8:	4b08      	ldr	r3, [pc, #32]	@ (80026fc <HAL_Init+0x40>)
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	4a07      	ldr	r2, [pc, #28]	@ (80026fc <HAL_Init+0x40>)
 80026de:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80026e2:	6013      	str	r3, [r2, #0]
 80026e4:	2003      	movs	r0, #3
 80026e6:	f000 f94f 	bl	8002988 <HAL_NVIC_SetPriorityGrouping>
 80026ea:	200f      	movs	r0, #15
 80026ec:	f000 f808 	bl	8002700 <HAL_InitTick>
 80026f0:	f7ff fd98 	bl	8002224 <HAL_MspInit>
 80026f4:	2300      	movs	r3, #0
 80026f6:	4618      	mov	r0, r3
 80026f8:	bd80      	pop	{r7, pc}
 80026fa:	bf00      	nop
 80026fc:	40023c00 	.word	0x40023c00

08002700 <HAL_InitTick>:
 8002700:	b580      	push	{r7, lr}
 8002702:	b082      	sub	sp, #8
 8002704:	af00      	add	r7, sp, #0
 8002706:	6078      	str	r0, [r7, #4]
 8002708:	4b12      	ldr	r3, [pc, #72]	@ (8002754 <HAL_InitTick+0x54>)
 800270a:	681a      	ldr	r2, [r3, #0]
 800270c:	4b12      	ldr	r3, [pc, #72]	@ (8002758 <HAL_InitTick+0x58>)
 800270e:	781b      	ldrb	r3, [r3, #0]
 8002710:	4619      	mov	r1, r3
 8002712:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002716:	fbb3 f3f1 	udiv	r3, r3, r1
 800271a:	fbb2 f3f3 	udiv	r3, r2, r3
 800271e:	4618      	mov	r0, r3
 8002720:	f000 f967 	bl	80029f2 <HAL_SYSTICK_Config>
 8002724:	4603      	mov	r3, r0
 8002726:	2b00      	cmp	r3, #0
 8002728:	d001      	beq.n	800272e <HAL_InitTick+0x2e>
 800272a:	2301      	movs	r3, #1
 800272c:	e00e      	b.n	800274c <HAL_InitTick+0x4c>
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	2b0f      	cmp	r3, #15
 8002732:	d80a      	bhi.n	800274a <HAL_InitTick+0x4a>
 8002734:	2200      	movs	r2, #0
 8002736:	6879      	ldr	r1, [r7, #4]
 8002738:	f04f 30ff 	mov.w	r0, #4294967295
 800273c:	f000 f92f 	bl	800299e <HAL_NVIC_SetPriority>
 8002740:	4a06      	ldr	r2, [pc, #24]	@ (800275c <HAL_InitTick+0x5c>)
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	6013      	str	r3, [r2, #0]
 8002746:	2300      	movs	r3, #0
 8002748:	e000      	b.n	800274c <HAL_InitTick+0x4c>
 800274a:	2301      	movs	r3, #1
 800274c:	4618      	mov	r0, r3
 800274e:	3708      	adds	r7, #8
 8002750:	46bd      	mov	sp, r7
 8002752:	bd80      	pop	{r7, pc}
 8002754:	200000a8 	.word	0x200000a8
 8002758:	200000b0 	.word	0x200000b0
 800275c:	200000ac 	.word	0x200000ac

08002760 <HAL_IncTick>:
 8002760:	b480      	push	{r7}
 8002762:	af00      	add	r7, sp, #0
 8002764:	4b06      	ldr	r3, [pc, #24]	@ (8002780 <HAL_IncTick+0x20>)
 8002766:	781b      	ldrb	r3, [r3, #0]
 8002768:	461a      	mov	r2, r3
 800276a:	4b06      	ldr	r3, [pc, #24]	@ (8002784 <HAL_IncTick+0x24>)
 800276c:	681b      	ldr	r3, [r3, #0]
 800276e:	4413      	add	r3, r2
 8002770:	4a04      	ldr	r2, [pc, #16]	@ (8002784 <HAL_IncTick+0x24>)
 8002772:	6013      	str	r3, [r2, #0]
 8002774:	bf00      	nop
 8002776:	46bd      	mov	sp, r7
 8002778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800277c:	4770      	bx	lr
 800277e:	bf00      	nop
 8002780:	200000b0 	.word	0x200000b0
 8002784:	20000324 	.word	0x20000324

08002788 <HAL_GetTick>:
 8002788:	b480      	push	{r7}
 800278a:	af00      	add	r7, sp, #0
 800278c:	4b03      	ldr	r3, [pc, #12]	@ (800279c <HAL_GetTick+0x14>)
 800278e:	681b      	ldr	r3, [r3, #0]
 8002790:	4618      	mov	r0, r3
 8002792:	46bd      	mov	sp, r7
 8002794:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002798:	4770      	bx	lr
 800279a:	bf00      	nop
 800279c:	20000324 	.word	0x20000324

080027a0 <HAL_Delay>:
 80027a0:	b580      	push	{r7, lr}
 80027a2:	b084      	sub	sp, #16
 80027a4:	af00      	add	r7, sp, #0
 80027a6:	6078      	str	r0, [r7, #4]
 80027a8:	f7ff ffee 	bl	8002788 <HAL_GetTick>
 80027ac:	60b8      	str	r0, [r7, #8]
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	60fb      	str	r3, [r7, #12]
 80027b2:	68fb      	ldr	r3, [r7, #12]
 80027b4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80027b8:	d005      	beq.n	80027c6 <HAL_Delay+0x26>
 80027ba:	4b0a      	ldr	r3, [pc, #40]	@ (80027e4 <HAL_Delay+0x44>)
 80027bc:	781b      	ldrb	r3, [r3, #0]
 80027be:	461a      	mov	r2, r3
 80027c0:	68fb      	ldr	r3, [r7, #12]
 80027c2:	4413      	add	r3, r2
 80027c4:	60fb      	str	r3, [r7, #12]
 80027c6:	bf00      	nop
 80027c8:	f7ff ffde 	bl	8002788 <HAL_GetTick>
 80027cc:	4602      	mov	r2, r0
 80027ce:	68bb      	ldr	r3, [r7, #8]
 80027d0:	1ad3      	subs	r3, r2, r3
 80027d2:	68fa      	ldr	r2, [r7, #12]
 80027d4:	429a      	cmp	r2, r3
 80027d6:	d8f7      	bhi.n	80027c8 <HAL_Delay+0x28>
 80027d8:	bf00      	nop
 80027da:	bf00      	nop
 80027dc:	3710      	adds	r7, #16
 80027de:	46bd      	mov	sp, r7
 80027e0:	bd80      	pop	{r7, pc}
 80027e2:	bf00      	nop
 80027e4:	200000b0 	.word	0x200000b0

080027e8 <__NVIC_SetPriorityGrouping>:
 80027e8:	b480      	push	{r7}
 80027ea:	b085      	sub	sp, #20
 80027ec:	af00      	add	r7, sp, #0
 80027ee:	6078      	str	r0, [r7, #4]
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	f003 0307 	and.w	r3, r3, #7
 80027f6:	60fb      	str	r3, [r7, #12]
 80027f8:	4b0c      	ldr	r3, [pc, #48]	@ (800282c <__NVIC_SetPriorityGrouping+0x44>)
 80027fa:	68db      	ldr	r3, [r3, #12]
 80027fc:	60bb      	str	r3, [r7, #8]
 80027fe:	68ba      	ldr	r2, [r7, #8]
 8002800:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002804:	4013      	ands	r3, r2
 8002806:	60bb      	str	r3, [r7, #8]
 8002808:	68fb      	ldr	r3, [r7, #12]
 800280a:	021a      	lsls	r2, r3, #8
 800280c:	68bb      	ldr	r3, [r7, #8]
 800280e:	4313      	orrs	r3, r2
 8002810:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002814:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002818:	60bb      	str	r3, [r7, #8]
 800281a:	4a04      	ldr	r2, [pc, #16]	@ (800282c <__NVIC_SetPriorityGrouping+0x44>)
 800281c:	68bb      	ldr	r3, [r7, #8]
 800281e:	60d3      	str	r3, [r2, #12]
 8002820:	bf00      	nop
 8002822:	3714      	adds	r7, #20
 8002824:	46bd      	mov	sp, r7
 8002826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800282a:	4770      	bx	lr
 800282c:	e000ed00 	.word	0xe000ed00

08002830 <__NVIC_GetPriorityGrouping>:
 8002830:	b480      	push	{r7}
 8002832:	af00      	add	r7, sp, #0
 8002834:	4b04      	ldr	r3, [pc, #16]	@ (8002848 <__NVIC_GetPriorityGrouping+0x18>)
 8002836:	68db      	ldr	r3, [r3, #12]
 8002838:	0a1b      	lsrs	r3, r3, #8
 800283a:	f003 0307 	and.w	r3, r3, #7
 800283e:	4618      	mov	r0, r3
 8002840:	46bd      	mov	sp, r7
 8002842:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002846:	4770      	bx	lr
 8002848:	e000ed00 	.word	0xe000ed00

0800284c <__NVIC_EnableIRQ>:
 800284c:	b480      	push	{r7}
 800284e:	b083      	sub	sp, #12
 8002850:	af00      	add	r7, sp, #0
 8002852:	4603      	mov	r3, r0
 8002854:	71fb      	strb	r3, [r7, #7]
 8002856:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800285a:	2b00      	cmp	r3, #0
 800285c:	db0b      	blt.n	8002876 <__NVIC_EnableIRQ+0x2a>
 800285e:	79fb      	ldrb	r3, [r7, #7]
 8002860:	f003 021f 	and.w	r2, r3, #31
 8002864:	4907      	ldr	r1, [pc, #28]	@ (8002884 <__NVIC_EnableIRQ+0x38>)
 8002866:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800286a:	095b      	lsrs	r3, r3, #5
 800286c:	2001      	movs	r0, #1
 800286e:	fa00 f202 	lsl.w	r2, r0, r2
 8002872:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002876:	bf00      	nop
 8002878:	370c      	adds	r7, #12
 800287a:	46bd      	mov	sp, r7
 800287c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002880:	4770      	bx	lr
 8002882:	bf00      	nop
 8002884:	e000e100 	.word	0xe000e100

08002888 <__NVIC_SetPriority>:
 8002888:	b480      	push	{r7}
 800288a:	b083      	sub	sp, #12
 800288c:	af00      	add	r7, sp, #0
 800288e:	4603      	mov	r3, r0
 8002890:	6039      	str	r1, [r7, #0]
 8002892:	71fb      	strb	r3, [r7, #7]
 8002894:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002898:	2b00      	cmp	r3, #0
 800289a:	db0a      	blt.n	80028b2 <__NVIC_SetPriority+0x2a>
 800289c:	683b      	ldr	r3, [r7, #0]
 800289e:	b2da      	uxtb	r2, r3
 80028a0:	490c      	ldr	r1, [pc, #48]	@ (80028d4 <__NVIC_SetPriority+0x4c>)
 80028a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80028a6:	0112      	lsls	r2, r2, #4
 80028a8:	b2d2      	uxtb	r2, r2
 80028aa:	440b      	add	r3, r1
 80028ac:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80028b0:	e00a      	b.n	80028c8 <__NVIC_SetPriority+0x40>
 80028b2:	683b      	ldr	r3, [r7, #0]
 80028b4:	b2da      	uxtb	r2, r3
 80028b6:	4908      	ldr	r1, [pc, #32]	@ (80028d8 <__NVIC_SetPriority+0x50>)
 80028b8:	79fb      	ldrb	r3, [r7, #7]
 80028ba:	f003 030f 	and.w	r3, r3, #15
 80028be:	3b04      	subs	r3, #4
 80028c0:	0112      	lsls	r2, r2, #4
 80028c2:	b2d2      	uxtb	r2, r2
 80028c4:	440b      	add	r3, r1
 80028c6:	761a      	strb	r2, [r3, #24]
 80028c8:	bf00      	nop
 80028ca:	370c      	adds	r7, #12
 80028cc:	46bd      	mov	sp, r7
 80028ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028d2:	4770      	bx	lr
 80028d4:	e000e100 	.word	0xe000e100
 80028d8:	e000ed00 	.word	0xe000ed00

080028dc <NVIC_EncodePriority>:
 80028dc:	b480      	push	{r7}
 80028de:	b089      	sub	sp, #36	@ 0x24
 80028e0:	af00      	add	r7, sp, #0
 80028e2:	60f8      	str	r0, [r7, #12]
 80028e4:	60b9      	str	r1, [r7, #8]
 80028e6:	607a      	str	r2, [r7, #4]
 80028e8:	68fb      	ldr	r3, [r7, #12]
 80028ea:	f003 0307 	and.w	r3, r3, #7
 80028ee:	61fb      	str	r3, [r7, #28]
 80028f0:	69fb      	ldr	r3, [r7, #28]
 80028f2:	f1c3 0307 	rsb	r3, r3, #7
 80028f6:	2b04      	cmp	r3, #4
 80028f8:	bf28      	it	cs
 80028fa:	2304      	movcs	r3, #4
 80028fc:	61bb      	str	r3, [r7, #24]
 80028fe:	69fb      	ldr	r3, [r7, #28]
 8002900:	3304      	adds	r3, #4
 8002902:	2b06      	cmp	r3, #6
 8002904:	d902      	bls.n	800290c <NVIC_EncodePriority+0x30>
 8002906:	69fb      	ldr	r3, [r7, #28]
 8002908:	3b03      	subs	r3, #3
 800290a:	e000      	b.n	800290e <NVIC_EncodePriority+0x32>
 800290c:	2300      	movs	r3, #0
 800290e:	617b      	str	r3, [r7, #20]
 8002910:	f04f 32ff 	mov.w	r2, #4294967295
 8002914:	69bb      	ldr	r3, [r7, #24]
 8002916:	fa02 f303 	lsl.w	r3, r2, r3
 800291a:	43da      	mvns	r2, r3
 800291c:	68bb      	ldr	r3, [r7, #8]
 800291e:	401a      	ands	r2, r3
 8002920:	697b      	ldr	r3, [r7, #20]
 8002922:	409a      	lsls	r2, r3
 8002924:	f04f 31ff 	mov.w	r1, #4294967295
 8002928:	697b      	ldr	r3, [r7, #20]
 800292a:	fa01 f303 	lsl.w	r3, r1, r3
 800292e:	43d9      	mvns	r1, r3
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	400b      	ands	r3, r1
 8002934:	4313      	orrs	r3, r2
 8002936:	4618      	mov	r0, r3
 8002938:	3724      	adds	r7, #36	@ 0x24
 800293a:	46bd      	mov	sp, r7
 800293c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002940:	4770      	bx	lr
	...

08002944 <SysTick_Config>:
 8002944:	b580      	push	{r7, lr}
 8002946:	b082      	sub	sp, #8
 8002948:	af00      	add	r7, sp, #0
 800294a:	6078      	str	r0, [r7, #4]
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	3b01      	subs	r3, #1
 8002950:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002954:	d301      	bcc.n	800295a <SysTick_Config+0x16>
 8002956:	2301      	movs	r3, #1
 8002958:	e00f      	b.n	800297a <SysTick_Config+0x36>
 800295a:	4a0a      	ldr	r2, [pc, #40]	@ (8002984 <SysTick_Config+0x40>)
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	3b01      	subs	r3, #1
 8002960:	6053      	str	r3, [r2, #4]
 8002962:	210f      	movs	r1, #15
 8002964:	f04f 30ff 	mov.w	r0, #4294967295
 8002968:	f7ff ff8e 	bl	8002888 <__NVIC_SetPriority>
 800296c:	4b05      	ldr	r3, [pc, #20]	@ (8002984 <SysTick_Config+0x40>)
 800296e:	2200      	movs	r2, #0
 8002970:	609a      	str	r2, [r3, #8]
 8002972:	4b04      	ldr	r3, [pc, #16]	@ (8002984 <SysTick_Config+0x40>)
 8002974:	2207      	movs	r2, #7
 8002976:	601a      	str	r2, [r3, #0]
 8002978:	2300      	movs	r3, #0
 800297a:	4618      	mov	r0, r3
 800297c:	3708      	adds	r7, #8
 800297e:	46bd      	mov	sp, r7
 8002980:	bd80      	pop	{r7, pc}
 8002982:	bf00      	nop
 8002984:	e000e010 	.word	0xe000e010

08002988 <HAL_NVIC_SetPriorityGrouping>:
 8002988:	b580      	push	{r7, lr}
 800298a:	b082      	sub	sp, #8
 800298c:	af00      	add	r7, sp, #0
 800298e:	6078      	str	r0, [r7, #4]
 8002990:	6878      	ldr	r0, [r7, #4]
 8002992:	f7ff ff29 	bl	80027e8 <__NVIC_SetPriorityGrouping>
 8002996:	bf00      	nop
 8002998:	3708      	adds	r7, #8
 800299a:	46bd      	mov	sp, r7
 800299c:	bd80      	pop	{r7, pc}

0800299e <HAL_NVIC_SetPriority>:
 800299e:	b580      	push	{r7, lr}
 80029a0:	b086      	sub	sp, #24
 80029a2:	af00      	add	r7, sp, #0
 80029a4:	4603      	mov	r3, r0
 80029a6:	60b9      	str	r1, [r7, #8]
 80029a8:	607a      	str	r2, [r7, #4]
 80029aa:	73fb      	strb	r3, [r7, #15]
 80029ac:	2300      	movs	r3, #0
 80029ae:	617b      	str	r3, [r7, #20]
 80029b0:	f7ff ff3e 	bl	8002830 <__NVIC_GetPriorityGrouping>
 80029b4:	6178      	str	r0, [r7, #20]
 80029b6:	687a      	ldr	r2, [r7, #4]
 80029b8:	68b9      	ldr	r1, [r7, #8]
 80029ba:	6978      	ldr	r0, [r7, #20]
 80029bc:	f7ff ff8e 	bl	80028dc <NVIC_EncodePriority>
 80029c0:	4602      	mov	r2, r0
 80029c2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80029c6:	4611      	mov	r1, r2
 80029c8:	4618      	mov	r0, r3
 80029ca:	f7ff ff5d 	bl	8002888 <__NVIC_SetPriority>
 80029ce:	bf00      	nop
 80029d0:	3718      	adds	r7, #24
 80029d2:	46bd      	mov	sp, r7
 80029d4:	bd80      	pop	{r7, pc}

080029d6 <HAL_NVIC_EnableIRQ>:
 80029d6:	b580      	push	{r7, lr}
 80029d8:	b082      	sub	sp, #8
 80029da:	af00      	add	r7, sp, #0
 80029dc:	4603      	mov	r3, r0
 80029de:	71fb      	strb	r3, [r7, #7]
 80029e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029e4:	4618      	mov	r0, r3
 80029e6:	f7ff ff31 	bl	800284c <__NVIC_EnableIRQ>
 80029ea:	bf00      	nop
 80029ec:	3708      	adds	r7, #8
 80029ee:	46bd      	mov	sp, r7
 80029f0:	bd80      	pop	{r7, pc}

080029f2 <HAL_SYSTICK_Config>:
 80029f2:	b580      	push	{r7, lr}
 80029f4:	b082      	sub	sp, #8
 80029f6:	af00      	add	r7, sp, #0
 80029f8:	6078      	str	r0, [r7, #4]
 80029fa:	6878      	ldr	r0, [r7, #4]
 80029fc:	f7ff ffa2 	bl	8002944 <SysTick_Config>
 8002a00:	4603      	mov	r3, r0
 8002a02:	4618      	mov	r0, r3
 8002a04:	3708      	adds	r7, #8
 8002a06:	46bd      	mov	sp, r7
 8002a08:	bd80      	pop	{r7, pc}

08002a0a <HAL_DMA_Abort>:
 8002a0a:	b580      	push	{r7, lr}
 8002a0c:	b084      	sub	sp, #16
 8002a0e:	af00      	add	r7, sp, #0
 8002a10:	6078      	str	r0, [r7, #4]
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002a16:	60fb      	str	r3, [r7, #12]
 8002a18:	f7ff feb6 	bl	8002788 <HAL_GetTick>
 8002a1c:	60b8      	str	r0, [r7, #8]
 8002a1e:	687b      	ldr	r3, [r7, #4]
 8002a20:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002a24:	b2db      	uxtb	r3, r3
 8002a26:	2b02      	cmp	r3, #2
 8002a28:	d008      	beq.n	8002a3c <HAL_DMA_Abort+0x32>
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	2280      	movs	r2, #128	@ 0x80
 8002a2e:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	2200      	movs	r2, #0
 8002a34:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002a38:	2301      	movs	r3, #1
 8002a3a:	e052      	b.n	8002ae2 <HAL_DMA_Abort+0xd8>
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	681b      	ldr	r3, [r3, #0]
 8002a40:	681a      	ldr	r2, [r3, #0]
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	f022 0216 	bic.w	r2, r2, #22
 8002a4a:	601a      	str	r2, [r3, #0]
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	695a      	ldr	r2, [r3, #20]
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002a5a:	615a      	str	r2, [r3, #20]
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a60:	2b00      	cmp	r3, #0
 8002a62:	d103      	bne.n	8002a6c <HAL_DMA_Abort+0x62>
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002a68:	2b00      	cmp	r3, #0
 8002a6a:	d007      	beq.n	8002a7c <HAL_DMA_Abort+0x72>
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	681a      	ldr	r2, [r3, #0]
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	f022 0208 	bic.w	r2, r2, #8
 8002a7a:	601a      	str	r2, [r3, #0]
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	681b      	ldr	r3, [r3, #0]
 8002a80:	681a      	ldr	r2, [r3, #0]
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	681b      	ldr	r3, [r3, #0]
 8002a86:	f022 0201 	bic.w	r2, r2, #1
 8002a8a:	601a      	str	r2, [r3, #0]
 8002a8c:	e013      	b.n	8002ab6 <HAL_DMA_Abort+0xac>
 8002a8e:	f7ff fe7b 	bl	8002788 <HAL_GetTick>
 8002a92:	4602      	mov	r2, r0
 8002a94:	68bb      	ldr	r3, [r7, #8]
 8002a96:	1ad3      	subs	r3, r2, r3
 8002a98:	2b05      	cmp	r3, #5
 8002a9a:	d90c      	bls.n	8002ab6 <HAL_DMA_Abort+0xac>
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	2220      	movs	r2, #32
 8002aa0:	655a      	str	r2, [r3, #84]	@ 0x54
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	2203      	movs	r2, #3
 8002aa6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	2200      	movs	r2, #0
 8002aae:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002ab2:	2303      	movs	r3, #3
 8002ab4:	e015      	b.n	8002ae2 <HAL_DMA_Abort+0xd8>
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	681b      	ldr	r3, [r3, #0]
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	f003 0301 	and.w	r3, r3, #1
 8002ac0:	2b00      	cmp	r3, #0
 8002ac2:	d1e4      	bne.n	8002a8e <HAL_DMA_Abort+0x84>
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ac8:	223f      	movs	r2, #63	@ 0x3f
 8002aca:	409a      	lsls	r2, r3
 8002acc:	68fb      	ldr	r3, [r7, #12]
 8002ace:	609a      	str	r2, [r3, #8]
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	2201      	movs	r2, #1
 8002ad4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002ad8:	687b      	ldr	r3, [r7, #4]
 8002ada:	2200      	movs	r2, #0
 8002adc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002ae0:	2300      	movs	r3, #0
 8002ae2:	4618      	mov	r0, r3
 8002ae4:	3710      	adds	r7, #16
 8002ae6:	46bd      	mov	sp, r7
 8002ae8:	bd80      	pop	{r7, pc}

08002aea <HAL_DMA_Abort_IT>:
 8002aea:	b480      	push	{r7}
 8002aec:	b083      	sub	sp, #12
 8002aee:	af00      	add	r7, sp, #0
 8002af0:	6078      	str	r0, [r7, #4]
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002af8:	b2db      	uxtb	r3, r3
 8002afa:	2b02      	cmp	r3, #2
 8002afc:	d004      	beq.n	8002b08 <HAL_DMA_Abort_IT+0x1e>
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	2280      	movs	r2, #128	@ 0x80
 8002b02:	655a      	str	r2, [r3, #84]	@ 0x54
 8002b04:	2301      	movs	r3, #1
 8002b06:	e00c      	b.n	8002b22 <HAL_DMA_Abort_IT+0x38>
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	2205      	movs	r2, #5
 8002b0c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	681a      	ldr	r2, [r3, #0]
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	681b      	ldr	r3, [r3, #0]
 8002b1a:	f022 0201 	bic.w	r2, r2, #1
 8002b1e:	601a      	str	r2, [r3, #0]
 8002b20:	2300      	movs	r3, #0
 8002b22:	4618      	mov	r0, r3
 8002b24:	370c      	adds	r7, #12
 8002b26:	46bd      	mov	sp, r7
 8002b28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b2c:	4770      	bx	lr
	...

08002b30 <HAL_GPIO_Init>:
 8002b30:	b480      	push	{r7}
 8002b32:	b089      	sub	sp, #36	@ 0x24
 8002b34:	af00      	add	r7, sp, #0
 8002b36:	6078      	str	r0, [r7, #4]
 8002b38:	6039      	str	r1, [r7, #0]
 8002b3a:	2300      	movs	r3, #0
 8002b3c:	617b      	str	r3, [r7, #20]
 8002b3e:	2300      	movs	r3, #0
 8002b40:	613b      	str	r3, [r7, #16]
 8002b42:	2300      	movs	r3, #0
 8002b44:	61bb      	str	r3, [r7, #24]
 8002b46:	2300      	movs	r3, #0
 8002b48:	61fb      	str	r3, [r7, #28]
 8002b4a:	e16b      	b.n	8002e24 <HAL_GPIO_Init+0x2f4>
 8002b4c:	2201      	movs	r2, #1
 8002b4e:	69fb      	ldr	r3, [r7, #28]
 8002b50:	fa02 f303 	lsl.w	r3, r2, r3
 8002b54:	617b      	str	r3, [r7, #20]
 8002b56:	683b      	ldr	r3, [r7, #0]
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	697a      	ldr	r2, [r7, #20]
 8002b5c:	4013      	ands	r3, r2
 8002b5e:	613b      	str	r3, [r7, #16]
 8002b60:	693a      	ldr	r2, [r7, #16]
 8002b62:	697b      	ldr	r3, [r7, #20]
 8002b64:	429a      	cmp	r2, r3
 8002b66:	f040 815a 	bne.w	8002e1e <HAL_GPIO_Init+0x2ee>
 8002b6a:	683b      	ldr	r3, [r7, #0]
 8002b6c:	685b      	ldr	r3, [r3, #4]
 8002b6e:	f003 0303 	and.w	r3, r3, #3
 8002b72:	2b01      	cmp	r3, #1
 8002b74:	d005      	beq.n	8002b82 <HAL_GPIO_Init+0x52>
 8002b76:	683b      	ldr	r3, [r7, #0]
 8002b78:	685b      	ldr	r3, [r3, #4]
 8002b7a:	f003 0303 	and.w	r3, r3, #3
 8002b7e:	2b02      	cmp	r3, #2
 8002b80:	d130      	bne.n	8002be4 <HAL_GPIO_Init+0xb4>
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	689b      	ldr	r3, [r3, #8]
 8002b86:	61bb      	str	r3, [r7, #24]
 8002b88:	69fb      	ldr	r3, [r7, #28]
 8002b8a:	005b      	lsls	r3, r3, #1
 8002b8c:	2203      	movs	r2, #3
 8002b8e:	fa02 f303 	lsl.w	r3, r2, r3
 8002b92:	43db      	mvns	r3, r3
 8002b94:	69ba      	ldr	r2, [r7, #24]
 8002b96:	4013      	ands	r3, r2
 8002b98:	61bb      	str	r3, [r7, #24]
 8002b9a:	683b      	ldr	r3, [r7, #0]
 8002b9c:	68da      	ldr	r2, [r3, #12]
 8002b9e:	69fb      	ldr	r3, [r7, #28]
 8002ba0:	005b      	lsls	r3, r3, #1
 8002ba2:	fa02 f303 	lsl.w	r3, r2, r3
 8002ba6:	69ba      	ldr	r2, [r7, #24]
 8002ba8:	4313      	orrs	r3, r2
 8002baa:	61bb      	str	r3, [r7, #24]
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	69ba      	ldr	r2, [r7, #24]
 8002bb0:	609a      	str	r2, [r3, #8]
 8002bb2:	687b      	ldr	r3, [r7, #4]
 8002bb4:	685b      	ldr	r3, [r3, #4]
 8002bb6:	61bb      	str	r3, [r7, #24]
 8002bb8:	2201      	movs	r2, #1
 8002bba:	69fb      	ldr	r3, [r7, #28]
 8002bbc:	fa02 f303 	lsl.w	r3, r2, r3
 8002bc0:	43db      	mvns	r3, r3
 8002bc2:	69ba      	ldr	r2, [r7, #24]
 8002bc4:	4013      	ands	r3, r2
 8002bc6:	61bb      	str	r3, [r7, #24]
 8002bc8:	683b      	ldr	r3, [r7, #0]
 8002bca:	685b      	ldr	r3, [r3, #4]
 8002bcc:	091b      	lsrs	r3, r3, #4
 8002bce:	f003 0201 	and.w	r2, r3, #1
 8002bd2:	69fb      	ldr	r3, [r7, #28]
 8002bd4:	fa02 f303 	lsl.w	r3, r2, r3
 8002bd8:	69ba      	ldr	r2, [r7, #24]
 8002bda:	4313      	orrs	r3, r2
 8002bdc:	61bb      	str	r3, [r7, #24]
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	69ba      	ldr	r2, [r7, #24]
 8002be2:	605a      	str	r2, [r3, #4]
 8002be4:	683b      	ldr	r3, [r7, #0]
 8002be6:	685b      	ldr	r3, [r3, #4]
 8002be8:	f003 0303 	and.w	r3, r3, #3
 8002bec:	2b03      	cmp	r3, #3
 8002bee:	d017      	beq.n	8002c20 <HAL_GPIO_Init+0xf0>
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	68db      	ldr	r3, [r3, #12]
 8002bf4:	61bb      	str	r3, [r7, #24]
 8002bf6:	69fb      	ldr	r3, [r7, #28]
 8002bf8:	005b      	lsls	r3, r3, #1
 8002bfa:	2203      	movs	r2, #3
 8002bfc:	fa02 f303 	lsl.w	r3, r2, r3
 8002c00:	43db      	mvns	r3, r3
 8002c02:	69ba      	ldr	r2, [r7, #24]
 8002c04:	4013      	ands	r3, r2
 8002c06:	61bb      	str	r3, [r7, #24]
 8002c08:	683b      	ldr	r3, [r7, #0]
 8002c0a:	689a      	ldr	r2, [r3, #8]
 8002c0c:	69fb      	ldr	r3, [r7, #28]
 8002c0e:	005b      	lsls	r3, r3, #1
 8002c10:	fa02 f303 	lsl.w	r3, r2, r3
 8002c14:	69ba      	ldr	r2, [r7, #24]
 8002c16:	4313      	orrs	r3, r2
 8002c18:	61bb      	str	r3, [r7, #24]
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	69ba      	ldr	r2, [r7, #24]
 8002c1e:	60da      	str	r2, [r3, #12]
 8002c20:	683b      	ldr	r3, [r7, #0]
 8002c22:	685b      	ldr	r3, [r3, #4]
 8002c24:	f003 0303 	and.w	r3, r3, #3
 8002c28:	2b02      	cmp	r3, #2
 8002c2a:	d123      	bne.n	8002c74 <HAL_GPIO_Init+0x144>
 8002c2c:	69fb      	ldr	r3, [r7, #28]
 8002c2e:	08da      	lsrs	r2, r3, #3
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	3208      	adds	r2, #8
 8002c34:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002c38:	61bb      	str	r3, [r7, #24]
 8002c3a:	69fb      	ldr	r3, [r7, #28]
 8002c3c:	f003 0307 	and.w	r3, r3, #7
 8002c40:	009b      	lsls	r3, r3, #2
 8002c42:	220f      	movs	r2, #15
 8002c44:	fa02 f303 	lsl.w	r3, r2, r3
 8002c48:	43db      	mvns	r3, r3
 8002c4a:	69ba      	ldr	r2, [r7, #24]
 8002c4c:	4013      	ands	r3, r2
 8002c4e:	61bb      	str	r3, [r7, #24]
 8002c50:	683b      	ldr	r3, [r7, #0]
 8002c52:	691a      	ldr	r2, [r3, #16]
 8002c54:	69fb      	ldr	r3, [r7, #28]
 8002c56:	f003 0307 	and.w	r3, r3, #7
 8002c5a:	009b      	lsls	r3, r3, #2
 8002c5c:	fa02 f303 	lsl.w	r3, r2, r3
 8002c60:	69ba      	ldr	r2, [r7, #24]
 8002c62:	4313      	orrs	r3, r2
 8002c64:	61bb      	str	r3, [r7, #24]
 8002c66:	69fb      	ldr	r3, [r7, #28]
 8002c68:	08da      	lsrs	r2, r3, #3
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	3208      	adds	r2, #8
 8002c6e:	69b9      	ldr	r1, [r7, #24]
 8002c70:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	61bb      	str	r3, [r7, #24]
 8002c7a:	69fb      	ldr	r3, [r7, #28]
 8002c7c:	005b      	lsls	r3, r3, #1
 8002c7e:	2203      	movs	r2, #3
 8002c80:	fa02 f303 	lsl.w	r3, r2, r3
 8002c84:	43db      	mvns	r3, r3
 8002c86:	69ba      	ldr	r2, [r7, #24]
 8002c88:	4013      	ands	r3, r2
 8002c8a:	61bb      	str	r3, [r7, #24]
 8002c8c:	683b      	ldr	r3, [r7, #0]
 8002c8e:	685b      	ldr	r3, [r3, #4]
 8002c90:	f003 0203 	and.w	r2, r3, #3
 8002c94:	69fb      	ldr	r3, [r7, #28]
 8002c96:	005b      	lsls	r3, r3, #1
 8002c98:	fa02 f303 	lsl.w	r3, r2, r3
 8002c9c:	69ba      	ldr	r2, [r7, #24]
 8002c9e:	4313      	orrs	r3, r2
 8002ca0:	61bb      	str	r3, [r7, #24]
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	69ba      	ldr	r2, [r7, #24]
 8002ca6:	601a      	str	r2, [r3, #0]
 8002ca8:	683b      	ldr	r3, [r7, #0]
 8002caa:	685b      	ldr	r3, [r3, #4]
 8002cac:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002cb0:	2b00      	cmp	r3, #0
 8002cb2:	f000 80b4 	beq.w	8002e1e <HAL_GPIO_Init+0x2ee>
 8002cb6:	2300      	movs	r3, #0
 8002cb8:	60fb      	str	r3, [r7, #12]
 8002cba:	4b60      	ldr	r3, [pc, #384]	@ (8002e3c <HAL_GPIO_Init+0x30c>)
 8002cbc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002cbe:	4a5f      	ldr	r2, [pc, #380]	@ (8002e3c <HAL_GPIO_Init+0x30c>)
 8002cc0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002cc4:	6453      	str	r3, [r2, #68]	@ 0x44
 8002cc6:	4b5d      	ldr	r3, [pc, #372]	@ (8002e3c <HAL_GPIO_Init+0x30c>)
 8002cc8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002cca:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002cce:	60fb      	str	r3, [r7, #12]
 8002cd0:	68fb      	ldr	r3, [r7, #12]
 8002cd2:	4a5b      	ldr	r2, [pc, #364]	@ (8002e40 <HAL_GPIO_Init+0x310>)
 8002cd4:	69fb      	ldr	r3, [r7, #28]
 8002cd6:	089b      	lsrs	r3, r3, #2
 8002cd8:	3302      	adds	r3, #2
 8002cda:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002cde:	61bb      	str	r3, [r7, #24]
 8002ce0:	69fb      	ldr	r3, [r7, #28]
 8002ce2:	f003 0303 	and.w	r3, r3, #3
 8002ce6:	009b      	lsls	r3, r3, #2
 8002ce8:	220f      	movs	r2, #15
 8002cea:	fa02 f303 	lsl.w	r3, r2, r3
 8002cee:	43db      	mvns	r3, r3
 8002cf0:	69ba      	ldr	r2, [r7, #24]
 8002cf2:	4013      	ands	r3, r2
 8002cf4:	61bb      	str	r3, [r7, #24]
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	4a52      	ldr	r2, [pc, #328]	@ (8002e44 <HAL_GPIO_Init+0x314>)
 8002cfa:	4293      	cmp	r3, r2
 8002cfc:	d02b      	beq.n	8002d56 <HAL_GPIO_Init+0x226>
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	4a51      	ldr	r2, [pc, #324]	@ (8002e48 <HAL_GPIO_Init+0x318>)
 8002d02:	4293      	cmp	r3, r2
 8002d04:	d025      	beq.n	8002d52 <HAL_GPIO_Init+0x222>
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	4a50      	ldr	r2, [pc, #320]	@ (8002e4c <HAL_GPIO_Init+0x31c>)
 8002d0a:	4293      	cmp	r3, r2
 8002d0c:	d01f      	beq.n	8002d4e <HAL_GPIO_Init+0x21e>
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	4a4f      	ldr	r2, [pc, #316]	@ (8002e50 <HAL_GPIO_Init+0x320>)
 8002d12:	4293      	cmp	r3, r2
 8002d14:	d019      	beq.n	8002d4a <HAL_GPIO_Init+0x21a>
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	4a4e      	ldr	r2, [pc, #312]	@ (8002e54 <HAL_GPIO_Init+0x324>)
 8002d1a:	4293      	cmp	r3, r2
 8002d1c:	d013      	beq.n	8002d46 <HAL_GPIO_Init+0x216>
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	4a4d      	ldr	r2, [pc, #308]	@ (8002e58 <HAL_GPIO_Init+0x328>)
 8002d22:	4293      	cmp	r3, r2
 8002d24:	d00d      	beq.n	8002d42 <HAL_GPIO_Init+0x212>
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	4a4c      	ldr	r2, [pc, #304]	@ (8002e5c <HAL_GPIO_Init+0x32c>)
 8002d2a:	4293      	cmp	r3, r2
 8002d2c:	d007      	beq.n	8002d3e <HAL_GPIO_Init+0x20e>
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	4a4b      	ldr	r2, [pc, #300]	@ (8002e60 <HAL_GPIO_Init+0x330>)
 8002d32:	4293      	cmp	r3, r2
 8002d34:	d101      	bne.n	8002d3a <HAL_GPIO_Init+0x20a>
 8002d36:	2307      	movs	r3, #7
 8002d38:	e00e      	b.n	8002d58 <HAL_GPIO_Init+0x228>
 8002d3a:	2308      	movs	r3, #8
 8002d3c:	e00c      	b.n	8002d58 <HAL_GPIO_Init+0x228>
 8002d3e:	2306      	movs	r3, #6
 8002d40:	e00a      	b.n	8002d58 <HAL_GPIO_Init+0x228>
 8002d42:	2305      	movs	r3, #5
 8002d44:	e008      	b.n	8002d58 <HAL_GPIO_Init+0x228>
 8002d46:	2304      	movs	r3, #4
 8002d48:	e006      	b.n	8002d58 <HAL_GPIO_Init+0x228>
 8002d4a:	2303      	movs	r3, #3
 8002d4c:	e004      	b.n	8002d58 <HAL_GPIO_Init+0x228>
 8002d4e:	2302      	movs	r3, #2
 8002d50:	e002      	b.n	8002d58 <HAL_GPIO_Init+0x228>
 8002d52:	2301      	movs	r3, #1
 8002d54:	e000      	b.n	8002d58 <HAL_GPIO_Init+0x228>
 8002d56:	2300      	movs	r3, #0
 8002d58:	69fa      	ldr	r2, [r7, #28]
 8002d5a:	f002 0203 	and.w	r2, r2, #3
 8002d5e:	0092      	lsls	r2, r2, #2
 8002d60:	4093      	lsls	r3, r2
 8002d62:	69ba      	ldr	r2, [r7, #24]
 8002d64:	4313      	orrs	r3, r2
 8002d66:	61bb      	str	r3, [r7, #24]
 8002d68:	4935      	ldr	r1, [pc, #212]	@ (8002e40 <HAL_GPIO_Init+0x310>)
 8002d6a:	69fb      	ldr	r3, [r7, #28]
 8002d6c:	089b      	lsrs	r3, r3, #2
 8002d6e:	3302      	adds	r3, #2
 8002d70:	69ba      	ldr	r2, [r7, #24]
 8002d72:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002d76:	4b3b      	ldr	r3, [pc, #236]	@ (8002e64 <HAL_GPIO_Init+0x334>)
 8002d78:	689b      	ldr	r3, [r3, #8]
 8002d7a:	61bb      	str	r3, [r7, #24]
 8002d7c:	693b      	ldr	r3, [r7, #16]
 8002d7e:	43db      	mvns	r3, r3
 8002d80:	69ba      	ldr	r2, [r7, #24]
 8002d82:	4013      	ands	r3, r2
 8002d84:	61bb      	str	r3, [r7, #24]
 8002d86:	683b      	ldr	r3, [r7, #0]
 8002d88:	685b      	ldr	r3, [r3, #4]
 8002d8a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	d003      	beq.n	8002d9a <HAL_GPIO_Init+0x26a>
 8002d92:	69ba      	ldr	r2, [r7, #24]
 8002d94:	693b      	ldr	r3, [r7, #16]
 8002d96:	4313      	orrs	r3, r2
 8002d98:	61bb      	str	r3, [r7, #24]
 8002d9a:	4a32      	ldr	r2, [pc, #200]	@ (8002e64 <HAL_GPIO_Init+0x334>)
 8002d9c:	69bb      	ldr	r3, [r7, #24]
 8002d9e:	6093      	str	r3, [r2, #8]
 8002da0:	4b30      	ldr	r3, [pc, #192]	@ (8002e64 <HAL_GPIO_Init+0x334>)
 8002da2:	68db      	ldr	r3, [r3, #12]
 8002da4:	61bb      	str	r3, [r7, #24]
 8002da6:	693b      	ldr	r3, [r7, #16]
 8002da8:	43db      	mvns	r3, r3
 8002daa:	69ba      	ldr	r2, [r7, #24]
 8002dac:	4013      	ands	r3, r2
 8002dae:	61bb      	str	r3, [r7, #24]
 8002db0:	683b      	ldr	r3, [r7, #0]
 8002db2:	685b      	ldr	r3, [r3, #4]
 8002db4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d003      	beq.n	8002dc4 <HAL_GPIO_Init+0x294>
 8002dbc:	69ba      	ldr	r2, [r7, #24]
 8002dbe:	693b      	ldr	r3, [r7, #16]
 8002dc0:	4313      	orrs	r3, r2
 8002dc2:	61bb      	str	r3, [r7, #24]
 8002dc4:	4a27      	ldr	r2, [pc, #156]	@ (8002e64 <HAL_GPIO_Init+0x334>)
 8002dc6:	69bb      	ldr	r3, [r7, #24]
 8002dc8:	60d3      	str	r3, [r2, #12]
 8002dca:	4b26      	ldr	r3, [pc, #152]	@ (8002e64 <HAL_GPIO_Init+0x334>)
 8002dcc:	685b      	ldr	r3, [r3, #4]
 8002dce:	61bb      	str	r3, [r7, #24]
 8002dd0:	693b      	ldr	r3, [r7, #16]
 8002dd2:	43db      	mvns	r3, r3
 8002dd4:	69ba      	ldr	r2, [r7, #24]
 8002dd6:	4013      	ands	r3, r2
 8002dd8:	61bb      	str	r3, [r7, #24]
 8002dda:	683b      	ldr	r3, [r7, #0]
 8002ddc:	685b      	ldr	r3, [r3, #4]
 8002dde:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002de2:	2b00      	cmp	r3, #0
 8002de4:	d003      	beq.n	8002dee <HAL_GPIO_Init+0x2be>
 8002de6:	69ba      	ldr	r2, [r7, #24]
 8002de8:	693b      	ldr	r3, [r7, #16]
 8002dea:	4313      	orrs	r3, r2
 8002dec:	61bb      	str	r3, [r7, #24]
 8002dee:	4a1d      	ldr	r2, [pc, #116]	@ (8002e64 <HAL_GPIO_Init+0x334>)
 8002df0:	69bb      	ldr	r3, [r7, #24]
 8002df2:	6053      	str	r3, [r2, #4]
 8002df4:	4b1b      	ldr	r3, [pc, #108]	@ (8002e64 <HAL_GPIO_Init+0x334>)
 8002df6:	681b      	ldr	r3, [r3, #0]
 8002df8:	61bb      	str	r3, [r7, #24]
 8002dfa:	693b      	ldr	r3, [r7, #16]
 8002dfc:	43db      	mvns	r3, r3
 8002dfe:	69ba      	ldr	r2, [r7, #24]
 8002e00:	4013      	ands	r3, r2
 8002e02:	61bb      	str	r3, [r7, #24]
 8002e04:	683b      	ldr	r3, [r7, #0]
 8002e06:	685b      	ldr	r3, [r3, #4]
 8002e08:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d003      	beq.n	8002e18 <HAL_GPIO_Init+0x2e8>
 8002e10:	69ba      	ldr	r2, [r7, #24]
 8002e12:	693b      	ldr	r3, [r7, #16]
 8002e14:	4313      	orrs	r3, r2
 8002e16:	61bb      	str	r3, [r7, #24]
 8002e18:	4a12      	ldr	r2, [pc, #72]	@ (8002e64 <HAL_GPIO_Init+0x334>)
 8002e1a:	69bb      	ldr	r3, [r7, #24]
 8002e1c:	6013      	str	r3, [r2, #0]
 8002e1e:	69fb      	ldr	r3, [r7, #28]
 8002e20:	3301      	adds	r3, #1
 8002e22:	61fb      	str	r3, [r7, #28]
 8002e24:	69fb      	ldr	r3, [r7, #28]
 8002e26:	2b0f      	cmp	r3, #15
 8002e28:	f67f ae90 	bls.w	8002b4c <HAL_GPIO_Init+0x1c>
 8002e2c:	bf00      	nop
 8002e2e:	bf00      	nop
 8002e30:	3724      	adds	r7, #36	@ 0x24
 8002e32:	46bd      	mov	sp, r7
 8002e34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e38:	4770      	bx	lr
 8002e3a:	bf00      	nop
 8002e3c:	40023800 	.word	0x40023800
 8002e40:	40013800 	.word	0x40013800
 8002e44:	40020000 	.word	0x40020000
 8002e48:	40020400 	.word	0x40020400
 8002e4c:	40020800 	.word	0x40020800
 8002e50:	40020c00 	.word	0x40020c00
 8002e54:	40021000 	.word	0x40021000
 8002e58:	40021400 	.word	0x40021400
 8002e5c:	40021800 	.word	0x40021800
 8002e60:	40021c00 	.word	0x40021c00
 8002e64:	40013c00 	.word	0x40013c00

08002e68 <HAL_GPIO_WritePin>:
 8002e68:	b480      	push	{r7}
 8002e6a:	b083      	sub	sp, #12
 8002e6c:	af00      	add	r7, sp, #0
 8002e6e:	6078      	str	r0, [r7, #4]
 8002e70:	460b      	mov	r3, r1
 8002e72:	807b      	strh	r3, [r7, #2]
 8002e74:	4613      	mov	r3, r2
 8002e76:	707b      	strb	r3, [r7, #1]
 8002e78:	787b      	ldrb	r3, [r7, #1]
 8002e7a:	2b00      	cmp	r3, #0
 8002e7c:	d003      	beq.n	8002e86 <HAL_GPIO_WritePin+0x1e>
 8002e7e:	887a      	ldrh	r2, [r7, #2]
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	619a      	str	r2, [r3, #24]
 8002e84:	e003      	b.n	8002e8e <HAL_GPIO_WritePin+0x26>
 8002e86:	887b      	ldrh	r3, [r7, #2]
 8002e88:	041a      	lsls	r2, r3, #16
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	619a      	str	r2, [r3, #24]
 8002e8e:	bf00      	nop
 8002e90:	370c      	adds	r7, #12
 8002e92:	46bd      	mov	sp, r7
 8002e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e98:	4770      	bx	lr
	...

08002e9c <HAL_RCC_OscConfig>:
 8002e9c:	b580      	push	{r7, lr}
 8002e9e:	b086      	sub	sp, #24
 8002ea0:	af00      	add	r7, sp, #0
 8002ea2:	6078      	str	r0, [r7, #4]
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	2b00      	cmp	r3, #0
 8002ea8:	d101      	bne.n	8002eae <HAL_RCC_OscConfig+0x12>
 8002eaa:	2301      	movs	r3, #1
 8002eac:	e267      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	f003 0301 	and.w	r3, r3, #1
 8002eb6:	2b00      	cmp	r3, #0
 8002eb8:	d075      	beq.n	8002fa6 <HAL_RCC_OscConfig+0x10a>
 8002eba:	4b88      	ldr	r3, [pc, #544]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002ebc:	689b      	ldr	r3, [r3, #8]
 8002ebe:	f003 030c 	and.w	r3, r3, #12
 8002ec2:	2b04      	cmp	r3, #4
 8002ec4:	d00c      	beq.n	8002ee0 <HAL_RCC_OscConfig+0x44>
 8002ec6:	4b85      	ldr	r3, [pc, #532]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002ec8:	689b      	ldr	r3, [r3, #8]
 8002eca:	f003 030c 	and.w	r3, r3, #12
 8002ece:	2b08      	cmp	r3, #8
 8002ed0:	d112      	bne.n	8002ef8 <HAL_RCC_OscConfig+0x5c>
 8002ed2:	4b82      	ldr	r3, [pc, #520]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002ed4:	685b      	ldr	r3, [r3, #4]
 8002ed6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002eda:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002ede:	d10b      	bne.n	8002ef8 <HAL_RCC_OscConfig+0x5c>
 8002ee0:	4b7e      	ldr	r3, [pc, #504]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002ee8:	2b00      	cmp	r3, #0
 8002eea:	d05b      	beq.n	8002fa4 <HAL_RCC_OscConfig+0x108>
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	685b      	ldr	r3, [r3, #4]
 8002ef0:	2b00      	cmp	r3, #0
 8002ef2:	d157      	bne.n	8002fa4 <HAL_RCC_OscConfig+0x108>
 8002ef4:	2301      	movs	r3, #1
 8002ef6:	e242      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	685b      	ldr	r3, [r3, #4]
 8002efc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002f00:	d106      	bne.n	8002f10 <HAL_RCC_OscConfig+0x74>
 8002f02:	4b76      	ldr	r3, [pc, #472]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	4a75      	ldr	r2, [pc, #468]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f08:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002f0c:	6013      	str	r3, [r2, #0]
 8002f0e:	e01d      	b.n	8002f4c <HAL_RCC_OscConfig+0xb0>
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	685b      	ldr	r3, [r3, #4]
 8002f14:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002f18:	d10c      	bne.n	8002f34 <HAL_RCC_OscConfig+0x98>
 8002f1a:	4b70      	ldr	r3, [pc, #448]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	4a6f      	ldr	r2, [pc, #444]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f20:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002f24:	6013      	str	r3, [r2, #0]
 8002f26:	4b6d      	ldr	r3, [pc, #436]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	4a6c      	ldr	r2, [pc, #432]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f2c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002f30:	6013      	str	r3, [r2, #0]
 8002f32:	e00b      	b.n	8002f4c <HAL_RCC_OscConfig+0xb0>
 8002f34:	4b69      	ldr	r3, [pc, #420]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f36:	681b      	ldr	r3, [r3, #0]
 8002f38:	4a68      	ldr	r2, [pc, #416]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f3a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002f3e:	6013      	str	r3, [r2, #0]
 8002f40:	4b66      	ldr	r3, [pc, #408]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	4a65      	ldr	r2, [pc, #404]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f46:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002f4a:	6013      	str	r3, [r2, #0]
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	685b      	ldr	r3, [r3, #4]
 8002f50:	2b00      	cmp	r3, #0
 8002f52:	d013      	beq.n	8002f7c <HAL_RCC_OscConfig+0xe0>
 8002f54:	f7ff fc18 	bl	8002788 <HAL_GetTick>
 8002f58:	6138      	str	r0, [r7, #16]
 8002f5a:	e008      	b.n	8002f6e <HAL_RCC_OscConfig+0xd2>
 8002f5c:	f7ff fc14 	bl	8002788 <HAL_GetTick>
 8002f60:	4602      	mov	r2, r0
 8002f62:	693b      	ldr	r3, [r7, #16]
 8002f64:	1ad3      	subs	r3, r2, r3
 8002f66:	2b64      	cmp	r3, #100	@ 0x64
 8002f68:	d901      	bls.n	8002f6e <HAL_RCC_OscConfig+0xd2>
 8002f6a:	2303      	movs	r3, #3
 8002f6c:	e207      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 8002f6e:	4b5b      	ldr	r3, [pc, #364]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f76:	2b00      	cmp	r3, #0
 8002f78:	d0f0      	beq.n	8002f5c <HAL_RCC_OscConfig+0xc0>
 8002f7a:	e014      	b.n	8002fa6 <HAL_RCC_OscConfig+0x10a>
 8002f7c:	f7ff fc04 	bl	8002788 <HAL_GetTick>
 8002f80:	6138      	str	r0, [r7, #16]
 8002f82:	e008      	b.n	8002f96 <HAL_RCC_OscConfig+0xfa>
 8002f84:	f7ff fc00 	bl	8002788 <HAL_GetTick>
 8002f88:	4602      	mov	r2, r0
 8002f8a:	693b      	ldr	r3, [r7, #16]
 8002f8c:	1ad3      	subs	r3, r2, r3
 8002f8e:	2b64      	cmp	r3, #100	@ 0x64
 8002f90:	d901      	bls.n	8002f96 <HAL_RCC_OscConfig+0xfa>
 8002f92:	2303      	movs	r3, #3
 8002f94:	e1f3      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 8002f96:	4b51      	ldr	r3, [pc, #324]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f9e:	2b00      	cmp	r3, #0
 8002fa0:	d1f0      	bne.n	8002f84 <HAL_RCC_OscConfig+0xe8>
 8002fa2:	e000      	b.n	8002fa6 <HAL_RCC_OscConfig+0x10a>
 8002fa4:	bf00      	nop
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	f003 0302 	and.w	r3, r3, #2
 8002fae:	2b00      	cmp	r3, #0
 8002fb0:	d063      	beq.n	800307a <HAL_RCC_OscConfig+0x1de>
 8002fb2:	4b4a      	ldr	r3, [pc, #296]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002fb4:	689b      	ldr	r3, [r3, #8]
 8002fb6:	f003 030c 	and.w	r3, r3, #12
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d00b      	beq.n	8002fd6 <HAL_RCC_OscConfig+0x13a>
 8002fbe:	4b47      	ldr	r3, [pc, #284]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002fc0:	689b      	ldr	r3, [r3, #8]
 8002fc2:	f003 030c 	and.w	r3, r3, #12
 8002fc6:	2b08      	cmp	r3, #8
 8002fc8:	d11c      	bne.n	8003004 <HAL_RCC_OscConfig+0x168>
 8002fca:	4b44      	ldr	r3, [pc, #272]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002fcc:	685b      	ldr	r3, [r3, #4]
 8002fce:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002fd2:	2b00      	cmp	r3, #0
 8002fd4:	d116      	bne.n	8003004 <HAL_RCC_OscConfig+0x168>
 8002fd6:	4b41      	ldr	r3, [pc, #260]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	f003 0302 	and.w	r3, r3, #2
 8002fde:	2b00      	cmp	r3, #0
 8002fe0:	d005      	beq.n	8002fee <HAL_RCC_OscConfig+0x152>
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	68db      	ldr	r3, [r3, #12]
 8002fe6:	2b01      	cmp	r3, #1
 8002fe8:	d001      	beq.n	8002fee <HAL_RCC_OscConfig+0x152>
 8002fea:	2301      	movs	r3, #1
 8002fec:	e1c7      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 8002fee:	4b3b      	ldr	r3, [pc, #236]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002ff0:	681b      	ldr	r3, [r3, #0]
 8002ff2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	691b      	ldr	r3, [r3, #16]
 8002ffa:	00db      	lsls	r3, r3, #3
 8002ffc:	4937      	ldr	r1, [pc, #220]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8002ffe:	4313      	orrs	r3, r2
 8003000:	600b      	str	r3, [r1, #0]
 8003002:	e03a      	b.n	800307a <HAL_RCC_OscConfig+0x1de>
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	68db      	ldr	r3, [r3, #12]
 8003008:	2b00      	cmp	r3, #0
 800300a:	d020      	beq.n	800304e <HAL_RCC_OscConfig+0x1b2>
 800300c:	4b34      	ldr	r3, [pc, #208]	@ (80030e0 <HAL_RCC_OscConfig+0x244>)
 800300e:	2201      	movs	r2, #1
 8003010:	601a      	str	r2, [r3, #0]
 8003012:	f7ff fbb9 	bl	8002788 <HAL_GetTick>
 8003016:	6138      	str	r0, [r7, #16]
 8003018:	e008      	b.n	800302c <HAL_RCC_OscConfig+0x190>
 800301a:	f7ff fbb5 	bl	8002788 <HAL_GetTick>
 800301e:	4602      	mov	r2, r0
 8003020:	693b      	ldr	r3, [r7, #16]
 8003022:	1ad3      	subs	r3, r2, r3
 8003024:	2b02      	cmp	r3, #2
 8003026:	d901      	bls.n	800302c <HAL_RCC_OscConfig+0x190>
 8003028:	2303      	movs	r3, #3
 800302a:	e1a8      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 800302c:	4b2b      	ldr	r3, [pc, #172]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	f003 0302 	and.w	r3, r3, #2
 8003034:	2b00      	cmp	r3, #0
 8003036:	d0f0      	beq.n	800301a <HAL_RCC_OscConfig+0x17e>
 8003038:	4b28      	ldr	r3, [pc, #160]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 800303a:	681b      	ldr	r3, [r3, #0]
 800303c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	691b      	ldr	r3, [r3, #16]
 8003044:	00db      	lsls	r3, r3, #3
 8003046:	4925      	ldr	r1, [pc, #148]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8003048:	4313      	orrs	r3, r2
 800304a:	600b      	str	r3, [r1, #0]
 800304c:	e015      	b.n	800307a <HAL_RCC_OscConfig+0x1de>
 800304e:	4b24      	ldr	r3, [pc, #144]	@ (80030e0 <HAL_RCC_OscConfig+0x244>)
 8003050:	2200      	movs	r2, #0
 8003052:	601a      	str	r2, [r3, #0]
 8003054:	f7ff fb98 	bl	8002788 <HAL_GetTick>
 8003058:	6138      	str	r0, [r7, #16]
 800305a:	e008      	b.n	800306e <HAL_RCC_OscConfig+0x1d2>
 800305c:	f7ff fb94 	bl	8002788 <HAL_GetTick>
 8003060:	4602      	mov	r2, r0
 8003062:	693b      	ldr	r3, [r7, #16]
 8003064:	1ad3      	subs	r3, r2, r3
 8003066:	2b02      	cmp	r3, #2
 8003068:	d901      	bls.n	800306e <HAL_RCC_OscConfig+0x1d2>
 800306a:	2303      	movs	r3, #3
 800306c:	e187      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 800306e:	4b1b      	ldr	r3, [pc, #108]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	f003 0302 	and.w	r3, r3, #2
 8003076:	2b00      	cmp	r3, #0
 8003078:	d1f0      	bne.n	800305c <HAL_RCC_OscConfig+0x1c0>
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	681b      	ldr	r3, [r3, #0]
 800307e:	f003 0308 	and.w	r3, r3, #8
 8003082:	2b00      	cmp	r3, #0
 8003084:	d036      	beq.n	80030f4 <HAL_RCC_OscConfig+0x258>
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	695b      	ldr	r3, [r3, #20]
 800308a:	2b00      	cmp	r3, #0
 800308c:	d016      	beq.n	80030bc <HAL_RCC_OscConfig+0x220>
 800308e:	4b15      	ldr	r3, [pc, #84]	@ (80030e4 <HAL_RCC_OscConfig+0x248>)
 8003090:	2201      	movs	r2, #1
 8003092:	601a      	str	r2, [r3, #0]
 8003094:	f7ff fb78 	bl	8002788 <HAL_GetTick>
 8003098:	6138      	str	r0, [r7, #16]
 800309a:	e008      	b.n	80030ae <HAL_RCC_OscConfig+0x212>
 800309c:	f7ff fb74 	bl	8002788 <HAL_GetTick>
 80030a0:	4602      	mov	r2, r0
 80030a2:	693b      	ldr	r3, [r7, #16]
 80030a4:	1ad3      	subs	r3, r2, r3
 80030a6:	2b02      	cmp	r3, #2
 80030a8:	d901      	bls.n	80030ae <HAL_RCC_OscConfig+0x212>
 80030aa:	2303      	movs	r3, #3
 80030ac:	e167      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 80030ae:	4b0b      	ldr	r3, [pc, #44]	@ (80030dc <HAL_RCC_OscConfig+0x240>)
 80030b0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80030b2:	f003 0302 	and.w	r3, r3, #2
 80030b6:	2b00      	cmp	r3, #0
 80030b8:	d0f0      	beq.n	800309c <HAL_RCC_OscConfig+0x200>
 80030ba:	e01b      	b.n	80030f4 <HAL_RCC_OscConfig+0x258>
 80030bc:	4b09      	ldr	r3, [pc, #36]	@ (80030e4 <HAL_RCC_OscConfig+0x248>)
 80030be:	2200      	movs	r2, #0
 80030c0:	601a      	str	r2, [r3, #0]
 80030c2:	f7ff fb61 	bl	8002788 <HAL_GetTick>
 80030c6:	6138      	str	r0, [r7, #16]
 80030c8:	e00e      	b.n	80030e8 <HAL_RCC_OscConfig+0x24c>
 80030ca:	f7ff fb5d 	bl	8002788 <HAL_GetTick>
 80030ce:	4602      	mov	r2, r0
 80030d0:	693b      	ldr	r3, [r7, #16]
 80030d2:	1ad3      	subs	r3, r2, r3
 80030d4:	2b02      	cmp	r3, #2
 80030d6:	d907      	bls.n	80030e8 <HAL_RCC_OscConfig+0x24c>
 80030d8:	2303      	movs	r3, #3
 80030da:	e150      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 80030dc:	40023800 	.word	0x40023800
 80030e0:	42470000 	.word	0x42470000
 80030e4:	42470e80 	.word	0x42470e80
 80030e8:	4b88      	ldr	r3, [pc, #544]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 80030ea:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80030ec:	f003 0302 	and.w	r3, r3, #2
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d1ea      	bne.n	80030ca <HAL_RCC_OscConfig+0x22e>
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	f003 0304 	and.w	r3, r3, #4
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	f000 8097 	beq.w	8003230 <HAL_RCC_OscConfig+0x394>
 8003102:	2300      	movs	r3, #0
 8003104:	75fb      	strb	r3, [r7, #23]
 8003106:	4b81      	ldr	r3, [pc, #516]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 8003108:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800310a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800310e:	2b00      	cmp	r3, #0
 8003110:	d10f      	bne.n	8003132 <HAL_RCC_OscConfig+0x296>
 8003112:	2300      	movs	r3, #0
 8003114:	60bb      	str	r3, [r7, #8]
 8003116:	4b7d      	ldr	r3, [pc, #500]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 8003118:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800311a:	4a7c      	ldr	r2, [pc, #496]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 800311c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003120:	6413      	str	r3, [r2, #64]	@ 0x40
 8003122:	4b7a      	ldr	r3, [pc, #488]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 8003124:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003126:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800312a:	60bb      	str	r3, [r7, #8]
 800312c:	68bb      	ldr	r3, [r7, #8]
 800312e:	2301      	movs	r3, #1
 8003130:	75fb      	strb	r3, [r7, #23]
 8003132:	4b77      	ldr	r3, [pc, #476]	@ (8003310 <HAL_RCC_OscConfig+0x474>)
 8003134:	681b      	ldr	r3, [r3, #0]
 8003136:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800313a:	2b00      	cmp	r3, #0
 800313c:	d118      	bne.n	8003170 <HAL_RCC_OscConfig+0x2d4>
 800313e:	4b74      	ldr	r3, [pc, #464]	@ (8003310 <HAL_RCC_OscConfig+0x474>)
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	4a73      	ldr	r2, [pc, #460]	@ (8003310 <HAL_RCC_OscConfig+0x474>)
 8003144:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003148:	6013      	str	r3, [r2, #0]
 800314a:	f7ff fb1d 	bl	8002788 <HAL_GetTick>
 800314e:	6138      	str	r0, [r7, #16]
 8003150:	e008      	b.n	8003164 <HAL_RCC_OscConfig+0x2c8>
 8003152:	f7ff fb19 	bl	8002788 <HAL_GetTick>
 8003156:	4602      	mov	r2, r0
 8003158:	693b      	ldr	r3, [r7, #16]
 800315a:	1ad3      	subs	r3, r2, r3
 800315c:	2b02      	cmp	r3, #2
 800315e:	d901      	bls.n	8003164 <HAL_RCC_OscConfig+0x2c8>
 8003160:	2303      	movs	r3, #3
 8003162:	e10c      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 8003164:	4b6a      	ldr	r3, [pc, #424]	@ (8003310 <HAL_RCC_OscConfig+0x474>)
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800316c:	2b00      	cmp	r3, #0
 800316e:	d0f0      	beq.n	8003152 <HAL_RCC_OscConfig+0x2b6>
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	689b      	ldr	r3, [r3, #8]
 8003174:	2b01      	cmp	r3, #1
 8003176:	d106      	bne.n	8003186 <HAL_RCC_OscConfig+0x2ea>
 8003178:	4b64      	ldr	r3, [pc, #400]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 800317a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800317c:	4a63      	ldr	r2, [pc, #396]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 800317e:	f043 0301 	orr.w	r3, r3, #1
 8003182:	6713      	str	r3, [r2, #112]	@ 0x70
 8003184:	e01c      	b.n	80031c0 <HAL_RCC_OscConfig+0x324>
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	689b      	ldr	r3, [r3, #8]
 800318a:	2b05      	cmp	r3, #5
 800318c:	d10c      	bne.n	80031a8 <HAL_RCC_OscConfig+0x30c>
 800318e:	4b5f      	ldr	r3, [pc, #380]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 8003190:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003192:	4a5e      	ldr	r2, [pc, #376]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 8003194:	f043 0304 	orr.w	r3, r3, #4
 8003198:	6713      	str	r3, [r2, #112]	@ 0x70
 800319a:	4b5c      	ldr	r3, [pc, #368]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 800319c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800319e:	4a5b      	ldr	r2, [pc, #364]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 80031a0:	f043 0301 	orr.w	r3, r3, #1
 80031a4:	6713      	str	r3, [r2, #112]	@ 0x70
 80031a6:	e00b      	b.n	80031c0 <HAL_RCC_OscConfig+0x324>
 80031a8:	4b58      	ldr	r3, [pc, #352]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 80031aa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80031ac:	4a57      	ldr	r2, [pc, #348]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 80031ae:	f023 0301 	bic.w	r3, r3, #1
 80031b2:	6713      	str	r3, [r2, #112]	@ 0x70
 80031b4:	4b55      	ldr	r3, [pc, #340]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 80031b6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80031b8:	4a54      	ldr	r2, [pc, #336]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 80031ba:	f023 0304 	bic.w	r3, r3, #4
 80031be:	6713      	str	r3, [r2, #112]	@ 0x70
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	689b      	ldr	r3, [r3, #8]
 80031c4:	2b00      	cmp	r3, #0
 80031c6:	d015      	beq.n	80031f4 <HAL_RCC_OscConfig+0x358>
 80031c8:	f7ff fade 	bl	8002788 <HAL_GetTick>
 80031cc:	6138      	str	r0, [r7, #16]
 80031ce:	e00a      	b.n	80031e6 <HAL_RCC_OscConfig+0x34a>
 80031d0:	f7ff fada 	bl	8002788 <HAL_GetTick>
 80031d4:	4602      	mov	r2, r0
 80031d6:	693b      	ldr	r3, [r7, #16]
 80031d8:	1ad3      	subs	r3, r2, r3
 80031da:	f241 3288 	movw	r2, #5000	@ 0x1388
 80031de:	4293      	cmp	r3, r2
 80031e0:	d901      	bls.n	80031e6 <HAL_RCC_OscConfig+0x34a>
 80031e2:	2303      	movs	r3, #3
 80031e4:	e0cb      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 80031e6:	4b49      	ldr	r3, [pc, #292]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 80031e8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80031ea:	f003 0302 	and.w	r3, r3, #2
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d0ee      	beq.n	80031d0 <HAL_RCC_OscConfig+0x334>
 80031f2:	e014      	b.n	800321e <HAL_RCC_OscConfig+0x382>
 80031f4:	f7ff fac8 	bl	8002788 <HAL_GetTick>
 80031f8:	6138      	str	r0, [r7, #16]
 80031fa:	e00a      	b.n	8003212 <HAL_RCC_OscConfig+0x376>
 80031fc:	f7ff fac4 	bl	8002788 <HAL_GetTick>
 8003200:	4602      	mov	r2, r0
 8003202:	693b      	ldr	r3, [r7, #16]
 8003204:	1ad3      	subs	r3, r2, r3
 8003206:	f241 3288 	movw	r2, #5000	@ 0x1388
 800320a:	4293      	cmp	r3, r2
 800320c:	d901      	bls.n	8003212 <HAL_RCC_OscConfig+0x376>
 800320e:	2303      	movs	r3, #3
 8003210:	e0b5      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 8003212:	4b3e      	ldr	r3, [pc, #248]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 8003214:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003216:	f003 0302 	and.w	r3, r3, #2
 800321a:	2b00      	cmp	r3, #0
 800321c:	d1ee      	bne.n	80031fc <HAL_RCC_OscConfig+0x360>
 800321e:	7dfb      	ldrb	r3, [r7, #23]
 8003220:	2b01      	cmp	r3, #1
 8003222:	d105      	bne.n	8003230 <HAL_RCC_OscConfig+0x394>
 8003224:	4b39      	ldr	r3, [pc, #228]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 8003226:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003228:	4a38      	ldr	r2, [pc, #224]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 800322a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800322e:	6413      	str	r3, [r2, #64]	@ 0x40
 8003230:	687b      	ldr	r3, [r7, #4]
 8003232:	699b      	ldr	r3, [r3, #24]
 8003234:	2b00      	cmp	r3, #0
 8003236:	f000 80a1 	beq.w	800337c <HAL_RCC_OscConfig+0x4e0>
 800323a:	4b34      	ldr	r3, [pc, #208]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 800323c:	689b      	ldr	r3, [r3, #8]
 800323e:	f003 030c 	and.w	r3, r3, #12
 8003242:	2b08      	cmp	r3, #8
 8003244:	d05c      	beq.n	8003300 <HAL_RCC_OscConfig+0x464>
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	699b      	ldr	r3, [r3, #24]
 800324a:	2b02      	cmp	r3, #2
 800324c:	d141      	bne.n	80032d2 <HAL_RCC_OscConfig+0x436>
 800324e:	4b31      	ldr	r3, [pc, #196]	@ (8003314 <HAL_RCC_OscConfig+0x478>)
 8003250:	2200      	movs	r2, #0
 8003252:	601a      	str	r2, [r3, #0]
 8003254:	f7ff fa98 	bl	8002788 <HAL_GetTick>
 8003258:	6138      	str	r0, [r7, #16]
 800325a:	e008      	b.n	800326e <HAL_RCC_OscConfig+0x3d2>
 800325c:	f7ff fa94 	bl	8002788 <HAL_GetTick>
 8003260:	4602      	mov	r2, r0
 8003262:	693b      	ldr	r3, [r7, #16]
 8003264:	1ad3      	subs	r3, r2, r3
 8003266:	2b02      	cmp	r3, #2
 8003268:	d901      	bls.n	800326e <HAL_RCC_OscConfig+0x3d2>
 800326a:	2303      	movs	r3, #3
 800326c:	e087      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 800326e:	4b27      	ldr	r3, [pc, #156]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003276:	2b00      	cmp	r3, #0
 8003278:	d1f0      	bne.n	800325c <HAL_RCC_OscConfig+0x3c0>
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	69da      	ldr	r2, [r3, #28]
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	6a1b      	ldr	r3, [r3, #32]
 8003282:	431a      	orrs	r2, r3
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003288:	019b      	lsls	r3, r3, #6
 800328a:	431a      	orrs	r2, r3
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003290:	085b      	lsrs	r3, r3, #1
 8003292:	3b01      	subs	r3, #1
 8003294:	041b      	lsls	r3, r3, #16
 8003296:	431a      	orrs	r2, r3
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800329c:	061b      	lsls	r3, r3, #24
 800329e:	491b      	ldr	r1, [pc, #108]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 80032a0:	4313      	orrs	r3, r2
 80032a2:	604b      	str	r3, [r1, #4]
 80032a4:	4b1b      	ldr	r3, [pc, #108]	@ (8003314 <HAL_RCC_OscConfig+0x478>)
 80032a6:	2201      	movs	r2, #1
 80032a8:	601a      	str	r2, [r3, #0]
 80032aa:	f7ff fa6d 	bl	8002788 <HAL_GetTick>
 80032ae:	6138      	str	r0, [r7, #16]
 80032b0:	e008      	b.n	80032c4 <HAL_RCC_OscConfig+0x428>
 80032b2:	f7ff fa69 	bl	8002788 <HAL_GetTick>
 80032b6:	4602      	mov	r2, r0
 80032b8:	693b      	ldr	r3, [r7, #16]
 80032ba:	1ad3      	subs	r3, r2, r3
 80032bc:	2b02      	cmp	r3, #2
 80032be:	d901      	bls.n	80032c4 <HAL_RCC_OscConfig+0x428>
 80032c0:	2303      	movs	r3, #3
 80032c2:	e05c      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 80032c4:	4b11      	ldr	r3, [pc, #68]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 80032c6:	681b      	ldr	r3, [r3, #0]
 80032c8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80032cc:	2b00      	cmp	r3, #0
 80032ce:	d0f0      	beq.n	80032b2 <HAL_RCC_OscConfig+0x416>
 80032d0:	e054      	b.n	800337c <HAL_RCC_OscConfig+0x4e0>
 80032d2:	4b10      	ldr	r3, [pc, #64]	@ (8003314 <HAL_RCC_OscConfig+0x478>)
 80032d4:	2200      	movs	r2, #0
 80032d6:	601a      	str	r2, [r3, #0]
 80032d8:	f7ff fa56 	bl	8002788 <HAL_GetTick>
 80032dc:	6138      	str	r0, [r7, #16]
 80032de:	e008      	b.n	80032f2 <HAL_RCC_OscConfig+0x456>
 80032e0:	f7ff fa52 	bl	8002788 <HAL_GetTick>
 80032e4:	4602      	mov	r2, r0
 80032e6:	693b      	ldr	r3, [r7, #16]
 80032e8:	1ad3      	subs	r3, r2, r3
 80032ea:	2b02      	cmp	r3, #2
 80032ec:	d901      	bls.n	80032f2 <HAL_RCC_OscConfig+0x456>
 80032ee:	2303      	movs	r3, #3
 80032f0:	e045      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 80032f2:	4b06      	ldr	r3, [pc, #24]	@ (800330c <HAL_RCC_OscConfig+0x470>)
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80032fa:	2b00      	cmp	r3, #0
 80032fc:	d1f0      	bne.n	80032e0 <HAL_RCC_OscConfig+0x444>
 80032fe:	e03d      	b.n	800337c <HAL_RCC_OscConfig+0x4e0>
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	699b      	ldr	r3, [r3, #24]
 8003304:	2b01      	cmp	r3, #1
 8003306:	d107      	bne.n	8003318 <HAL_RCC_OscConfig+0x47c>
 8003308:	2301      	movs	r3, #1
 800330a:	e038      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 800330c:	40023800 	.word	0x40023800
 8003310:	40007000 	.word	0x40007000
 8003314:	42470060 	.word	0x42470060
 8003318:	4b1b      	ldr	r3, [pc, #108]	@ (8003388 <HAL_RCC_OscConfig+0x4ec>)
 800331a:	685b      	ldr	r3, [r3, #4]
 800331c:	60fb      	str	r3, [r7, #12]
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	699b      	ldr	r3, [r3, #24]
 8003322:	2b01      	cmp	r3, #1
 8003324:	d028      	beq.n	8003378 <HAL_RCC_OscConfig+0x4dc>
 8003326:	68fb      	ldr	r3, [r7, #12]
 8003328:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	69db      	ldr	r3, [r3, #28]
 8003330:	429a      	cmp	r2, r3
 8003332:	d121      	bne.n	8003378 <HAL_RCC_OscConfig+0x4dc>
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	6a1b      	ldr	r3, [r3, #32]
 800333e:	429a      	cmp	r2, r3
 8003340:	d11a      	bne.n	8003378 <HAL_RCC_OscConfig+0x4dc>
 8003342:	68fa      	ldr	r2, [r7, #12]
 8003344:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8003348:	4013      	ands	r3, r2
 800334a:	687a      	ldr	r2, [r7, #4]
 800334c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800334e:	0192      	lsls	r2, r2, #6
 8003350:	4293      	cmp	r3, r2
 8003352:	d111      	bne.n	8003378 <HAL_RCC_OscConfig+0x4dc>
 8003354:	68fb      	ldr	r3, [r7, #12]
 8003356:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800335e:	085b      	lsrs	r3, r3, #1
 8003360:	3b01      	subs	r3, #1
 8003362:	041b      	lsls	r3, r3, #16
 8003364:	429a      	cmp	r2, r3
 8003366:	d107      	bne.n	8003378 <HAL_RCC_OscConfig+0x4dc>
 8003368:	68fb      	ldr	r3, [r7, #12]
 800336a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003372:	061b      	lsls	r3, r3, #24
 8003374:	429a      	cmp	r2, r3
 8003376:	d001      	beq.n	800337c <HAL_RCC_OscConfig+0x4e0>
 8003378:	2301      	movs	r3, #1
 800337a:	e000      	b.n	800337e <HAL_RCC_OscConfig+0x4e2>
 800337c:	2300      	movs	r3, #0
 800337e:	4618      	mov	r0, r3
 8003380:	3718      	adds	r7, #24
 8003382:	46bd      	mov	sp, r7
 8003384:	bd80      	pop	{r7, pc}
 8003386:	bf00      	nop
 8003388:	40023800 	.word	0x40023800

0800338c <HAL_RCC_ClockConfig>:
 800338c:	b580      	push	{r7, lr}
 800338e:	b084      	sub	sp, #16
 8003390:	af00      	add	r7, sp, #0
 8003392:	6078      	str	r0, [r7, #4]
 8003394:	6039      	str	r1, [r7, #0]
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	2b00      	cmp	r3, #0
 800339a:	d101      	bne.n	80033a0 <HAL_RCC_ClockConfig+0x14>
 800339c:	2301      	movs	r3, #1
 800339e:	e0cc      	b.n	800353a <HAL_RCC_ClockConfig+0x1ae>
 80033a0:	4b68      	ldr	r3, [pc, #416]	@ (8003544 <HAL_RCC_ClockConfig+0x1b8>)
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	f003 0307 	and.w	r3, r3, #7
 80033a8:	683a      	ldr	r2, [r7, #0]
 80033aa:	429a      	cmp	r2, r3
 80033ac:	d90c      	bls.n	80033c8 <HAL_RCC_ClockConfig+0x3c>
 80033ae:	4b65      	ldr	r3, [pc, #404]	@ (8003544 <HAL_RCC_ClockConfig+0x1b8>)
 80033b0:	683a      	ldr	r2, [r7, #0]
 80033b2:	b2d2      	uxtb	r2, r2
 80033b4:	701a      	strb	r2, [r3, #0]
 80033b6:	4b63      	ldr	r3, [pc, #396]	@ (8003544 <HAL_RCC_ClockConfig+0x1b8>)
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	f003 0307 	and.w	r3, r3, #7
 80033be:	683a      	ldr	r2, [r7, #0]
 80033c0:	429a      	cmp	r2, r3
 80033c2:	d001      	beq.n	80033c8 <HAL_RCC_ClockConfig+0x3c>
 80033c4:	2301      	movs	r3, #1
 80033c6:	e0b8      	b.n	800353a <HAL_RCC_ClockConfig+0x1ae>
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	f003 0302 	and.w	r3, r3, #2
 80033d0:	2b00      	cmp	r3, #0
 80033d2:	d020      	beq.n	8003416 <HAL_RCC_ClockConfig+0x8a>
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	f003 0304 	and.w	r3, r3, #4
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d005      	beq.n	80033ec <HAL_RCC_ClockConfig+0x60>
 80033e0:	4b59      	ldr	r3, [pc, #356]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 80033e2:	689b      	ldr	r3, [r3, #8]
 80033e4:	4a58      	ldr	r2, [pc, #352]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 80033e6:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80033ea:	6093      	str	r3, [r2, #8]
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	f003 0308 	and.w	r3, r3, #8
 80033f4:	2b00      	cmp	r3, #0
 80033f6:	d005      	beq.n	8003404 <HAL_RCC_ClockConfig+0x78>
 80033f8:	4b53      	ldr	r3, [pc, #332]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 80033fa:	689b      	ldr	r3, [r3, #8]
 80033fc:	4a52      	ldr	r2, [pc, #328]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 80033fe:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8003402:	6093      	str	r3, [r2, #8]
 8003404:	4b50      	ldr	r3, [pc, #320]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 8003406:	689b      	ldr	r3, [r3, #8]
 8003408:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	689b      	ldr	r3, [r3, #8]
 8003410:	494d      	ldr	r1, [pc, #308]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 8003412:	4313      	orrs	r3, r2
 8003414:	608b      	str	r3, [r1, #8]
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	681b      	ldr	r3, [r3, #0]
 800341a:	f003 0301 	and.w	r3, r3, #1
 800341e:	2b00      	cmp	r3, #0
 8003420:	d044      	beq.n	80034ac <HAL_RCC_ClockConfig+0x120>
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	685b      	ldr	r3, [r3, #4]
 8003426:	2b01      	cmp	r3, #1
 8003428:	d107      	bne.n	800343a <HAL_RCC_ClockConfig+0xae>
 800342a:	4b47      	ldr	r3, [pc, #284]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003432:	2b00      	cmp	r3, #0
 8003434:	d119      	bne.n	800346a <HAL_RCC_ClockConfig+0xde>
 8003436:	2301      	movs	r3, #1
 8003438:	e07f      	b.n	800353a <HAL_RCC_ClockConfig+0x1ae>
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	685b      	ldr	r3, [r3, #4]
 800343e:	2b02      	cmp	r3, #2
 8003440:	d003      	beq.n	800344a <HAL_RCC_ClockConfig+0xbe>
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	685b      	ldr	r3, [r3, #4]
 8003446:	2b03      	cmp	r3, #3
 8003448:	d107      	bne.n	800345a <HAL_RCC_ClockConfig+0xce>
 800344a:	4b3f      	ldr	r3, [pc, #252]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003452:	2b00      	cmp	r3, #0
 8003454:	d109      	bne.n	800346a <HAL_RCC_ClockConfig+0xde>
 8003456:	2301      	movs	r3, #1
 8003458:	e06f      	b.n	800353a <HAL_RCC_ClockConfig+0x1ae>
 800345a:	4b3b      	ldr	r3, [pc, #236]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	f003 0302 	and.w	r3, r3, #2
 8003462:	2b00      	cmp	r3, #0
 8003464:	d101      	bne.n	800346a <HAL_RCC_ClockConfig+0xde>
 8003466:	2301      	movs	r3, #1
 8003468:	e067      	b.n	800353a <HAL_RCC_ClockConfig+0x1ae>
 800346a:	4b37      	ldr	r3, [pc, #220]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 800346c:	689b      	ldr	r3, [r3, #8]
 800346e:	f023 0203 	bic.w	r2, r3, #3
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	685b      	ldr	r3, [r3, #4]
 8003476:	4934      	ldr	r1, [pc, #208]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 8003478:	4313      	orrs	r3, r2
 800347a:	608b      	str	r3, [r1, #8]
 800347c:	f7ff f984 	bl	8002788 <HAL_GetTick>
 8003480:	60f8      	str	r0, [r7, #12]
 8003482:	e00a      	b.n	800349a <HAL_RCC_ClockConfig+0x10e>
 8003484:	f7ff f980 	bl	8002788 <HAL_GetTick>
 8003488:	4602      	mov	r2, r0
 800348a:	68fb      	ldr	r3, [r7, #12]
 800348c:	1ad3      	subs	r3, r2, r3
 800348e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003492:	4293      	cmp	r3, r2
 8003494:	d901      	bls.n	800349a <HAL_RCC_ClockConfig+0x10e>
 8003496:	2303      	movs	r3, #3
 8003498:	e04f      	b.n	800353a <HAL_RCC_ClockConfig+0x1ae>
 800349a:	4b2b      	ldr	r3, [pc, #172]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 800349c:	689b      	ldr	r3, [r3, #8]
 800349e:	f003 020c 	and.w	r2, r3, #12
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	685b      	ldr	r3, [r3, #4]
 80034a6:	009b      	lsls	r3, r3, #2
 80034a8:	429a      	cmp	r2, r3
 80034aa:	d1eb      	bne.n	8003484 <HAL_RCC_ClockConfig+0xf8>
 80034ac:	4b25      	ldr	r3, [pc, #148]	@ (8003544 <HAL_RCC_ClockConfig+0x1b8>)
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	f003 0307 	and.w	r3, r3, #7
 80034b4:	683a      	ldr	r2, [r7, #0]
 80034b6:	429a      	cmp	r2, r3
 80034b8:	d20c      	bcs.n	80034d4 <HAL_RCC_ClockConfig+0x148>
 80034ba:	4b22      	ldr	r3, [pc, #136]	@ (8003544 <HAL_RCC_ClockConfig+0x1b8>)
 80034bc:	683a      	ldr	r2, [r7, #0]
 80034be:	b2d2      	uxtb	r2, r2
 80034c0:	701a      	strb	r2, [r3, #0]
 80034c2:	4b20      	ldr	r3, [pc, #128]	@ (8003544 <HAL_RCC_ClockConfig+0x1b8>)
 80034c4:	681b      	ldr	r3, [r3, #0]
 80034c6:	f003 0307 	and.w	r3, r3, #7
 80034ca:	683a      	ldr	r2, [r7, #0]
 80034cc:	429a      	cmp	r2, r3
 80034ce:	d001      	beq.n	80034d4 <HAL_RCC_ClockConfig+0x148>
 80034d0:	2301      	movs	r3, #1
 80034d2:	e032      	b.n	800353a <HAL_RCC_ClockConfig+0x1ae>
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	681b      	ldr	r3, [r3, #0]
 80034d8:	f003 0304 	and.w	r3, r3, #4
 80034dc:	2b00      	cmp	r3, #0
 80034de:	d008      	beq.n	80034f2 <HAL_RCC_ClockConfig+0x166>
 80034e0:	4b19      	ldr	r3, [pc, #100]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 80034e2:	689b      	ldr	r3, [r3, #8]
 80034e4:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	68db      	ldr	r3, [r3, #12]
 80034ec:	4916      	ldr	r1, [pc, #88]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 80034ee:	4313      	orrs	r3, r2
 80034f0:	608b      	str	r3, [r1, #8]
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	f003 0308 	and.w	r3, r3, #8
 80034fa:	2b00      	cmp	r3, #0
 80034fc:	d009      	beq.n	8003512 <HAL_RCC_ClockConfig+0x186>
 80034fe:	4b12      	ldr	r3, [pc, #72]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 8003500:	689b      	ldr	r3, [r3, #8]
 8003502:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	691b      	ldr	r3, [r3, #16]
 800350a:	00db      	lsls	r3, r3, #3
 800350c:	490e      	ldr	r1, [pc, #56]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 800350e:	4313      	orrs	r3, r2
 8003510:	608b      	str	r3, [r1, #8]
 8003512:	f000 f821 	bl	8003558 <HAL_RCC_GetSysClockFreq>
 8003516:	4602      	mov	r2, r0
 8003518:	4b0b      	ldr	r3, [pc, #44]	@ (8003548 <HAL_RCC_ClockConfig+0x1bc>)
 800351a:	689b      	ldr	r3, [r3, #8]
 800351c:	091b      	lsrs	r3, r3, #4
 800351e:	f003 030f 	and.w	r3, r3, #15
 8003522:	490a      	ldr	r1, [pc, #40]	@ (800354c <HAL_RCC_ClockConfig+0x1c0>)
 8003524:	5ccb      	ldrb	r3, [r1, r3]
 8003526:	fa22 f303 	lsr.w	r3, r2, r3
 800352a:	4a09      	ldr	r2, [pc, #36]	@ (8003550 <HAL_RCC_ClockConfig+0x1c4>)
 800352c:	6013      	str	r3, [r2, #0]
 800352e:	4b09      	ldr	r3, [pc, #36]	@ (8003554 <HAL_RCC_ClockConfig+0x1c8>)
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	4618      	mov	r0, r3
 8003534:	f7ff f8e4 	bl	8002700 <HAL_InitTick>
 8003538:	2300      	movs	r3, #0
 800353a:	4618      	mov	r0, r3
 800353c:	3710      	adds	r7, #16
 800353e:	46bd      	mov	sp, r7
 8003540:	bd80      	pop	{r7, pc}
 8003542:	bf00      	nop
 8003544:	40023c00 	.word	0x40023c00
 8003548:	40023800 	.word	0x40023800
 800354c:	080058a0 	.word	0x080058a0
 8003550:	200000a8 	.word	0x200000a8
 8003554:	200000ac 	.word	0x200000ac

08003558 <HAL_RCC_GetSysClockFreq>:
 8003558:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800355c:	b094      	sub	sp, #80	@ 0x50
 800355e:	af00      	add	r7, sp, #0
 8003560:	2300      	movs	r3, #0
 8003562:	647b      	str	r3, [r7, #68]	@ 0x44
 8003564:	2300      	movs	r3, #0
 8003566:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003568:	2300      	movs	r3, #0
 800356a:	643b      	str	r3, [r7, #64]	@ 0x40
 800356c:	2300      	movs	r3, #0
 800356e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003570:	4b79      	ldr	r3, [pc, #484]	@ (8003758 <HAL_RCC_GetSysClockFreq+0x200>)
 8003572:	689b      	ldr	r3, [r3, #8]
 8003574:	f003 030c 	and.w	r3, r3, #12
 8003578:	2b08      	cmp	r3, #8
 800357a:	d00d      	beq.n	8003598 <HAL_RCC_GetSysClockFreq+0x40>
 800357c:	2b08      	cmp	r3, #8
 800357e:	f200 80e1 	bhi.w	8003744 <HAL_RCC_GetSysClockFreq+0x1ec>
 8003582:	2b00      	cmp	r3, #0
 8003584:	d002      	beq.n	800358c <HAL_RCC_GetSysClockFreq+0x34>
 8003586:	2b04      	cmp	r3, #4
 8003588:	d003      	beq.n	8003592 <HAL_RCC_GetSysClockFreq+0x3a>
 800358a:	e0db      	b.n	8003744 <HAL_RCC_GetSysClockFreq+0x1ec>
 800358c:	4b73      	ldr	r3, [pc, #460]	@ (800375c <HAL_RCC_GetSysClockFreq+0x204>)
 800358e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003590:	e0db      	b.n	800374a <HAL_RCC_GetSysClockFreq+0x1f2>
 8003592:	4b73      	ldr	r3, [pc, #460]	@ (8003760 <HAL_RCC_GetSysClockFreq+0x208>)
 8003594:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003596:	e0d8      	b.n	800374a <HAL_RCC_GetSysClockFreq+0x1f2>
 8003598:	4b6f      	ldr	r3, [pc, #444]	@ (8003758 <HAL_RCC_GetSysClockFreq+0x200>)
 800359a:	685b      	ldr	r3, [r3, #4]
 800359c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80035a0:	647b      	str	r3, [r7, #68]	@ 0x44
 80035a2:	4b6d      	ldr	r3, [pc, #436]	@ (8003758 <HAL_RCC_GetSysClockFreq+0x200>)
 80035a4:	685b      	ldr	r3, [r3, #4]
 80035a6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80035aa:	2b00      	cmp	r3, #0
 80035ac:	d063      	beq.n	8003676 <HAL_RCC_GetSysClockFreq+0x11e>
 80035ae:	4b6a      	ldr	r3, [pc, #424]	@ (8003758 <HAL_RCC_GetSysClockFreq+0x200>)
 80035b0:	685b      	ldr	r3, [r3, #4]
 80035b2:	099b      	lsrs	r3, r3, #6
 80035b4:	2200      	movs	r2, #0
 80035b6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80035b8:	63fa      	str	r2, [r7, #60]	@ 0x3c
 80035ba:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80035bc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80035c0:	633b      	str	r3, [r7, #48]	@ 0x30
 80035c2:	2300      	movs	r3, #0
 80035c4:	637b      	str	r3, [r7, #52]	@ 0x34
 80035c6:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 80035ca:	4622      	mov	r2, r4
 80035cc:	462b      	mov	r3, r5
 80035ce:	f04f 0000 	mov.w	r0, #0
 80035d2:	f04f 0100 	mov.w	r1, #0
 80035d6:	0159      	lsls	r1, r3, #5
 80035d8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80035dc:	0150      	lsls	r0, r2, #5
 80035de:	4602      	mov	r2, r0
 80035e0:	460b      	mov	r3, r1
 80035e2:	4621      	mov	r1, r4
 80035e4:	1a51      	subs	r1, r2, r1
 80035e6:	6139      	str	r1, [r7, #16]
 80035e8:	4629      	mov	r1, r5
 80035ea:	eb63 0301 	sbc.w	r3, r3, r1
 80035ee:	617b      	str	r3, [r7, #20]
 80035f0:	f04f 0200 	mov.w	r2, #0
 80035f4:	f04f 0300 	mov.w	r3, #0
 80035f8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80035fc:	4659      	mov	r1, fp
 80035fe:	018b      	lsls	r3, r1, #6
 8003600:	4651      	mov	r1, sl
 8003602:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003606:	4651      	mov	r1, sl
 8003608:	018a      	lsls	r2, r1, #6
 800360a:	4651      	mov	r1, sl
 800360c:	ebb2 0801 	subs.w	r8, r2, r1
 8003610:	4659      	mov	r1, fp
 8003612:	eb63 0901 	sbc.w	r9, r3, r1
 8003616:	f04f 0200 	mov.w	r2, #0
 800361a:	f04f 0300 	mov.w	r3, #0
 800361e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003622:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003626:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800362a:	4690      	mov	r8, r2
 800362c:	4699      	mov	r9, r3
 800362e:	4623      	mov	r3, r4
 8003630:	eb18 0303 	adds.w	r3, r8, r3
 8003634:	60bb      	str	r3, [r7, #8]
 8003636:	462b      	mov	r3, r5
 8003638:	eb49 0303 	adc.w	r3, r9, r3
 800363c:	60fb      	str	r3, [r7, #12]
 800363e:	f04f 0200 	mov.w	r2, #0
 8003642:	f04f 0300 	mov.w	r3, #0
 8003646:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800364a:	4629      	mov	r1, r5
 800364c:	024b      	lsls	r3, r1, #9
 800364e:	4621      	mov	r1, r4
 8003650:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8003654:	4621      	mov	r1, r4
 8003656:	024a      	lsls	r2, r1, #9
 8003658:	4610      	mov	r0, r2
 800365a:	4619      	mov	r1, r3
 800365c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800365e:	2200      	movs	r2, #0
 8003660:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003662:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003664:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8003668:	f7fd fa3a 	bl	8000ae0 <__aeabi_uldivmod>
 800366c:	4602      	mov	r2, r0
 800366e:	460b      	mov	r3, r1
 8003670:	4613      	mov	r3, r2
 8003672:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003674:	e058      	b.n	8003728 <HAL_RCC_GetSysClockFreq+0x1d0>
 8003676:	4b38      	ldr	r3, [pc, #224]	@ (8003758 <HAL_RCC_GetSysClockFreq+0x200>)
 8003678:	685b      	ldr	r3, [r3, #4]
 800367a:	099b      	lsrs	r3, r3, #6
 800367c:	2200      	movs	r2, #0
 800367e:	4618      	mov	r0, r3
 8003680:	4611      	mov	r1, r2
 8003682:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8003686:	623b      	str	r3, [r7, #32]
 8003688:	2300      	movs	r3, #0
 800368a:	627b      	str	r3, [r7, #36]	@ 0x24
 800368c:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8003690:	4642      	mov	r2, r8
 8003692:	464b      	mov	r3, r9
 8003694:	f04f 0000 	mov.w	r0, #0
 8003698:	f04f 0100 	mov.w	r1, #0
 800369c:	0159      	lsls	r1, r3, #5
 800369e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80036a2:	0150      	lsls	r0, r2, #5
 80036a4:	4602      	mov	r2, r0
 80036a6:	460b      	mov	r3, r1
 80036a8:	4641      	mov	r1, r8
 80036aa:	ebb2 0a01 	subs.w	sl, r2, r1
 80036ae:	4649      	mov	r1, r9
 80036b0:	eb63 0b01 	sbc.w	fp, r3, r1
 80036b4:	f04f 0200 	mov.w	r2, #0
 80036b8:	f04f 0300 	mov.w	r3, #0
 80036bc:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80036c0:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80036c4:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80036c8:	ebb2 040a 	subs.w	r4, r2, sl
 80036cc:	eb63 050b 	sbc.w	r5, r3, fp
 80036d0:	f04f 0200 	mov.w	r2, #0
 80036d4:	f04f 0300 	mov.w	r3, #0
 80036d8:	00eb      	lsls	r3, r5, #3
 80036da:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80036de:	00e2      	lsls	r2, r4, #3
 80036e0:	4614      	mov	r4, r2
 80036e2:	461d      	mov	r5, r3
 80036e4:	4643      	mov	r3, r8
 80036e6:	18e3      	adds	r3, r4, r3
 80036e8:	603b      	str	r3, [r7, #0]
 80036ea:	464b      	mov	r3, r9
 80036ec:	eb45 0303 	adc.w	r3, r5, r3
 80036f0:	607b      	str	r3, [r7, #4]
 80036f2:	f04f 0200 	mov.w	r2, #0
 80036f6:	f04f 0300 	mov.w	r3, #0
 80036fa:	e9d7 4500 	ldrd	r4, r5, [r7]
 80036fe:	4629      	mov	r1, r5
 8003700:	028b      	lsls	r3, r1, #10
 8003702:	4621      	mov	r1, r4
 8003704:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003708:	4621      	mov	r1, r4
 800370a:	028a      	lsls	r2, r1, #10
 800370c:	4610      	mov	r0, r2
 800370e:	4619      	mov	r1, r3
 8003710:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003712:	2200      	movs	r2, #0
 8003714:	61bb      	str	r3, [r7, #24]
 8003716:	61fa      	str	r2, [r7, #28]
 8003718:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800371c:	f7fd f9e0 	bl	8000ae0 <__aeabi_uldivmod>
 8003720:	4602      	mov	r2, r0
 8003722:	460b      	mov	r3, r1
 8003724:	4613      	mov	r3, r2
 8003726:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003728:	4b0b      	ldr	r3, [pc, #44]	@ (8003758 <HAL_RCC_GetSysClockFreq+0x200>)
 800372a:	685b      	ldr	r3, [r3, #4]
 800372c:	0c1b      	lsrs	r3, r3, #16
 800372e:	f003 0303 	and.w	r3, r3, #3
 8003732:	3301      	adds	r3, #1
 8003734:	005b      	lsls	r3, r3, #1
 8003736:	643b      	str	r3, [r7, #64]	@ 0x40
 8003738:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800373a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800373c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003740:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003742:	e002      	b.n	800374a <HAL_RCC_GetSysClockFreq+0x1f2>
 8003744:	4b05      	ldr	r3, [pc, #20]	@ (800375c <HAL_RCC_GetSysClockFreq+0x204>)
 8003746:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003748:	bf00      	nop
 800374a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800374c:	4618      	mov	r0, r3
 800374e:	3750      	adds	r7, #80	@ 0x50
 8003750:	46bd      	mov	sp, r7
 8003752:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003756:	bf00      	nop
 8003758:	40023800 	.word	0x40023800
 800375c:	00f42400 	.word	0x00f42400
 8003760:	007a1200 	.word	0x007a1200

08003764 <HAL_RCC_GetHCLKFreq>:
 8003764:	b480      	push	{r7}
 8003766:	af00      	add	r7, sp, #0
 8003768:	4b03      	ldr	r3, [pc, #12]	@ (8003778 <HAL_RCC_GetHCLKFreq+0x14>)
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	4618      	mov	r0, r3
 800376e:	46bd      	mov	sp, r7
 8003770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003774:	4770      	bx	lr
 8003776:	bf00      	nop
 8003778:	200000a8 	.word	0x200000a8

0800377c <HAL_RCC_GetPCLK1Freq>:
 800377c:	b580      	push	{r7, lr}
 800377e:	af00      	add	r7, sp, #0
 8003780:	f7ff fff0 	bl	8003764 <HAL_RCC_GetHCLKFreq>
 8003784:	4602      	mov	r2, r0
 8003786:	4b05      	ldr	r3, [pc, #20]	@ (800379c <HAL_RCC_GetPCLK1Freq+0x20>)
 8003788:	689b      	ldr	r3, [r3, #8]
 800378a:	0a9b      	lsrs	r3, r3, #10
 800378c:	f003 0307 	and.w	r3, r3, #7
 8003790:	4903      	ldr	r1, [pc, #12]	@ (80037a0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003792:	5ccb      	ldrb	r3, [r1, r3]
 8003794:	fa22 f303 	lsr.w	r3, r2, r3
 8003798:	4618      	mov	r0, r3
 800379a:	bd80      	pop	{r7, pc}
 800379c:	40023800 	.word	0x40023800
 80037a0:	080058b0 	.word	0x080058b0

080037a4 <HAL_RCC_GetPCLK2Freq>:
 80037a4:	b580      	push	{r7, lr}
 80037a6:	af00      	add	r7, sp, #0
 80037a8:	f7ff ffdc 	bl	8003764 <HAL_RCC_GetHCLKFreq>
 80037ac:	4602      	mov	r2, r0
 80037ae:	4b05      	ldr	r3, [pc, #20]	@ (80037c4 <HAL_RCC_GetPCLK2Freq+0x20>)
 80037b0:	689b      	ldr	r3, [r3, #8]
 80037b2:	0b5b      	lsrs	r3, r3, #13
 80037b4:	f003 0307 	and.w	r3, r3, #7
 80037b8:	4903      	ldr	r1, [pc, #12]	@ (80037c8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80037ba:	5ccb      	ldrb	r3, [r1, r3]
 80037bc:	fa22 f303 	lsr.w	r3, r2, r3
 80037c0:	4618      	mov	r0, r3
 80037c2:	bd80      	pop	{r7, pc}
 80037c4:	40023800 	.word	0x40023800
 80037c8:	080058b0 	.word	0x080058b0

080037cc <HAL_TIM_PWM_Init>:
 80037cc:	b580      	push	{r7, lr}
 80037ce:	b082      	sub	sp, #8
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	6078      	str	r0, [r7, #4]
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	2b00      	cmp	r3, #0
 80037d8:	d101      	bne.n	80037de <HAL_TIM_PWM_Init+0x12>
 80037da:	2301      	movs	r3, #1
 80037dc:	e041      	b.n	8003862 <HAL_TIM_PWM_Init+0x96>
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80037e4:	b2db      	uxtb	r3, r3
 80037e6:	2b00      	cmp	r3, #0
 80037e8:	d106      	bne.n	80037f8 <HAL_TIM_PWM_Init+0x2c>
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	2200      	movs	r2, #0
 80037ee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80037f2:	6878      	ldr	r0, [r7, #4]
 80037f4:	f7fe fd3e 	bl	8002274 <HAL_TIM_PWM_MspInit>
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	2202      	movs	r2, #2
 80037fc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	681a      	ldr	r2, [r3, #0]
 8003804:	687b      	ldr	r3, [r7, #4]
 8003806:	3304      	adds	r3, #4
 8003808:	4619      	mov	r1, r3
 800380a:	4610      	mov	r0, r2
 800380c:	f000 fc7e 	bl	800410c <TIM_Base_SetConfig>
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	2201      	movs	r2, #1
 8003814:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	2201      	movs	r2, #1
 800381c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	2201      	movs	r2, #1
 8003824:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	2201      	movs	r2, #1
 800382c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	2201      	movs	r2, #1
 8003834:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	2201      	movs	r2, #1
 800383c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	2201      	movs	r2, #1
 8003844:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	2201      	movs	r2, #1
 800384c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	2201      	movs	r2, #1
 8003854:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	2201      	movs	r2, #1
 800385c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003860:	2300      	movs	r3, #0
 8003862:	4618      	mov	r0, r3
 8003864:	3708      	adds	r7, #8
 8003866:	46bd      	mov	sp, r7
 8003868:	bd80      	pop	{r7, pc}
	...

0800386c <HAL_TIM_PWM_Start>:
 800386c:	b580      	push	{r7, lr}
 800386e:	b084      	sub	sp, #16
 8003870:	af00      	add	r7, sp, #0
 8003872:	6078      	str	r0, [r7, #4]
 8003874:	6039      	str	r1, [r7, #0]
 8003876:	683b      	ldr	r3, [r7, #0]
 8003878:	2b00      	cmp	r3, #0
 800387a:	d109      	bne.n	8003890 <HAL_TIM_PWM_Start+0x24>
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8003882:	b2db      	uxtb	r3, r3
 8003884:	2b01      	cmp	r3, #1
 8003886:	bf14      	ite	ne
 8003888:	2301      	movne	r3, #1
 800388a:	2300      	moveq	r3, #0
 800388c:	b2db      	uxtb	r3, r3
 800388e:	e022      	b.n	80038d6 <HAL_TIM_PWM_Start+0x6a>
 8003890:	683b      	ldr	r3, [r7, #0]
 8003892:	2b04      	cmp	r3, #4
 8003894:	d109      	bne.n	80038aa <HAL_TIM_PWM_Start+0x3e>
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800389c:	b2db      	uxtb	r3, r3
 800389e:	2b01      	cmp	r3, #1
 80038a0:	bf14      	ite	ne
 80038a2:	2301      	movne	r3, #1
 80038a4:	2300      	moveq	r3, #0
 80038a6:	b2db      	uxtb	r3, r3
 80038a8:	e015      	b.n	80038d6 <HAL_TIM_PWM_Start+0x6a>
 80038aa:	683b      	ldr	r3, [r7, #0]
 80038ac:	2b08      	cmp	r3, #8
 80038ae:	d109      	bne.n	80038c4 <HAL_TIM_PWM_Start+0x58>
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80038b6:	b2db      	uxtb	r3, r3
 80038b8:	2b01      	cmp	r3, #1
 80038ba:	bf14      	ite	ne
 80038bc:	2301      	movne	r3, #1
 80038be:	2300      	moveq	r3, #0
 80038c0:	b2db      	uxtb	r3, r3
 80038c2:	e008      	b.n	80038d6 <HAL_TIM_PWM_Start+0x6a>
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80038ca:	b2db      	uxtb	r3, r3
 80038cc:	2b01      	cmp	r3, #1
 80038ce:	bf14      	ite	ne
 80038d0:	2301      	movne	r3, #1
 80038d2:	2300      	moveq	r3, #0
 80038d4:	b2db      	uxtb	r3, r3
 80038d6:	2b00      	cmp	r3, #0
 80038d8:	d001      	beq.n	80038de <HAL_TIM_PWM_Start+0x72>
 80038da:	2301      	movs	r3, #1
 80038dc:	e07c      	b.n	80039d8 <HAL_TIM_PWM_Start+0x16c>
 80038de:	683b      	ldr	r3, [r7, #0]
 80038e0:	2b00      	cmp	r3, #0
 80038e2:	d104      	bne.n	80038ee <HAL_TIM_PWM_Start+0x82>
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	2202      	movs	r2, #2
 80038e8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80038ec:	e013      	b.n	8003916 <HAL_TIM_PWM_Start+0xaa>
 80038ee:	683b      	ldr	r3, [r7, #0]
 80038f0:	2b04      	cmp	r3, #4
 80038f2:	d104      	bne.n	80038fe <HAL_TIM_PWM_Start+0x92>
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	2202      	movs	r2, #2
 80038f8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80038fc:	e00b      	b.n	8003916 <HAL_TIM_PWM_Start+0xaa>
 80038fe:	683b      	ldr	r3, [r7, #0]
 8003900:	2b08      	cmp	r3, #8
 8003902:	d104      	bne.n	800390e <HAL_TIM_PWM_Start+0xa2>
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	2202      	movs	r2, #2
 8003908:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800390c:	e003      	b.n	8003916 <HAL_TIM_PWM_Start+0xaa>
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	2202      	movs	r2, #2
 8003912:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	2201      	movs	r2, #1
 800391c:	6839      	ldr	r1, [r7, #0]
 800391e:	4618      	mov	r0, r3
 8003920:	f000 fe4a 	bl	80045b8 <TIM_CCxChannelCmd>
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	4a2d      	ldr	r2, [pc, #180]	@ (80039e0 <HAL_TIM_PWM_Start+0x174>)
 800392a:	4293      	cmp	r3, r2
 800392c:	d004      	beq.n	8003938 <HAL_TIM_PWM_Start+0xcc>
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	4a2c      	ldr	r2, [pc, #176]	@ (80039e4 <HAL_TIM_PWM_Start+0x178>)
 8003934:	4293      	cmp	r3, r2
 8003936:	d101      	bne.n	800393c <HAL_TIM_PWM_Start+0xd0>
 8003938:	2301      	movs	r3, #1
 800393a:	e000      	b.n	800393e <HAL_TIM_PWM_Start+0xd2>
 800393c:	2300      	movs	r3, #0
 800393e:	2b00      	cmp	r3, #0
 8003940:	d007      	beq.n	8003952 <HAL_TIM_PWM_Start+0xe6>
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8003950:	645a      	str	r2, [r3, #68]	@ 0x44
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	4a22      	ldr	r2, [pc, #136]	@ (80039e0 <HAL_TIM_PWM_Start+0x174>)
 8003958:	4293      	cmp	r3, r2
 800395a:	d022      	beq.n	80039a2 <HAL_TIM_PWM_Start+0x136>
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003964:	d01d      	beq.n	80039a2 <HAL_TIM_PWM_Start+0x136>
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	4a1f      	ldr	r2, [pc, #124]	@ (80039e8 <HAL_TIM_PWM_Start+0x17c>)
 800396c:	4293      	cmp	r3, r2
 800396e:	d018      	beq.n	80039a2 <HAL_TIM_PWM_Start+0x136>
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	4a1d      	ldr	r2, [pc, #116]	@ (80039ec <HAL_TIM_PWM_Start+0x180>)
 8003976:	4293      	cmp	r3, r2
 8003978:	d013      	beq.n	80039a2 <HAL_TIM_PWM_Start+0x136>
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	4a1c      	ldr	r2, [pc, #112]	@ (80039f0 <HAL_TIM_PWM_Start+0x184>)
 8003980:	4293      	cmp	r3, r2
 8003982:	d00e      	beq.n	80039a2 <HAL_TIM_PWM_Start+0x136>
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	4a16      	ldr	r2, [pc, #88]	@ (80039e4 <HAL_TIM_PWM_Start+0x178>)
 800398a:	4293      	cmp	r3, r2
 800398c:	d009      	beq.n	80039a2 <HAL_TIM_PWM_Start+0x136>
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	681b      	ldr	r3, [r3, #0]
 8003992:	4a18      	ldr	r2, [pc, #96]	@ (80039f4 <HAL_TIM_PWM_Start+0x188>)
 8003994:	4293      	cmp	r3, r2
 8003996:	d004      	beq.n	80039a2 <HAL_TIM_PWM_Start+0x136>
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	4a16      	ldr	r2, [pc, #88]	@ (80039f8 <HAL_TIM_PWM_Start+0x18c>)
 800399e:	4293      	cmp	r3, r2
 80039a0:	d111      	bne.n	80039c6 <HAL_TIM_PWM_Start+0x15a>
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	689b      	ldr	r3, [r3, #8]
 80039a8:	f003 0307 	and.w	r3, r3, #7
 80039ac:	60fb      	str	r3, [r7, #12]
 80039ae:	68fb      	ldr	r3, [r7, #12]
 80039b0:	2b06      	cmp	r3, #6
 80039b2:	d010      	beq.n	80039d6 <HAL_TIM_PWM_Start+0x16a>
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	681a      	ldr	r2, [r3, #0]
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	f042 0201 	orr.w	r2, r2, #1
 80039c2:	601a      	str	r2, [r3, #0]
 80039c4:	e007      	b.n	80039d6 <HAL_TIM_PWM_Start+0x16a>
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	681b      	ldr	r3, [r3, #0]
 80039ca:	681a      	ldr	r2, [r3, #0]
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	f042 0201 	orr.w	r2, r2, #1
 80039d4:	601a      	str	r2, [r3, #0]
 80039d6:	2300      	movs	r3, #0
 80039d8:	4618      	mov	r0, r3
 80039da:	3710      	adds	r7, #16
 80039dc:	46bd      	mov	sp, r7
 80039de:	bd80      	pop	{r7, pc}
 80039e0:	40010000 	.word	0x40010000
 80039e4:	40010400 	.word	0x40010400
 80039e8:	40000400 	.word	0x40000400
 80039ec:	40000800 	.word	0x40000800
 80039f0:	40000c00 	.word	0x40000c00
 80039f4:	40014000 	.word	0x40014000
 80039f8:	40001800 	.word	0x40001800

080039fc <HAL_TIM_PWM_Stop>:
 80039fc:	b580      	push	{r7, lr}
 80039fe:	b082      	sub	sp, #8
 8003a00:	af00      	add	r7, sp, #0
 8003a02:	6078      	str	r0, [r7, #4]
 8003a04:	6039      	str	r1, [r7, #0]
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	681b      	ldr	r3, [r3, #0]
 8003a0a:	2200      	movs	r2, #0
 8003a0c:	6839      	ldr	r1, [r7, #0]
 8003a0e:	4618      	mov	r0, r3
 8003a10:	f000 fdd2 	bl	80045b8 <TIM_CCxChannelCmd>
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	681b      	ldr	r3, [r3, #0]
 8003a18:	4a2e      	ldr	r2, [pc, #184]	@ (8003ad4 <HAL_TIM_PWM_Stop+0xd8>)
 8003a1a:	4293      	cmp	r3, r2
 8003a1c:	d004      	beq.n	8003a28 <HAL_TIM_PWM_Stop+0x2c>
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	4a2d      	ldr	r2, [pc, #180]	@ (8003ad8 <HAL_TIM_PWM_Stop+0xdc>)
 8003a24:	4293      	cmp	r3, r2
 8003a26:	d101      	bne.n	8003a2c <HAL_TIM_PWM_Stop+0x30>
 8003a28:	2301      	movs	r3, #1
 8003a2a:	e000      	b.n	8003a2e <HAL_TIM_PWM_Stop+0x32>
 8003a2c:	2300      	movs	r3, #0
 8003a2e:	2b00      	cmp	r3, #0
 8003a30:	d017      	beq.n	8003a62 <HAL_TIM_PWM_Stop+0x66>
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	6a1a      	ldr	r2, [r3, #32]
 8003a38:	f241 1311 	movw	r3, #4369	@ 0x1111
 8003a3c:	4013      	ands	r3, r2
 8003a3e:	2b00      	cmp	r3, #0
 8003a40:	d10f      	bne.n	8003a62 <HAL_TIM_PWM_Stop+0x66>
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	681b      	ldr	r3, [r3, #0]
 8003a46:	6a1a      	ldr	r2, [r3, #32]
 8003a48:	f240 4344 	movw	r3, #1092	@ 0x444
 8003a4c:	4013      	ands	r3, r2
 8003a4e:	2b00      	cmp	r3, #0
 8003a50:	d107      	bne.n	8003a62 <HAL_TIM_PWM_Stop+0x66>
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	681b      	ldr	r3, [r3, #0]
 8003a5c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003a60:	645a      	str	r2, [r3, #68]	@ 0x44
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	681b      	ldr	r3, [r3, #0]
 8003a66:	6a1a      	ldr	r2, [r3, #32]
 8003a68:	f241 1311 	movw	r3, #4369	@ 0x1111
 8003a6c:	4013      	ands	r3, r2
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	d10f      	bne.n	8003a92 <HAL_TIM_PWM_Stop+0x96>
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	6a1a      	ldr	r2, [r3, #32]
 8003a78:	f240 4344 	movw	r3, #1092	@ 0x444
 8003a7c:	4013      	ands	r3, r2
 8003a7e:	2b00      	cmp	r3, #0
 8003a80:	d107      	bne.n	8003a92 <HAL_TIM_PWM_Stop+0x96>
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	681a      	ldr	r2, [r3, #0]
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	681b      	ldr	r3, [r3, #0]
 8003a8c:	f022 0201 	bic.w	r2, r2, #1
 8003a90:	601a      	str	r2, [r3, #0]
 8003a92:	683b      	ldr	r3, [r7, #0]
 8003a94:	2b00      	cmp	r3, #0
 8003a96:	d104      	bne.n	8003aa2 <HAL_TIM_PWM_Stop+0xa6>
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	2201      	movs	r2, #1
 8003a9c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003aa0:	e013      	b.n	8003aca <HAL_TIM_PWM_Stop+0xce>
 8003aa2:	683b      	ldr	r3, [r7, #0]
 8003aa4:	2b04      	cmp	r3, #4
 8003aa6:	d104      	bne.n	8003ab2 <HAL_TIM_PWM_Stop+0xb6>
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	2201      	movs	r2, #1
 8003aac:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003ab0:	e00b      	b.n	8003aca <HAL_TIM_PWM_Stop+0xce>
 8003ab2:	683b      	ldr	r3, [r7, #0]
 8003ab4:	2b08      	cmp	r3, #8
 8003ab6:	d104      	bne.n	8003ac2 <HAL_TIM_PWM_Stop+0xc6>
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	2201      	movs	r2, #1
 8003abc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003ac0:	e003      	b.n	8003aca <HAL_TIM_PWM_Stop+0xce>
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	2201      	movs	r2, #1
 8003ac6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003aca:	2300      	movs	r3, #0
 8003acc:	4618      	mov	r0, r3
 8003ace:	3708      	adds	r7, #8
 8003ad0:	46bd      	mov	sp, r7
 8003ad2:	bd80      	pop	{r7, pc}
 8003ad4:	40010000 	.word	0x40010000
 8003ad8:	40010400 	.word	0x40010400

08003adc <HAL_TIM_Encoder_Init>:
 8003adc:	b580      	push	{r7, lr}
 8003ade:	b086      	sub	sp, #24
 8003ae0:	af00      	add	r7, sp, #0
 8003ae2:	6078      	str	r0, [r7, #4]
 8003ae4:	6039      	str	r1, [r7, #0]
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	2b00      	cmp	r3, #0
 8003aea:	d101      	bne.n	8003af0 <HAL_TIM_Encoder_Init+0x14>
 8003aec:	2301      	movs	r3, #1
 8003aee:	e097      	b.n	8003c20 <HAL_TIM_Encoder_Init+0x144>
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003af6:	b2db      	uxtb	r3, r3
 8003af8:	2b00      	cmp	r3, #0
 8003afa:	d106      	bne.n	8003b0a <HAL_TIM_Encoder_Init+0x2e>
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	2200      	movs	r2, #0
 8003b00:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003b04:	6878      	ldr	r0, [r7, #4]
 8003b06:	f7fe fc07 	bl	8002318 <HAL_TIM_Encoder_MspInit>
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	2202      	movs	r2, #2
 8003b0e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003b12:	687b      	ldr	r3, [r7, #4]
 8003b14:	681b      	ldr	r3, [r3, #0]
 8003b16:	689b      	ldr	r3, [r3, #8]
 8003b18:	687a      	ldr	r2, [r7, #4]
 8003b1a:	6812      	ldr	r2, [r2, #0]
 8003b1c:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003b20:	f023 0307 	bic.w	r3, r3, #7
 8003b24:	6093      	str	r3, [r2, #8]
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	681a      	ldr	r2, [r3, #0]
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	3304      	adds	r3, #4
 8003b2e:	4619      	mov	r1, r3
 8003b30:	4610      	mov	r0, r2
 8003b32:	f000 faeb 	bl	800410c <TIM_Base_SetConfig>
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	689b      	ldr	r3, [r3, #8]
 8003b3c:	617b      	str	r3, [r7, #20]
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	681b      	ldr	r3, [r3, #0]
 8003b42:	699b      	ldr	r3, [r3, #24]
 8003b44:	613b      	str	r3, [r7, #16]
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	6a1b      	ldr	r3, [r3, #32]
 8003b4c:	60fb      	str	r3, [r7, #12]
 8003b4e:	683b      	ldr	r3, [r7, #0]
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	697a      	ldr	r2, [r7, #20]
 8003b54:	4313      	orrs	r3, r2
 8003b56:	617b      	str	r3, [r7, #20]
 8003b58:	693b      	ldr	r3, [r7, #16]
 8003b5a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003b5e:	f023 0303 	bic.w	r3, r3, #3
 8003b62:	613b      	str	r3, [r7, #16]
 8003b64:	683b      	ldr	r3, [r7, #0]
 8003b66:	689a      	ldr	r2, [r3, #8]
 8003b68:	683b      	ldr	r3, [r7, #0]
 8003b6a:	699b      	ldr	r3, [r3, #24]
 8003b6c:	021b      	lsls	r3, r3, #8
 8003b6e:	4313      	orrs	r3, r2
 8003b70:	693a      	ldr	r2, [r7, #16]
 8003b72:	4313      	orrs	r3, r2
 8003b74:	613b      	str	r3, [r7, #16]
 8003b76:	693b      	ldr	r3, [r7, #16]
 8003b78:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8003b7c:	f023 030c 	bic.w	r3, r3, #12
 8003b80:	613b      	str	r3, [r7, #16]
 8003b82:	693b      	ldr	r3, [r7, #16]
 8003b84:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8003b88:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8003b8c:	613b      	str	r3, [r7, #16]
 8003b8e:	683b      	ldr	r3, [r7, #0]
 8003b90:	68da      	ldr	r2, [r3, #12]
 8003b92:	683b      	ldr	r3, [r7, #0]
 8003b94:	69db      	ldr	r3, [r3, #28]
 8003b96:	021b      	lsls	r3, r3, #8
 8003b98:	4313      	orrs	r3, r2
 8003b9a:	693a      	ldr	r2, [r7, #16]
 8003b9c:	4313      	orrs	r3, r2
 8003b9e:	613b      	str	r3, [r7, #16]
 8003ba0:	683b      	ldr	r3, [r7, #0]
 8003ba2:	691b      	ldr	r3, [r3, #16]
 8003ba4:	011a      	lsls	r2, r3, #4
 8003ba6:	683b      	ldr	r3, [r7, #0]
 8003ba8:	6a1b      	ldr	r3, [r3, #32]
 8003baa:	031b      	lsls	r3, r3, #12
 8003bac:	4313      	orrs	r3, r2
 8003bae:	693a      	ldr	r2, [r7, #16]
 8003bb0:	4313      	orrs	r3, r2
 8003bb2:	613b      	str	r3, [r7, #16]
 8003bb4:	68fb      	ldr	r3, [r7, #12]
 8003bb6:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 8003bba:	60fb      	str	r3, [r7, #12]
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 8003bc2:	60fb      	str	r3, [r7, #12]
 8003bc4:	683b      	ldr	r3, [r7, #0]
 8003bc6:	685a      	ldr	r2, [r3, #4]
 8003bc8:	683b      	ldr	r3, [r7, #0]
 8003bca:	695b      	ldr	r3, [r3, #20]
 8003bcc:	011b      	lsls	r3, r3, #4
 8003bce:	4313      	orrs	r3, r2
 8003bd0:	68fa      	ldr	r2, [r7, #12]
 8003bd2:	4313      	orrs	r3, r2
 8003bd4:	60fb      	str	r3, [r7, #12]
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	681b      	ldr	r3, [r3, #0]
 8003bda:	697a      	ldr	r2, [r7, #20]
 8003bdc:	609a      	str	r2, [r3, #8]
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	693a      	ldr	r2, [r7, #16]
 8003be4:	619a      	str	r2, [r3, #24]
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	68fa      	ldr	r2, [r7, #12]
 8003bec:	621a      	str	r2, [r3, #32]
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	2201      	movs	r2, #1
 8003bf2:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	2201      	movs	r2, #1
 8003bfa:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003bfe:	687b      	ldr	r3, [r7, #4]
 8003c00:	2201      	movs	r2, #1
 8003c02:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	2201      	movs	r2, #1
 8003c0a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	2201      	movs	r2, #1
 8003c12:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	2201      	movs	r2, #1
 8003c1a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c1e:	2300      	movs	r3, #0
 8003c20:	4618      	mov	r0, r3
 8003c22:	3718      	adds	r7, #24
 8003c24:	46bd      	mov	sp, r7
 8003c26:	bd80      	pop	{r7, pc}

08003c28 <HAL_TIM_Encoder_Start>:
 8003c28:	b580      	push	{r7, lr}
 8003c2a:	b084      	sub	sp, #16
 8003c2c:	af00      	add	r7, sp, #0
 8003c2e:	6078      	str	r0, [r7, #4]
 8003c30:	6039      	str	r1, [r7, #0]
 8003c32:	687b      	ldr	r3, [r7, #4]
 8003c34:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8003c38:	73fb      	strb	r3, [r7, #15]
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8003c40:	73bb      	strb	r3, [r7, #14]
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003c48:	737b      	strb	r3, [r7, #13]
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8003c50:	733b      	strb	r3, [r7, #12]
 8003c52:	683b      	ldr	r3, [r7, #0]
 8003c54:	2b00      	cmp	r3, #0
 8003c56:	d110      	bne.n	8003c7a <HAL_TIM_Encoder_Start+0x52>
 8003c58:	7bfb      	ldrb	r3, [r7, #15]
 8003c5a:	2b01      	cmp	r3, #1
 8003c5c:	d102      	bne.n	8003c64 <HAL_TIM_Encoder_Start+0x3c>
 8003c5e:	7b7b      	ldrb	r3, [r7, #13]
 8003c60:	2b01      	cmp	r3, #1
 8003c62:	d001      	beq.n	8003c68 <HAL_TIM_Encoder_Start+0x40>
 8003c64:	2301      	movs	r3, #1
 8003c66:	e069      	b.n	8003d3c <HAL_TIM_Encoder_Start+0x114>
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	2202      	movs	r2, #2
 8003c6c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	2202      	movs	r2, #2
 8003c74:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c78:	e031      	b.n	8003cde <HAL_TIM_Encoder_Start+0xb6>
 8003c7a:	683b      	ldr	r3, [r7, #0]
 8003c7c:	2b04      	cmp	r3, #4
 8003c7e:	d110      	bne.n	8003ca2 <HAL_TIM_Encoder_Start+0x7a>
 8003c80:	7bbb      	ldrb	r3, [r7, #14]
 8003c82:	2b01      	cmp	r3, #1
 8003c84:	d102      	bne.n	8003c8c <HAL_TIM_Encoder_Start+0x64>
 8003c86:	7b3b      	ldrb	r3, [r7, #12]
 8003c88:	2b01      	cmp	r3, #1
 8003c8a:	d001      	beq.n	8003c90 <HAL_TIM_Encoder_Start+0x68>
 8003c8c:	2301      	movs	r3, #1
 8003c8e:	e055      	b.n	8003d3c <HAL_TIM_Encoder_Start+0x114>
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	2202      	movs	r2, #2
 8003c94:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	2202      	movs	r2, #2
 8003c9c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003ca0:	e01d      	b.n	8003cde <HAL_TIM_Encoder_Start+0xb6>
 8003ca2:	7bfb      	ldrb	r3, [r7, #15]
 8003ca4:	2b01      	cmp	r3, #1
 8003ca6:	d108      	bne.n	8003cba <HAL_TIM_Encoder_Start+0x92>
 8003ca8:	7bbb      	ldrb	r3, [r7, #14]
 8003caa:	2b01      	cmp	r3, #1
 8003cac:	d105      	bne.n	8003cba <HAL_TIM_Encoder_Start+0x92>
 8003cae:	7b7b      	ldrb	r3, [r7, #13]
 8003cb0:	2b01      	cmp	r3, #1
 8003cb2:	d102      	bne.n	8003cba <HAL_TIM_Encoder_Start+0x92>
 8003cb4:	7b3b      	ldrb	r3, [r7, #12]
 8003cb6:	2b01      	cmp	r3, #1
 8003cb8:	d001      	beq.n	8003cbe <HAL_TIM_Encoder_Start+0x96>
 8003cba:	2301      	movs	r3, #1
 8003cbc:	e03e      	b.n	8003d3c <HAL_TIM_Encoder_Start+0x114>
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	2202      	movs	r2, #2
 8003cc2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	2202      	movs	r2, #2
 8003cca:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	2202      	movs	r2, #2
 8003cd2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	2202      	movs	r2, #2
 8003cda:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003cde:	683b      	ldr	r3, [r7, #0]
 8003ce0:	2b00      	cmp	r3, #0
 8003ce2:	d003      	beq.n	8003cec <HAL_TIM_Encoder_Start+0xc4>
 8003ce4:	683b      	ldr	r3, [r7, #0]
 8003ce6:	2b04      	cmp	r3, #4
 8003ce8:	d008      	beq.n	8003cfc <HAL_TIM_Encoder_Start+0xd4>
 8003cea:	e00f      	b.n	8003d0c <HAL_TIM_Encoder_Start+0xe4>
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	2201      	movs	r2, #1
 8003cf2:	2100      	movs	r1, #0
 8003cf4:	4618      	mov	r0, r3
 8003cf6:	f000 fc5f 	bl	80045b8 <TIM_CCxChannelCmd>
 8003cfa:	e016      	b.n	8003d2a <HAL_TIM_Encoder_Start+0x102>
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	2201      	movs	r2, #1
 8003d02:	2104      	movs	r1, #4
 8003d04:	4618      	mov	r0, r3
 8003d06:	f000 fc57 	bl	80045b8 <TIM_CCxChannelCmd>
 8003d0a:	e00e      	b.n	8003d2a <HAL_TIM_Encoder_Start+0x102>
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	2201      	movs	r2, #1
 8003d12:	2100      	movs	r1, #0
 8003d14:	4618      	mov	r0, r3
 8003d16:	f000 fc4f 	bl	80045b8 <TIM_CCxChannelCmd>
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	681b      	ldr	r3, [r3, #0]
 8003d1e:	2201      	movs	r2, #1
 8003d20:	2104      	movs	r1, #4
 8003d22:	4618      	mov	r0, r3
 8003d24:	f000 fc48 	bl	80045b8 <TIM_CCxChannelCmd>
 8003d28:	bf00      	nop
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	681a      	ldr	r2, [r3, #0]
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	681b      	ldr	r3, [r3, #0]
 8003d34:	f042 0201 	orr.w	r2, r2, #1
 8003d38:	601a      	str	r2, [r3, #0]
 8003d3a:	2300      	movs	r3, #0
 8003d3c:	4618      	mov	r0, r3
 8003d3e:	3710      	adds	r7, #16
 8003d40:	46bd      	mov	sp, r7
 8003d42:	bd80      	pop	{r7, pc}

08003d44 <HAL_TIM_IRQHandler>:
 8003d44:	b580      	push	{r7, lr}
 8003d46:	b084      	sub	sp, #16
 8003d48:	af00      	add	r7, sp, #0
 8003d4a:	6078      	str	r0, [r7, #4]
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	68db      	ldr	r3, [r3, #12]
 8003d52:	60fb      	str	r3, [r7, #12]
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	681b      	ldr	r3, [r3, #0]
 8003d58:	691b      	ldr	r3, [r3, #16]
 8003d5a:	60bb      	str	r3, [r7, #8]
 8003d5c:	68bb      	ldr	r3, [r7, #8]
 8003d5e:	f003 0302 	and.w	r3, r3, #2
 8003d62:	2b00      	cmp	r3, #0
 8003d64:	d020      	beq.n	8003da8 <HAL_TIM_IRQHandler+0x64>
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	f003 0302 	and.w	r3, r3, #2
 8003d6c:	2b00      	cmp	r3, #0
 8003d6e:	d01b      	beq.n	8003da8 <HAL_TIM_IRQHandler+0x64>
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	f06f 0202 	mvn.w	r2, #2
 8003d78:	611a      	str	r2, [r3, #16]
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	2201      	movs	r2, #1
 8003d7e:	771a      	strb	r2, [r3, #28]
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	699b      	ldr	r3, [r3, #24]
 8003d86:	f003 0303 	and.w	r3, r3, #3
 8003d8a:	2b00      	cmp	r3, #0
 8003d8c:	d003      	beq.n	8003d96 <HAL_TIM_IRQHandler+0x52>
 8003d8e:	6878      	ldr	r0, [r7, #4]
 8003d90:	f000 f99e 	bl	80040d0 <HAL_TIM_IC_CaptureCallback>
 8003d94:	e005      	b.n	8003da2 <HAL_TIM_IRQHandler+0x5e>
 8003d96:	6878      	ldr	r0, [r7, #4]
 8003d98:	f000 f990 	bl	80040bc <HAL_TIM_OC_DelayElapsedCallback>
 8003d9c:	6878      	ldr	r0, [r7, #4]
 8003d9e:	f000 f9a1 	bl	80040e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	2200      	movs	r2, #0
 8003da6:	771a      	strb	r2, [r3, #28]
 8003da8:	68bb      	ldr	r3, [r7, #8]
 8003daa:	f003 0304 	and.w	r3, r3, #4
 8003dae:	2b00      	cmp	r3, #0
 8003db0:	d020      	beq.n	8003df4 <HAL_TIM_IRQHandler+0xb0>
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	f003 0304 	and.w	r3, r3, #4
 8003db8:	2b00      	cmp	r3, #0
 8003dba:	d01b      	beq.n	8003df4 <HAL_TIM_IRQHandler+0xb0>
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	f06f 0204 	mvn.w	r2, #4
 8003dc4:	611a      	str	r2, [r3, #16]
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	2202      	movs	r2, #2
 8003dca:	771a      	strb	r2, [r3, #28]
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	699b      	ldr	r3, [r3, #24]
 8003dd2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003dd6:	2b00      	cmp	r3, #0
 8003dd8:	d003      	beq.n	8003de2 <HAL_TIM_IRQHandler+0x9e>
 8003dda:	6878      	ldr	r0, [r7, #4]
 8003ddc:	f000 f978 	bl	80040d0 <HAL_TIM_IC_CaptureCallback>
 8003de0:	e005      	b.n	8003dee <HAL_TIM_IRQHandler+0xaa>
 8003de2:	6878      	ldr	r0, [r7, #4]
 8003de4:	f000 f96a 	bl	80040bc <HAL_TIM_OC_DelayElapsedCallback>
 8003de8:	6878      	ldr	r0, [r7, #4]
 8003dea:	f000 f97b 	bl	80040e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	2200      	movs	r2, #0
 8003df2:	771a      	strb	r2, [r3, #28]
 8003df4:	68bb      	ldr	r3, [r7, #8]
 8003df6:	f003 0308 	and.w	r3, r3, #8
 8003dfa:	2b00      	cmp	r3, #0
 8003dfc:	d020      	beq.n	8003e40 <HAL_TIM_IRQHandler+0xfc>
 8003dfe:	68fb      	ldr	r3, [r7, #12]
 8003e00:	f003 0308 	and.w	r3, r3, #8
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d01b      	beq.n	8003e40 <HAL_TIM_IRQHandler+0xfc>
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	f06f 0208 	mvn.w	r2, #8
 8003e10:	611a      	str	r2, [r3, #16]
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	2204      	movs	r2, #4
 8003e16:	771a      	strb	r2, [r3, #28]
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	681b      	ldr	r3, [r3, #0]
 8003e1c:	69db      	ldr	r3, [r3, #28]
 8003e1e:	f003 0303 	and.w	r3, r3, #3
 8003e22:	2b00      	cmp	r3, #0
 8003e24:	d003      	beq.n	8003e2e <HAL_TIM_IRQHandler+0xea>
 8003e26:	6878      	ldr	r0, [r7, #4]
 8003e28:	f000 f952 	bl	80040d0 <HAL_TIM_IC_CaptureCallback>
 8003e2c:	e005      	b.n	8003e3a <HAL_TIM_IRQHandler+0xf6>
 8003e2e:	6878      	ldr	r0, [r7, #4]
 8003e30:	f000 f944 	bl	80040bc <HAL_TIM_OC_DelayElapsedCallback>
 8003e34:	6878      	ldr	r0, [r7, #4]
 8003e36:	f000 f955 	bl	80040e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	2200      	movs	r2, #0
 8003e3e:	771a      	strb	r2, [r3, #28]
 8003e40:	68bb      	ldr	r3, [r7, #8]
 8003e42:	f003 0310 	and.w	r3, r3, #16
 8003e46:	2b00      	cmp	r3, #0
 8003e48:	d020      	beq.n	8003e8c <HAL_TIM_IRQHandler+0x148>
 8003e4a:	68fb      	ldr	r3, [r7, #12]
 8003e4c:	f003 0310 	and.w	r3, r3, #16
 8003e50:	2b00      	cmp	r3, #0
 8003e52:	d01b      	beq.n	8003e8c <HAL_TIM_IRQHandler+0x148>
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	f06f 0210 	mvn.w	r2, #16
 8003e5c:	611a      	str	r2, [r3, #16]
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	2208      	movs	r2, #8
 8003e62:	771a      	strb	r2, [r3, #28]
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	69db      	ldr	r3, [r3, #28]
 8003e6a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003e6e:	2b00      	cmp	r3, #0
 8003e70:	d003      	beq.n	8003e7a <HAL_TIM_IRQHandler+0x136>
 8003e72:	6878      	ldr	r0, [r7, #4]
 8003e74:	f000 f92c 	bl	80040d0 <HAL_TIM_IC_CaptureCallback>
 8003e78:	e005      	b.n	8003e86 <HAL_TIM_IRQHandler+0x142>
 8003e7a:	6878      	ldr	r0, [r7, #4]
 8003e7c:	f000 f91e 	bl	80040bc <HAL_TIM_OC_DelayElapsedCallback>
 8003e80:	6878      	ldr	r0, [r7, #4]
 8003e82:	f000 f92f 	bl	80040e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8003e86:	687b      	ldr	r3, [r7, #4]
 8003e88:	2200      	movs	r2, #0
 8003e8a:	771a      	strb	r2, [r3, #28]
 8003e8c:	68bb      	ldr	r3, [r7, #8]
 8003e8e:	f003 0301 	and.w	r3, r3, #1
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	d00c      	beq.n	8003eb0 <HAL_TIM_IRQHandler+0x16c>
 8003e96:	68fb      	ldr	r3, [r7, #12]
 8003e98:	f003 0301 	and.w	r3, r3, #1
 8003e9c:	2b00      	cmp	r3, #0
 8003e9e:	d007      	beq.n	8003eb0 <HAL_TIM_IRQHandler+0x16c>
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	681b      	ldr	r3, [r3, #0]
 8003ea4:	f06f 0201 	mvn.w	r2, #1
 8003ea8:	611a      	str	r2, [r3, #16]
 8003eaa:	6878      	ldr	r0, [r7, #4]
 8003eac:	f000 f8fc 	bl	80040a8 <HAL_TIM_PeriodElapsedCallback>
 8003eb0:	68bb      	ldr	r3, [r7, #8]
 8003eb2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003eb6:	2b00      	cmp	r3, #0
 8003eb8:	d00c      	beq.n	8003ed4 <HAL_TIM_IRQHandler+0x190>
 8003eba:	68fb      	ldr	r3, [r7, #12]
 8003ebc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003ec0:	2b00      	cmp	r3, #0
 8003ec2:	d007      	beq.n	8003ed4 <HAL_TIM_IRQHandler+0x190>
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	681b      	ldr	r3, [r3, #0]
 8003ec8:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8003ecc:	611a      	str	r2, [r3, #16]
 8003ece:	6878      	ldr	r0, [r7, #4]
 8003ed0:	f000 fc1e 	bl	8004710 <HAL_TIMEx_BreakCallback>
 8003ed4:	68bb      	ldr	r3, [r7, #8]
 8003ed6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003eda:	2b00      	cmp	r3, #0
 8003edc:	d00c      	beq.n	8003ef8 <HAL_TIM_IRQHandler+0x1b4>
 8003ede:	68fb      	ldr	r3, [r7, #12]
 8003ee0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003ee4:	2b00      	cmp	r3, #0
 8003ee6:	d007      	beq.n	8003ef8 <HAL_TIM_IRQHandler+0x1b4>
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8003ef0:	611a      	str	r2, [r3, #16]
 8003ef2:	6878      	ldr	r0, [r7, #4]
 8003ef4:	f000 f900 	bl	80040f8 <HAL_TIM_TriggerCallback>
 8003ef8:	68bb      	ldr	r3, [r7, #8]
 8003efa:	f003 0320 	and.w	r3, r3, #32
 8003efe:	2b00      	cmp	r3, #0
 8003f00:	d00c      	beq.n	8003f1c <HAL_TIM_IRQHandler+0x1d8>
 8003f02:	68fb      	ldr	r3, [r7, #12]
 8003f04:	f003 0320 	and.w	r3, r3, #32
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	d007      	beq.n	8003f1c <HAL_TIM_IRQHandler+0x1d8>
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	681b      	ldr	r3, [r3, #0]
 8003f10:	f06f 0220 	mvn.w	r2, #32
 8003f14:	611a      	str	r2, [r3, #16]
 8003f16:	6878      	ldr	r0, [r7, #4]
 8003f18:	f000 fbf0 	bl	80046fc <HAL_TIMEx_CommutCallback>
 8003f1c:	bf00      	nop
 8003f1e:	3710      	adds	r7, #16
 8003f20:	46bd      	mov	sp, r7
 8003f22:	bd80      	pop	{r7, pc}

08003f24 <HAL_TIM_PWM_ConfigChannel>:
 8003f24:	b580      	push	{r7, lr}
 8003f26:	b086      	sub	sp, #24
 8003f28:	af00      	add	r7, sp, #0
 8003f2a:	60f8      	str	r0, [r7, #12]
 8003f2c:	60b9      	str	r1, [r7, #8]
 8003f2e:	607a      	str	r2, [r7, #4]
 8003f30:	2300      	movs	r3, #0
 8003f32:	75fb      	strb	r3, [r7, #23]
 8003f34:	68fb      	ldr	r3, [r7, #12]
 8003f36:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003f3a:	2b01      	cmp	r3, #1
 8003f3c:	d101      	bne.n	8003f42 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8003f3e:	2302      	movs	r3, #2
 8003f40:	e0ae      	b.n	80040a0 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8003f42:	68fb      	ldr	r3, [r7, #12]
 8003f44:	2201      	movs	r2, #1
 8003f46:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003f4a:	687b      	ldr	r3, [r7, #4]
 8003f4c:	2b0c      	cmp	r3, #12
 8003f4e:	f200 809f 	bhi.w	8004090 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8003f52:	a201      	add	r2, pc, #4	@ (adr r2, 8003f58 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8003f54:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f58:	08003f8d 	.word	0x08003f8d
 8003f5c:	08004091 	.word	0x08004091
 8003f60:	08004091 	.word	0x08004091
 8003f64:	08004091 	.word	0x08004091
 8003f68:	08003fcd 	.word	0x08003fcd
 8003f6c:	08004091 	.word	0x08004091
 8003f70:	08004091 	.word	0x08004091
 8003f74:	08004091 	.word	0x08004091
 8003f78:	0800400f 	.word	0x0800400f
 8003f7c:	08004091 	.word	0x08004091
 8003f80:	08004091 	.word	0x08004091
 8003f84:	08004091 	.word	0x08004091
 8003f88:	0800404f 	.word	0x0800404f
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	68b9      	ldr	r1, [r7, #8]
 8003f92:	4618      	mov	r0, r3
 8003f94:	f000 f960 	bl	8004258 <TIM_OC1_SetConfig>
 8003f98:	68fb      	ldr	r3, [r7, #12]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	699a      	ldr	r2, [r3, #24]
 8003f9e:	68fb      	ldr	r3, [r7, #12]
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	f042 0208 	orr.w	r2, r2, #8
 8003fa6:	619a      	str	r2, [r3, #24]
 8003fa8:	68fb      	ldr	r3, [r7, #12]
 8003faa:	681b      	ldr	r3, [r3, #0]
 8003fac:	699a      	ldr	r2, [r3, #24]
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	f022 0204 	bic.w	r2, r2, #4
 8003fb6:	619a      	str	r2, [r3, #24]
 8003fb8:	68fb      	ldr	r3, [r7, #12]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	6999      	ldr	r1, [r3, #24]
 8003fbe:	68bb      	ldr	r3, [r7, #8]
 8003fc0:	691a      	ldr	r2, [r3, #16]
 8003fc2:	68fb      	ldr	r3, [r7, #12]
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	430a      	orrs	r2, r1
 8003fc8:	619a      	str	r2, [r3, #24]
 8003fca:	e064      	b.n	8004096 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003fcc:	68fb      	ldr	r3, [r7, #12]
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	68b9      	ldr	r1, [r7, #8]
 8003fd2:	4618      	mov	r0, r3
 8003fd4:	f000 f9b0 	bl	8004338 <TIM_OC2_SetConfig>
 8003fd8:	68fb      	ldr	r3, [r7, #12]
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	699a      	ldr	r2, [r3, #24]
 8003fde:	68fb      	ldr	r3, [r7, #12]
 8003fe0:	681b      	ldr	r3, [r3, #0]
 8003fe2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003fe6:	619a      	str	r2, [r3, #24]
 8003fe8:	68fb      	ldr	r3, [r7, #12]
 8003fea:	681b      	ldr	r3, [r3, #0]
 8003fec:	699a      	ldr	r2, [r3, #24]
 8003fee:	68fb      	ldr	r3, [r7, #12]
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003ff6:	619a      	str	r2, [r3, #24]
 8003ff8:	68fb      	ldr	r3, [r7, #12]
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	6999      	ldr	r1, [r3, #24]
 8003ffe:	68bb      	ldr	r3, [r7, #8]
 8004000:	691b      	ldr	r3, [r3, #16]
 8004002:	021a      	lsls	r2, r3, #8
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	430a      	orrs	r2, r1
 800400a:	619a      	str	r2, [r3, #24]
 800400c:	e043      	b.n	8004096 <HAL_TIM_PWM_ConfigChannel+0x172>
 800400e:	68fb      	ldr	r3, [r7, #12]
 8004010:	681b      	ldr	r3, [r3, #0]
 8004012:	68b9      	ldr	r1, [r7, #8]
 8004014:	4618      	mov	r0, r3
 8004016:	f000 fa05 	bl	8004424 <TIM_OC3_SetConfig>
 800401a:	68fb      	ldr	r3, [r7, #12]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	69da      	ldr	r2, [r3, #28]
 8004020:	68fb      	ldr	r3, [r7, #12]
 8004022:	681b      	ldr	r3, [r3, #0]
 8004024:	f042 0208 	orr.w	r2, r2, #8
 8004028:	61da      	str	r2, [r3, #28]
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	69da      	ldr	r2, [r3, #28]
 8004030:	68fb      	ldr	r3, [r7, #12]
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	f022 0204 	bic.w	r2, r2, #4
 8004038:	61da      	str	r2, [r3, #28]
 800403a:	68fb      	ldr	r3, [r7, #12]
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	69d9      	ldr	r1, [r3, #28]
 8004040:	68bb      	ldr	r3, [r7, #8]
 8004042:	691a      	ldr	r2, [r3, #16]
 8004044:	68fb      	ldr	r3, [r7, #12]
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	430a      	orrs	r2, r1
 800404a:	61da      	str	r2, [r3, #28]
 800404c:	e023      	b.n	8004096 <HAL_TIM_PWM_ConfigChannel+0x172>
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	68b9      	ldr	r1, [r7, #8]
 8004054:	4618      	mov	r0, r3
 8004056:	f000 fa59 	bl	800450c <TIM_OC4_SetConfig>
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	69da      	ldr	r2, [r3, #28]
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004068:	61da      	str	r2, [r3, #28]
 800406a:	68fb      	ldr	r3, [r7, #12]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	69da      	ldr	r2, [r3, #28]
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004078:	61da      	str	r2, [r3, #28]
 800407a:	68fb      	ldr	r3, [r7, #12]
 800407c:	681b      	ldr	r3, [r3, #0]
 800407e:	69d9      	ldr	r1, [r3, #28]
 8004080:	68bb      	ldr	r3, [r7, #8]
 8004082:	691b      	ldr	r3, [r3, #16]
 8004084:	021a      	lsls	r2, r3, #8
 8004086:	68fb      	ldr	r3, [r7, #12]
 8004088:	681b      	ldr	r3, [r3, #0]
 800408a:	430a      	orrs	r2, r1
 800408c:	61da      	str	r2, [r3, #28]
 800408e:	e002      	b.n	8004096 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004090:	2301      	movs	r3, #1
 8004092:	75fb      	strb	r3, [r7, #23]
 8004094:	bf00      	nop
 8004096:	68fb      	ldr	r3, [r7, #12]
 8004098:	2200      	movs	r2, #0
 800409a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800409e:	7dfb      	ldrb	r3, [r7, #23]
 80040a0:	4618      	mov	r0, r3
 80040a2:	3718      	adds	r7, #24
 80040a4:	46bd      	mov	sp, r7
 80040a6:	bd80      	pop	{r7, pc}

080040a8 <HAL_TIM_PeriodElapsedCallback>:
 80040a8:	b480      	push	{r7}
 80040aa:	b083      	sub	sp, #12
 80040ac:	af00      	add	r7, sp, #0
 80040ae:	6078      	str	r0, [r7, #4]
 80040b0:	bf00      	nop
 80040b2:	370c      	adds	r7, #12
 80040b4:	46bd      	mov	sp, r7
 80040b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ba:	4770      	bx	lr

080040bc <HAL_TIM_OC_DelayElapsedCallback>:
 80040bc:	b480      	push	{r7}
 80040be:	b083      	sub	sp, #12
 80040c0:	af00      	add	r7, sp, #0
 80040c2:	6078      	str	r0, [r7, #4]
 80040c4:	bf00      	nop
 80040c6:	370c      	adds	r7, #12
 80040c8:	46bd      	mov	sp, r7
 80040ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ce:	4770      	bx	lr

080040d0 <HAL_TIM_IC_CaptureCallback>:
 80040d0:	b480      	push	{r7}
 80040d2:	b083      	sub	sp, #12
 80040d4:	af00      	add	r7, sp, #0
 80040d6:	6078      	str	r0, [r7, #4]
 80040d8:	bf00      	nop
 80040da:	370c      	adds	r7, #12
 80040dc:	46bd      	mov	sp, r7
 80040de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040e2:	4770      	bx	lr

080040e4 <HAL_TIM_PWM_PulseFinishedCallback>:
 80040e4:	b480      	push	{r7}
 80040e6:	b083      	sub	sp, #12
 80040e8:	af00      	add	r7, sp, #0
 80040ea:	6078      	str	r0, [r7, #4]
 80040ec:	bf00      	nop
 80040ee:	370c      	adds	r7, #12
 80040f0:	46bd      	mov	sp, r7
 80040f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040f6:	4770      	bx	lr

080040f8 <HAL_TIM_TriggerCallback>:
 80040f8:	b480      	push	{r7}
 80040fa:	b083      	sub	sp, #12
 80040fc:	af00      	add	r7, sp, #0
 80040fe:	6078      	str	r0, [r7, #4]
 8004100:	bf00      	nop
 8004102:	370c      	adds	r7, #12
 8004104:	46bd      	mov	sp, r7
 8004106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800410a:	4770      	bx	lr

0800410c <TIM_Base_SetConfig>:
 800410c:	b480      	push	{r7}
 800410e:	b085      	sub	sp, #20
 8004110:	af00      	add	r7, sp, #0
 8004112:	6078      	str	r0, [r7, #4]
 8004114:	6039      	str	r1, [r7, #0]
 8004116:	687b      	ldr	r3, [r7, #4]
 8004118:	681b      	ldr	r3, [r3, #0]
 800411a:	60fb      	str	r3, [r7, #12]
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	4a43      	ldr	r2, [pc, #268]	@ (800422c <TIM_Base_SetConfig+0x120>)
 8004120:	4293      	cmp	r3, r2
 8004122:	d013      	beq.n	800414c <TIM_Base_SetConfig+0x40>
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800412a:	d00f      	beq.n	800414c <TIM_Base_SetConfig+0x40>
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	4a40      	ldr	r2, [pc, #256]	@ (8004230 <TIM_Base_SetConfig+0x124>)
 8004130:	4293      	cmp	r3, r2
 8004132:	d00b      	beq.n	800414c <TIM_Base_SetConfig+0x40>
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	4a3f      	ldr	r2, [pc, #252]	@ (8004234 <TIM_Base_SetConfig+0x128>)
 8004138:	4293      	cmp	r3, r2
 800413a:	d007      	beq.n	800414c <TIM_Base_SetConfig+0x40>
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	4a3e      	ldr	r2, [pc, #248]	@ (8004238 <TIM_Base_SetConfig+0x12c>)
 8004140:	4293      	cmp	r3, r2
 8004142:	d003      	beq.n	800414c <TIM_Base_SetConfig+0x40>
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	4a3d      	ldr	r2, [pc, #244]	@ (800423c <TIM_Base_SetConfig+0x130>)
 8004148:	4293      	cmp	r3, r2
 800414a:	d108      	bne.n	800415e <TIM_Base_SetConfig+0x52>
 800414c:	68fb      	ldr	r3, [r7, #12]
 800414e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004152:	60fb      	str	r3, [r7, #12]
 8004154:	683b      	ldr	r3, [r7, #0]
 8004156:	685b      	ldr	r3, [r3, #4]
 8004158:	68fa      	ldr	r2, [r7, #12]
 800415a:	4313      	orrs	r3, r2
 800415c:	60fb      	str	r3, [r7, #12]
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	4a32      	ldr	r2, [pc, #200]	@ (800422c <TIM_Base_SetConfig+0x120>)
 8004162:	4293      	cmp	r3, r2
 8004164:	d02b      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800416c:	d027      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	4a2f      	ldr	r2, [pc, #188]	@ (8004230 <TIM_Base_SetConfig+0x124>)
 8004172:	4293      	cmp	r3, r2
 8004174:	d023      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	4a2e      	ldr	r2, [pc, #184]	@ (8004234 <TIM_Base_SetConfig+0x128>)
 800417a:	4293      	cmp	r3, r2
 800417c:	d01f      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	4a2d      	ldr	r2, [pc, #180]	@ (8004238 <TIM_Base_SetConfig+0x12c>)
 8004182:	4293      	cmp	r3, r2
 8004184:	d01b      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	4a2c      	ldr	r2, [pc, #176]	@ (800423c <TIM_Base_SetConfig+0x130>)
 800418a:	4293      	cmp	r3, r2
 800418c:	d017      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	4a2b      	ldr	r2, [pc, #172]	@ (8004240 <TIM_Base_SetConfig+0x134>)
 8004192:	4293      	cmp	r3, r2
 8004194:	d013      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	4a2a      	ldr	r2, [pc, #168]	@ (8004244 <TIM_Base_SetConfig+0x138>)
 800419a:	4293      	cmp	r3, r2
 800419c:	d00f      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	4a29      	ldr	r2, [pc, #164]	@ (8004248 <TIM_Base_SetConfig+0x13c>)
 80041a2:	4293      	cmp	r3, r2
 80041a4:	d00b      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	4a28      	ldr	r2, [pc, #160]	@ (800424c <TIM_Base_SetConfig+0x140>)
 80041aa:	4293      	cmp	r3, r2
 80041ac:	d007      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	4a27      	ldr	r2, [pc, #156]	@ (8004250 <TIM_Base_SetConfig+0x144>)
 80041b2:	4293      	cmp	r3, r2
 80041b4:	d003      	beq.n	80041be <TIM_Base_SetConfig+0xb2>
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	4a26      	ldr	r2, [pc, #152]	@ (8004254 <TIM_Base_SetConfig+0x148>)
 80041ba:	4293      	cmp	r3, r2
 80041bc:	d108      	bne.n	80041d0 <TIM_Base_SetConfig+0xc4>
 80041be:	68fb      	ldr	r3, [r7, #12]
 80041c0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80041c4:	60fb      	str	r3, [r7, #12]
 80041c6:	683b      	ldr	r3, [r7, #0]
 80041c8:	68db      	ldr	r3, [r3, #12]
 80041ca:	68fa      	ldr	r2, [r7, #12]
 80041cc:	4313      	orrs	r3, r2
 80041ce:	60fb      	str	r3, [r7, #12]
 80041d0:	68fb      	ldr	r3, [r7, #12]
 80041d2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80041d6:	683b      	ldr	r3, [r7, #0]
 80041d8:	695b      	ldr	r3, [r3, #20]
 80041da:	4313      	orrs	r3, r2
 80041dc:	60fb      	str	r3, [r7, #12]
 80041de:	683b      	ldr	r3, [r7, #0]
 80041e0:	689a      	ldr	r2, [r3, #8]
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80041e6:	683b      	ldr	r3, [r7, #0]
 80041e8:	681a      	ldr	r2, [r3, #0]
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	629a      	str	r2, [r3, #40]	@ 0x28
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	4a0e      	ldr	r2, [pc, #56]	@ (800422c <TIM_Base_SetConfig+0x120>)
 80041f2:	4293      	cmp	r3, r2
 80041f4:	d003      	beq.n	80041fe <TIM_Base_SetConfig+0xf2>
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	4a10      	ldr	r2, [pc, #64]	@ (800423c <TIM_Base_SetConfig+0x130>)
 80041fa:	4293      	cmp	r3, r2
 80041fc:	d103      	bne.n	8004206 <TIM_Base_SetConfig+0xfa>
 80041fe:	683b      	ldr	r3, [r7, #0]
 8004200:	691a      	ldr	r2, [r3, #16]
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	631a      	str	r2, [r3, #48]	@ 0x30
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	681b      	ldr	r3, [r3, #0]
 800420a:	f043 0204 	orr.w	r2, r3, #4
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	601a      	str	r2, [r3, #0]
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	2201      	movs	r2, #1
 8004216:	615a      	str	r2, [r3, #20]
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	68fa      	ldr	r2, [r7, #12]
 800421c:	601a      	str	r2, [r3, #0]
 800421e:	bf00      	nop
 8004220:	3714      	adds	r7, #20
 8004222:	46bd      	mov	sp, r7
 8004224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004228:	4770      	bx	lr
 800422a:	bf00      	nop
 800422c:	40010000 	.word	0x40010000
 8004230:	40000400 	.word	0x40000400
 8004234:	40000800 	.word	0x40000800
 8004238:	40000c00 	.word	0x40000c00
 800423c:	40010400 	.word	0x40010400
 8004240:	40014000 	.word	0x40014000
 8004244:	40014400 	.word	0x40014400
 8004248:	40014800 	.word	0x40014800
 800424c:	40001800 	.word	0x40001800
 8004250:	40001c00 	.word	0x40001c00
 8004254:	40002000 	.word	0x40002000

08004258 <TIM_OC1_SetConfig>:
 8004258:	b480      	push	{r7}
 800425a:	b087      	sub	sp, #28
 800425c:	af00      	add	r7, sp, #0
 800425e:	6078      	str	r0, [r7, #4]
 8004260:	6039      	str	r1, [r7, #0]
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	6a1b      	ldr	r3, [r3, #32]
 8004266:	617b      	str	r3, [r7, #20]
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	6a1b      	ldr	r3, [r3, #32]
 800426c:	f023 0201 	bic.w	r2, r3, #1
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	621a      	str	r2, [r3, #32]
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	685b      	ldr	r3, [r3, #4]
 8004278:	613b      	str	r3, [r7, #16]
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	699b      	ldr	r3, [r3, #24]
 800427e:	60fb      	str	r3, [r7, #12]
 8004280:	68fb      	ldr	r3, [r7, #12]
 8004282:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004286:	60fb      	str	r3, [r7, #12]
 8004288:	68fb      	ldr	r3, [r7, #12]
 800428a:	f023 0303 	bic.w	r3, r3, #3
 800428e:	60fb      	str	r3, [r7, #12]
 8004290:	683b      	ldr	r3, [r7, #0]
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	68fa      	ldr	r2, [r7, #12]
 8004296:	4313      	orrs	r3, r2
 8004298:	60fb      	str	r3, [r7, #12]
 800429a:	697b      	ldr	r3, [r7, #20]
 800429c:	f023 0302 	bic.w	r3, r3, #2
 80042a0:	617b      	str	r3, [r7, #20]
 80042a2:	683b      	ldr	r3, [r7, #0]
 80042a4:	689b      	ldr	r3, [r3, #8]
 80042a6:	697a      	ldr	r2, [r7, #20]
 80042a8:	4313      	orrs	r3, r2
 80042aa:	617b      	str	r3, [r7, #20]
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	4a20      	ldr	r2, [pc, #128]	@ (8004330 <TIM_OC1_SetConfig+0xd8>)
 80042b0:	4293      	cmp	r3, r2
 80042b2:	d003      	beq.n	80042bc <TIM_OC1_SetConfig+0x64>
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	4a1f      	ldr	r2, [pc, #124]	@ (8004334 <TIM_OC1_SetConfig+0xdc>)
 80042b8:	4293      	cmp	r3, r2
 80042ba:	d10c      	bne.n	80042d6 <TIM_OC1_SetConfig+0x7e>
 80042bc:	697b      	ldr	r3, [r7, #20]
 80042be:	f023 0308 	bic.w	r3, r3, #8
 80042c2:	617b      	str	r3, [r7, #20]
 80042c4:	683b      	ldr	r3, [r7, #0]
 80042c6:	68db      	ldr	r3, [r3, #12]
 80042c8:	697a      	ldr	r2, [r7, #20]
 80042ca:	4313      	orrs	r3, r2
 80042cc:	617b      	str	r3, [r7, #20]
 80042ce:	697b      	ldr	r3, [r7, #20]
 80042d0:	f023 0304 	bic.w	r3, r3, #4
 80042d4:	617b      	str	r3, [r7, #20]
 80042d6:	687b      	ldr	r3, [r7, #4]
 80042d8:	4a15      	ldr	r2, [pc, #84]	@ (8004330 <TIM_OC1_SetConfig+0xd8>)
 80042da:	4293      	cmp	r3, r2
 80042dc:	d003      	beq.n	80042e6 <TIM_OC1_SetConfig+0x8e>
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	4a14      	ldr	r2, [pc, #80]	@ (8004334 <TIM_OC1_SetConfig+0xdc>)
 80042e2:	4293      	cmp	r3, r2
 80042e4:	d111      	bne.n	800430a <TIM_OC1_SetConfig+0xb2>
 80042e6:	693b      	ldr	r3, [r7, #16]
 80042e8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80042ec:	613b      	str	r3, [r7, #16]
 80042ee:	693b      	ldr	r3, [r7, #16]
 80042f0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80042f4:	613b      	str	r3, [r7, #16]
 80042f6:	683b      	ldr	r3, [r7, #0]
 80042f8:	695b      	ldr	r3, [r3, #20]
 80042fa:	693a      	ldr	r2, [r7, #16]
 80042fc:	4313      	orrs	r3, r2
 80042fe:	613b      	str	r3, [r7, #16]
 8004300:	683b      	ldr	r3, [r7, #0]
 8004302:	699b      	ldr	r3, [r3, #24]
 8004304:	693a      	ldr	r2, [r7, #16]
 8004306:	4313      	orrs	r3, r2
 8004308:	613b      	str	r3, [r7, #16]
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	693a      	ldr	r2, [r7, #16]
 800430e:	605a      	str	r2, [r3, #4]
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	68fa      	ldr	r2, [r7, #12]
 8004314:	619a      	str	r2, [r3, #24]
 8004316:	683b      	ldr	r3, [r7, #0]
 8004318:	685a      	ldr	r2, [r3, #4]
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	635a      	str	r2, [r3, #52]	@ 0x34
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	697a      	ldr	r2, [r7, #20]
 8004322:	621a      	str	r2, [r3, #32]
 8004324:	bf00      	nop
 8004326:	371c      	adds	r7, #28
 8004328:	46bd      	mov	sp, r7
 800432a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800432e:	4770      	bx	lr
 8004330:	40010000 	.word	0x40010000
 8004334:	40010400 	.word	0x40010400

08004338 <TIM_OC2_SetConfig>:
 8004338:	b480      	push	{r7}
 800433a:	b087      	sub	sp, #28
 800433c:	af00      	add	r7, sp, #0
 800433e:	6078      	str	r0, [r7, #4]
 8004340:	6039      	str	r1, [r7, #0]
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	6a1b      	ldr	r3, [r3, #32]
 8004346:	617b      	str	r3, [r7, #20]
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	6a1b      	ldr	r3, [r3, #32]
 800434c:	f023 0210 	bic.w	r2, r3, #16
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	621a      	str	r2, [r3, #32]
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	685b      	ldr	r3, [r3, #4]
 8004358:	613b      	str	r3, [r7, #16]
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	699b      	ldr	r3, [r3, #24]
 800435e:	60fb      	str	r3, [r7, #12]
 8004360:	68fb      	ldr	r3, [r7, #12]
 8004362:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004366:	60fb      	str	r3, [r7, #12]
 8004368:	68fb      	ldr	r3, [r7, #12]
 800436a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800436e:	60fb      	str	r3, [r7, #12]
 8004370:	683b      	ldr	r3, [r7, #0]
 8004372:	681b      	ldr	r3, [r3, #0]
 8004374:	021b      	lsls	r3, r3, #8
 8004376:	68fa      	ldr	r2, [r7, #12]
 8004378:	4313      	orrs	r3, r2
 800437a:	60fb      	str	r3, [r7, #12]
 800437c:	697b      	ldr	r3, [r7, #20]
 800437e:	f023 0320 	bic.w	r3, r3, #32
 8004382:	617b      	str	r3, [r7, #20]
 8004384:	683b      	ldr	r3, [r7, #0]
 8004386:	689b      	ldr	r3, [r3, #8]
 8004388:	011b      	lsls	r3, r3, #4
 800438a:	697a      	ldr	r2, [r7, #20]
 800438c:	4313      	orrs	r3, r2
 800438e:	617b      	str	r3, [r7, #20]
 8004390:	687b      	ldr	r3, [r7, #4]
 8004392:	4a22      	ldr	r2, [pc, #136]	@ (800441c <TIM_OC2_SetConfig+0xe4>)
 8004394:	4293      	cmp	r3, r2
 8004396:	d003      	beq.n	80043a0 <TIM_OC2_SetConfig+0x68>
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	4a21      	ldr	r2, [pc, #132]	@ (8004420 <TIM_OC2_SetConfig+0xe8>)
 800439c:	4293      	cmp	r3, r2
 800439e:	d10d      	bne.n	80043bc <TIM_OC2_SetConfig+0x84>
 80043a0:	697b      	ldr	r3, [r7, #20]
 80043a2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80043a6:	617b      	str	r3, [r7, #20]
 80043a8:	683b      	ldr	r3, [r7, #0]
 80043aa:	68db      	ldr	r3, [r3, #12]
 80043ac:	011b      	lsls	r3, r3, #4
 80043ae:	697a      	ldr	r2, [r7, #20]
 80043b0:	4313      	orrs	r3, r2
 80043b2:	617b      	str	r3, [r7, #20]
 80043b4:	697b      	ldr	r3, [r7, #20]
 80043b6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80043ba:	617b      	str	r3, [r7, #20]
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	4a17      	ldr	r2, [pc, #92]	@ (800441c <TIM_OC2_SetConfig+0xe4>)
 80043c0:	4293      	cmp	r3, r2
 80043c2:	d003      	beq.n	80043cc <TIM_OC2_SetConfig+0x94>
 80043c4:	687b      	ldr	r3, [r7, #4]
 80043c6:	4a16      	ldr	r2, [pc, #88]	@ (8004420 <TIM_OC2_SetConfig+0xe8>)
 80043c8:	4293      	cmp	r3, r2
 80043ca:	d113      	bne.n	80043f4 <TIM_OC2_SetConfig+0xbc>
 80043cc:	693b      	ldr	r3, [r7, #16]
 80043ce:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80043d2:	613b      	str	r3, [r7, #16]
 80043d4:	693b      	ldr	r3, [r7, #16]
 80043d6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80043da:	613b      	str	r3, [r7, #16]
 80043dc:	683b      	ldr	r3, [r7, #0]
 80043de:	695b      	ldr	r3, [r3, #20]
 80043e0:	009b      	lsls	r3, r3, #2
 80043e2:	693a      	ldr	r2, [r7, #16]
 80043e4:	4313      	orrs	r3, r2
 80043e6:	613b      	str	r3, [r7, #16]
 80043e8:	683b      	ldr	r3, [r7, #0]
 80043ea:	699b      	ldr	r3, [r3, #24]
 80043ec:	009b      	lsls	r3, r3, #2
 80043ee:	693a      	ldr	r2, [r7, #16]
 80043f0:	4313      	orrs	r3, r2
 80043f2:	613b      	str	r3, [r7, #16]
 80043f4:	687b      	ldr	r3, [r7, #4]
 80043f6:	693a      	ldr	r2, [r7, #16]
 80043f8:	605a      	str	r2, [r3, #4]
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	68fa      	ldr	r2, [r7, #12]
 80043fe:	619a      	str	r2, [r3, #24]
 8004400:	683b      	ldr	r3, [r7, #0]
 8004402:	685a      	ldr	r2, [r3, #4]
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	639a      	str	r2, [r3, #56]	@ 0x38
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	697a      	ldr	r2, [r7, #20]
 800440c:	621a      	str	r2, [r3, #32]
 800440e:	bf00      	nop
 8004410:	371c      	adds	r7, #28
 8004412:	46bd      	mov	sp, r7
 8004414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004418:	4770      	bx	lr
 800441a:	bf00      	nop
 800441c:	40010000 	.word	0x40010000
 8004420:	40010400 	.word	0x40010400

08004424 <TIM_OC3_SetConfig>:
 8004424:	b480      	push	{r7}
 8004426:	b087      	sub	sp, #28
 8004428:	af00      	add	r7, sp, #0
 800442a:	6078      	str	r0, [r7, #4]
 800442c:	6039      	str	r1, [r7, #0]
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	6a1b      	ldr	r3, [r3, #32]
 8004432:	617b      	str	r3, [r7, #20]
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	6a1b      	ldr	r3, [r3, #32]
 8004438:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	621a      	str	r2, [r3, #32]
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	685b      	ldr	r3, [r3, #4]
 8004444:	613b      	str	r3, [r7, #16]
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	69db      	ldr	r3, [r3, #28]
 800444a:	60fb      	str	r3, [r7, #12]
 800444c:	68fb      	ldr	r3, [r7, #12]
 800444e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004452:	60fb      	str	r3, [r7, #12]
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	f023 0303 	bic.w	r3, r3, #3
 800445a:	60fb      	str	r3, [r7, #12]
 800445c:	683b      	ldr	r3, [r7, #0]
 800445e:	681b      	ldr	r3, [r3, #0]
 8004460:	68fa      	ldr	r2, [r7, #12]
 8004462:	4313      	orrs	r3, r2
 8004464:	60fb      	str	r3, [r7, #12]
 8004466:	697b      	ldr	r3, [r7, #20]
 8004468:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800446c:	617b      	str	r3, [r7, #20]
 800446e:	683b      	ldr	r3, [r7, #0]
 8004470:	689b      	ldr	r3, [r3, #8]
 8004472:	021b      	lsls	r3, r3, #8
 8004474:	697a      	ldr	r2, [r7, #20]
 8004476:	4313      	orrs	r3, r2
 8004478:	617b      	str	r3, [r7, #20]
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	4a21      	ldr	r2, [pc, #132]	@ (8004504 <TIM_OC3_SetConfig+0xe0>)
 800447e:	4293      	cmp	r3, r2
 8004480:	d003      	beq.n	800448a <TIM_OC3_SetConfig+0x66>
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	4a20      	ldr	r2, [pc, #128]	@ (8004508 <TIM_OC3_SetConfig+0xe4>)
 8004486:	4293      	cmp	r3, r2
 8004488:	d10d      	bne.n	80044a6 <TIM_OC3_SetConfig+0x82>
 800448a:	697b      	ldr	r3, [r7, #20]
 800448c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004490:	617b      	str	r3, [r7, #20]
 8004492:	683b      	ldr	r3, [r7, #0]
 8004494:	68db      	ldr	r3, [r3, #12]
 8004496:	021b      	lsls	r3, r3, #8
 8004498:	697a      	ldr	r2, [r7, #20]
 800449a:	4313      	orrs	r3, r2
 800449c:	617b      	str	r3, [r7, #20]
 800449e:	697b      	ldr	r3, [r7, #20]
 80044a0:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80044a4:	617b      	str	r3, [r7, #20]
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	4a16      	ldr	r2, [pc, #88]	@ (8004504 <TIM_OC3_SetConfig+0xe0>)
 80044aa:	4293      	cmp	r3, r2
 80044ac:	d003      	beq.n	80044b6 <TIM_OC3_SetConfig+0x92>
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	4a15      	ldr	r2, [pc, #84]	@ (8004508 <TIM_OC3_SetConfig+0xe4>)
 80044b2:	4293      	cmp	r3, r2
 80044b4:	d113      	bne.n	80044de <TIM_OC3_SetConfig+0xba>
 80044b6:	693b      	ldr	r3, [r7, #16]
 80044b8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80044bc:	613b      	str	r3, [r7, #16]
 80044be:	693b      	ldr	r3, [r7, #16]
 80044c0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80044c4:	613b      	str	r3, [r7, #16]
 80044c6:	683b      	ldr	r3, [r7, #0]
 80044c8:	695b      	ldr	r3, [r3, #20]
 80044ca:	011b      	lsls	r3, r3, #4
 80044cc:	693a      	ldr	r2, [r7, #16]
 80044ce:	4313      	orrs	r3, r2
 80044d0:	613b      	str	r3, [r7, #16]
 80044d2:	683b      	ldr	r3, [r7, #0]
 80044d4:	699b      	ldr	r3, [r3, #24]
 80044d6:	011b      	lsls	r3, r3, #4
 80044d8:	693a      	ldr	r2, [r7, #16]
 80044da:	4313      	orrs	r3, r2
 80044dc:	613b      	str	r3, [r7, #16]
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	693a      	ldr	r2, [r7, #16]
 80044e2:	605a      	str	r2, [r3, #4]
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	68fa      	ldr	r2, [r7, #12]
 80044e8:	61da      	str	r2, [r3, #28]
 80044ea:	683b      	ldr	r3, [r7, #0]
 80044ec:	685a      	ldr	r2, [r3, #4]
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	697a      	ldr	r2, [r7, #20]
 80044f6:	621a      	str	r2, [r3, #32]
 80044f8:	bf00      	nop
 80044fa:	371c      	adds	r7, #28
 80044fc:	46bd      	mov	sp, r7
 80044fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004502:	4770      	bx	lr
 8004504:	40010000 	.word	0x40010000
 8004508:	40010400 	.word	0x40010400

0800450c <TIM_OC4_SetConfig>:
 800450c:	b480      	push	{r7}
 800450e:	b087      	sub	sp, #28
 8004510:	af00      	add	r7, sp, #0
 8004512:	6078      	str	r0, [r7, #4]
 8004514:	6039      	str	r1, [r7, #0]
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	6a1b      	ldr	r3, [r3, #32]
 800451a:	613b      	str	r3, [r7, #16]
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	6a1b      	ldr	r3, [r3, #32]
 8004520:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004524:	687b      	ldr	r3, [r7, #4]
 8004526:	621a      	str	r2, [r3, #32]
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	685b      	ldr	r3, [r3, #4]
 800452c:	617b      	str	r3, [r7, #20]
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	69db      	ldr	r3, [r3, #28]
 8004532:	60fb      	str	r3, [r7, #12]
 8004534:	68fb      	ldr	r3, [r7, #12]
 8004536:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800453a:	60fb      	str	r3, [r7, #12]
 800453c:	68fb      	ldr	r3, [r7, #12]
 800453e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004542:	60fb      	str	r3, [r7, #12]
 8004544:	683b      	ldr	r3, [r7, #0]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	021b      	lsls	r3, r3, #8
 800454a:	68fa      	ldr	r2, [r7, #12]
 800454c:	4313      	orrs	r3, r2
 800454e:	60fb      	str	r3, [r7, #12]
 8004550:	693b      	ldr	r3, [r7, #16]
 8004552:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004556:	613b      	str	r3, [r7, #16]
 8004558:	683b      	ldr	r3, [r7, #0]
 800455a:	689b      	ldr	r3, [r3, #8]
 800455c:	031b      	lsls	r3, r3, #12
 800455e:	693a      	ldr	r2, [r7, #16]
 8004560:	4313      	orrs	r3, r2
 8004562:	613b      	str	r3, [r7, #16]
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	4a12      	ldr	r2, [pc, #72]	@ (80045b0 <TIM_OC4_SetConfig+0xa4>)
 8004568:	4293      	cmp	r3, r2
 800456a:	d003      	beq.n	8004574 <TIM_OC4_SetConfig+0x68>
 800456c:	687b      	ldr	r3, [r7, #4]
 800456e:	4a11      	ldr	r2, [pc, #68]	@ (80045b4 <TIM_OC4_SetConfig+0xa8>)
 8004570:	4293      	cmp	r3, r2
 8004572:	d109      	bne.n	8004588 <TIM_OC4_SetConfig+0x7c>
 8004574:	697b      	ldr	r3, [r7, #20]
 8004576:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800457a:	617b      	str	r3, [r7, #20]
 800457c:	683b      	ldr	r3, [r7, #0]
 800457e:	695b      	ldr	r3, [r3, #20]
 8004580:	019b      	lsls	r3, r3, #6
 8004582:	697a      	ldr	r2, [r7, #20]
 8004584:	4313      	orrs	r3, r2
 8004586:	617b      	str	r3, [r7, #20]
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	697a      	ldr	r2, [r7, #20]
 800458c:	605a      	str	r2, [r3, #4]
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	68fa      	ldr	r2, [r7, #12]
 8004592:	61da      	str	r2, [r3, #28]
 8004594:	683b      	ldr	r3, [r7, #0]
 8004596:	685a      	ldr	r2, [r3, #4]
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	641a      	str	r2, [r3, #64]	@ 0x40
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	693a      	ldr	r2, [r7, #16]
 80045a0:	621a      	str	r2, [r3, #32]
 80045a2:	bf00      	nop
 80045a4:	371c      	adds	r7, #28
 80045a6:	46bd      	mov	sp, r7
 80045a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045ac:	4770      	bx	lr
 80045ae:	bf00      	nop
 80045b0:	40010000 	.word	0x40010000
 80045b4:	40010400 	.word	0x40010400

080045b8 <TIM_CCxChannelCmd>:
 80045b8:	b480      	push	{r7}
 80045ba:	b087      	sub	sp, #28
 80045bc:	af00      	add	r7, sp, #0
 80045be:	60f8      	str	r0, [r7, #12]
 80045c0:	60b9      	str	r1, [r7, #8]
 80045c2:	607a      	str	r2, [r7, #4]
 80045c4:	68bb      	ldr	r3, [r7, #8]
 80045c6:	f003 031f 	and.w	r3, r3, #31
 80045ca:	2201      	movs	r2, #1
 80045cc:	fa02 f303 	lsl.w	r3, r2, r3
 80045d0:	617b      	str	r3, [r7, #20]
 80045d2:	68fb      	ldr	r3, [r7, #12]
 80045d4:	6a1a      	ldr	r2, [r3, #32]
 80045d6:	697b      	ldr	r3, [r7, #20]
 80045d8:	43db      	mvns	r3, r3
 80045da:	401a      	ands	r2, r3
 80045dc:	68fb      	ldr	r3, [r7, #12]
 80045de:	621a      	str	r2, [r3, #32]
 80045e0:	68fb      	ldr	r3, [r7, #12]
 80045e2:	6a1a      	ldr	r2, [r3, #32]
 80045e4:	68bb      	ldr	r3, [r7, #8]
 80045e6:	f003 031f 	and.w	r3, r3, #31
 80045ea:	6879      	ldr	r1, [r7, #4]
 80045ec:	fa01 f303 	lsl.w	r3, r1, r3
 80045f0:	431a      	orrs	r2, r3
 80045f2:	68fb      	ldr	r3, [r7, #12]
 80045f4:	621a      	str	r2, [r3, #32]
 80045f6:	bf00      	nop
 80045f8:	371c      	adds	r7, #28
 80045fa:	46bd      	mov	sp, r7
 80045fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004600:	4770      	bx	lr
	...

08004604 <HAL_TIMEx_MasterConfigSynchronization>:
 8004604:	b480      	push	{r7}
 8004606:	b085      	sub	sp, #20
 8004608:	af00      	add	r7, sp, #0
 800460a:	6078      	str	r0, [r7, #4]
 800460c:	6039      	str	r1, [r7, #0]
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004614:	2b01      	cmp	r3, #1
 8004616:	d101      	bne.n	800461c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004618:	2302      	movs	r3, #2
 800461a:	e05a      	b.n	80046d2 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	2201      	movs	r2, #1
 8004620:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	2202      	movs	r2, #2
 8004628:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	685b      	ldr	r3, [r3, #4]
 8004632:	60fb      	str	r3, [r7, #12]
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	689b      	ldr	r3, [r3, #8]
 800463a:	60bb      	str	r3, [r7, #8]
 800463c:	68fb      	ldr	r3, [r7, #12]
 800463e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004642:	60fb      	str	r3, [r7, #12]
 8004644:	683b      	ldr	r3, [r7, #0]
 8004646:	681b      	ldr	r3, [r3, #0]
 8004648:	68fa      	ldr	r2, [r7, #12]
 800464a:	4313      	orrs	r3, r2
 800464c:	60fb      	str	r3, [r7, #12]
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	68fa      	ldr	r2, [r7, #12]
 8004654:	605a      	str	r2, [r3, #4]
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	4a21      	ldr	r2, [pc, #132]	@ (80046e0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800465c:	4293      	cmp	r3, r2
 800465e:	d022      	beq.n	80046a6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004660:	687b      	ldr	r3, [r7, #4]
 8004662:	681b      	ldr	r3, [r3, #0]
 8004664:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004668:	d01d      	beq.n	80046a6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	4a1d      	ldr	r2, [pc, #116]	@ (80046e4 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8004670:	4293      	cmp	r3, r2
 8004672:	d018      	beq.n	80046a6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	4a1b      	ldr	r2, [pc, #108]	@ (80046e8 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800467a:	4293      	cmp	r3, r2
 800467c:	d013      	beq.n	80046a6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	681b      	ldr	r3, [r3, #0]
 8004682:	4a1a      	ldr	r2, [pc, #104]	@ (80046ec <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8004684:	4293      	cmp	r3, r2
 8004686:	d00e      	beq.n	80046a6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	4a18      	ldr	r2, [pc, #96]	@ (80046f0 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800468e:	4293      	cmp	r3, r2
 8004690:	d009      	beq.n	80046a6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	4a17      	ldr	r2, [pc, #92]	@ (80046f4 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8004698:	4293      	cmp	r3, r2
 800469a:	d004      	beq.n	80046a6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800469c:	687b      	ldr	r3, [r7, #4]
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	4a15      	ldr	r2, [pc, #84]	@ (80046f8 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80046a2:	4293      	cmp	r3, r2
 80046a4:	d10c      	bne.n	80046c0 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80046a6:	68bb      	ldr	r3, [r7, #8]
 80046a8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80046ac:	60bb      	str	r3, [r7, #8]
 80046ae:	683b      	ldr	r3, [r7, #0]
 80046b0:	685b      	ldr	r3, [r3, #4]
 80046b2:	68ba      	ldr	r2, [r7, #8]
 80046b4:	4313      	orrs	r3, r2
 80046b6:	60bb      	str	r3, [r7, #8]
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	681b      	ldr	r3, [r3, #0]
 80046bc:	68ba      	ldr	r2, [r7, #8]
 80046be:	609a      	str	r2, [r3, #8]
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	2201      	movs	r2, #1
 80046c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	2200      	movs	r2, #0
 80046cc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80046d0:	2300      	movs	r3, #0
 80046d2:	4618      	mov	r0, r3
 80046d4:	3714      	adds	r7, #20
 80046d6:	46bd      	mov	sp, r7
 80046d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046dc:	4770      	bx	lr
 80046de:	bf00      	nop
 80046e0:	40010000 	.word	0x40010000
 80046e4:	40000400 	.word	0x40000400
 80046e8:	40000800 	.word	0x40000800
 80046ec:	40000c00 	.word	0x40000c00
 80046f0:	40010400 	.word	0x40010400
 80046f4:	40014000 	.word	0x40014000
 80046f8:	40001800 	.word	0x40001800

080046fc <HAL_TIMEx_CommutCallback>:
 80046fc:	b480      	push	{r7}
 80046fe:	b083      	sub	sp, #12
 8004700:	af00      	add	r7, sp, #0
 8004702:	6078      	str	r0, [r7, #4]
 8004704:	bf00      	nop
 8004706:	370c      	adds	r7, #12
 8004708:	46bd      	mov	sp, r7
 800470a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800470e:	4770      	bx	lr

08004710 <HAL_TIMEx_BreakCallback>:
 8004710:	b480      	push	{r7}
 8004712:	b083      	sub	sp, #12
 8004714:	af00      	add	r7, sp, #0
 8004716:	6078      	str	r0, [r7, #4]
 8004718:	bf00      	nop
 800471a:	370c      	adds	r7, #12
 800471c:	46bd      	mov	sp, r7
 800471e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004722:	4770      	bx	lr

08004724 <HAL_UART_Init>:
 8004724:	b580      	push	{r7, lr}
 8004726:	b082      	sub	sp, #8
 8004728:	af00      	add	r7, sp, #0
 800472a:	6078      	str	r0, [r7, #4]
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	2b00      	cmp	r3, #0
 8004730:	d101      	bne.n	8004736 <HAL_UART_Init+0x12>
 8004732:	2301      	movs	r3, #1
 8004734:	e042      	b.n	80047bc <HAL_UART_Init+0x98>
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800473c:	b2db      	uxtb	r3, r3
 800473e:	2b00      	cmp	r3, #0
 8004740:	d106      	bne.n	8004750 <HAL_UART_Init+0x2c>
 8004742:	687b      	ldr	r3, [r7, #4]
 8004744:	2200      	movs	r2, #0
 8004746:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800474a:	6878      	ldr	r0, [r7, #4]
 800474c:	f7fd fee6 	bl	800251c <HAL_UART_MspInit>
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	2224      	movs	r2, #36	@ 0x24
 8004754:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	681b      	ldr	r3, [r3, #0]
 800475c:	68da      	ldr	r2, [r3, #12]
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004766:	60da      	str	r2, [r3, #12]
 8004768:	6878      	ldr	r0, [r7, #4]
 800476a:	f000 fce5 	bl	8005138 <UART_SetConfig>
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	681b      	ldr	r3, [r3, #0]
 8004772:	691a      	ldr	r2, [r3, #16]
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800477c:	611a      	str	r2, [r3, #16]
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	681b      	ldr	r3, [r3, #0]
 8004782:	695a      	ldr	r2, [r3, #20]
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800478c:	615a      	str	r2, [r3, #20]
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	68da      	ldr	r2, [r3, #12]
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800479c:	60da      	str	r2, [r3, #12]
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	2200      	movs	r2, #0
 80047a2:	645a      	str	r2, [r3, #68]	@ 0x44
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	2220      	movs	r2, #32
 80047a8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	2220      	movs	r2, #32
 80047b0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	2200      	movs	r2, #0
 80047b8:	635a      	str	r2, [r3, #52]	@ 0x34
 80047ba:	2300      	movs	r3, #0
 80047bc:	4618      	mov	r0, r3
 80047be:	3708      	adds	r7, #8
 80047c0:	46bd      	mov	sp, r7
 80047c2:	bd80      	pop	{r7, pc}

080047c4 <HAL_UART_Receive_IT>:
 80047c4:	b580      	push	{r7, lr}
 80047c6:	b084      	sub	sp, #16
 80047c8:	af00      	add	r7, sp, #0
 80047ca:	60f8      	str	r0, [r7, #12]
 80047cc:	60b9      	str	r1, [r7, #8]
 80047ce:	4613      	mov	r3, r2
 80047d0:	80fb      	strh	r3, [r7, #6]
 80047d2:	68fb      	ldr	r3, [r7, #12]
 80047d4:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80047d8:	b2db      	uxtb	r3, r3
 80047da:	2b20      	cmp	r3, #32
 80047dc:	d112      	bne.n	8004804 <HAL_UART_Receive_IT+0x40>
 80047de:	68bb      	ldr	r3, [r7, #8]
 80047e0:	2b00      	cmp	r3, #0
 80047e2:	d002      	beq.n	80047ea <HAL_UART_Receive_IT+0x26>
 80047e4:	88fb      	ldrh	r3, [r7, #6]
 80047e6:	2b00      	cmp	r3, #0
 80047e8:	d101      	bne.n	80047ee <HAL_UART_Receive_IT+0x2a>
 80047ea:	2301      	movs	r3, #1
 80047ec:	e00b      	b.n	8004806 <HAL_UART_Receive_IT+0x42>
 80047ee:	68fb      	ldr	r3, [r7, #12]
 80047f0:	2200      	movs	r2, #0
 80047f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80047f4:	88fb      	ldrh	r3, [r7, #6]
 80047f6:	461a      	mov	r2, r3
 80047f8:	68b9      	ldr	r1, [r7, #8]
 80047fa:	68f8      	ldr	r0, [r7, #12]
 80047fc:	f000 fac8 	bl	8004d90 <UART_Start_Receive_IT>
 8004800:	4603      	mov	r3, r0
 8004802:	e000      	b.n	8004806 <HAL_UART_Receive_IT+0x42>
 8004804:	2302      	movs	r3, #2
 8004806:	4618      	mov	r0, r3
 8004808:	3710      	adds	r7, #16
 800480a:	46bd      	mov	sp, r7
 800480c:	bd80      	pop	{r7, pc}
	...

08004810 <HAL_UART_IRQHandler>:
 8004810:	b580      	push	{r7, lr}
 8004812:	b0ba      	sub	sp, #232	@ 0xe8
 8004814:	af00      	add	r7, sp, #0
 8004816:	6078      	str	r0, [r7, #4]
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	681b      	ldr	r3, [r3, #0]
 800481e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	68db      	ldr	r3, [r3, #12]
 8004828:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	695b      	ldr	r3, [r3, #20]
 8004832:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8004836:	2300      	movs	r3, #0
 8004838:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800483c:	2300      	movs	r3, #0
 800483e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8004842:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004846:	f003 030f 	and.w	r3, r3, #15
 800484a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800484e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8004852:	2b00      	cmp	r3, #0
 8004854:	d10f      	bne.n	8004876 <HAL_UART_IRQHandler+0x66>
 8004856:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800485a:	f003 0320 	and.w	r3, r3, #32
 800485e:	2b00      	cmp	r3, #0
 8004860:	d009      	beq.n	8004876 <HAL_UART_IRQHandler+0x66>
 8004862:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004866:	f003 0320 	and.w	r3, r3, #32
 800486a:	2b00      	cmp	r3, #0
 800486c:	d003      	beq.n	8004876 <HAL_UART_IRQHandler+0x66>
 800486e:	6878      	ldr	r0, [r7, #4]
 8004870:	f000 fba4 	bl	8004fbc <UART_Receive_IT>
 8004874:	e273      	b.n	8004d5e <HAL_UART_IRQHandler+0x54e>
 8004876:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800487a:	2b00      	cmp	r3, #0
 800487c:	f000 80de 	beq.w	8004a3c <HAL_UART_IRQHandler+0x22c>
 8004880:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004884:	f003 0301 	and.w	r3, r3, #1
 8004888:	2b00      	cmp	r3, #0
 800488a:	d106      	bne.n	800489a <HAL_UART_IRQHandler+0x8a>
 800488c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004890:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8004894:	2b00      	cmp	r3, #0
 8004896:	f000 80d1 	beq.w	8004a3c <HAL_UART_IRQHandler+0x22c>
 800489a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800489e:	f003 0301 	and.w	r3, r3, #1
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	d00b      	beq.n	80048be <HAL_UART_IRQHandler+0xae>
 80048a6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80048aa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80048ae:	2b00      	cmp	r3, #0
 80048b0:	d005      	beq.n	80048be <HAL_UART_IRQHandler+0xae>
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048b6:	f043 0201 	orr.w	r2, r3, #1
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	645a      	str	r2, [r3, #68]	@ 0x44
 80048be:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80048c2:	f003 0304 	and.w	r3, r3, #4
 80048c6:	2b00      	cmp	r3, #0
 80048c8:	d00b      	beq.n	80048e2 <HAL_UART_IRQHandler+0xd2>
 80048ca:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80048ce:	f003 0301 	and.w	r3, r3, #1
 80048d2:	2b00      	cmp	r3, #0
 80048d4:	d005      	beq.n	80048e2 <HAL_UART_IRQHandler+0xd2>
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048da:	f043 0202 	orr.w	r2, r3, #2
 80048de:	687b      	ldr	r3, [r7, #4]
 80048e0:	645a      	str	r2, [r3, #68]	@ 0x44
 80048e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80048e6:	f003 0302 	and.w	r3, r3, #2
 80048ea:	2b00      	cmp	r3, #0
 80048ec:	d00b      	beq.n	8004906 <HAL_UART_IRQHandler+0xf6>
 80048ee:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80048f2:	f003 0301 	and.w	r3, r3, #1
 80048f6:	2b00      	cmp	r3, #0
 80048f8:	d005      	beq.n	8004906 <HAL_UART_IRQHandler+0xf6>
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048fe:	f043 0204 	orr.w	r2, r3, #4
 8004902:	687b      	ldr	r3, [r7, #4]
 8004904:	645a      	str	r2, [r3, #68]	@ 0x44
 8004906:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800490a:	f003 0308 	and.w	r3, r3, #8
 800490e:	2b00      	cmp	r3, #0
 8004910:	d011      	beq.n	8004936 <HAL_UART_IRQHandler+0x126>
 8004912:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004916:	f003 0320 	and.w	r3, r3, #32
 800491a:	2b00      	cmp	r3, #0
 800491c:	d105      	bne.n	800492a <HAL_UART_IRQHandler+0x11a>
 800491e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004922:	f003 0301 	and.w	r3, r3, #1
 8004926:	2b00      	cmp	r3, #0
 8004928:	d005      	beq.n	8004936 <HAL_UART_IRQHandler+0x126>
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800492e:	f043 0208 	orr.w	r2, r3, #8
 8004932:	687b      	ldr	r3, [r7, #4]
 8004934:	645a      	str	r2, [r3, #68]	@ 0x44
 8004936:	687b      	ldr	r3, [r7, #4]
 8004938:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800493a:	2b00      	cmp	r3, #0
 800493c:	f000 820a 	beq.w	8004d54 <HAL_UART_IRQHandler+0x544>
 8004940:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004944:	f003 0320 	and.w	r3, r3, #32
 8004948:	2b00      	cmp	r3, #0
 800494a:	d008      	beq.n	800495e <HAL_UART_IRQHandler+0x14e>
 800494c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004950:	f003 0320 	and.w	r3, r3, #32
 8004954:	2b00      	cmp	r3, #0
 8004956:	d002      	beq.n	800495e <HAL_UART_IRQHandler+0x14e>
 8004958:	6878      	ldr	r0, [r7, #4]
 800495a:	f000 fb2f 	bl	8004fbc <UART_Receive_IT>
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	681b      	ldr	r3, [r3, #0]
 8004962:	695b      	ldr	r3, [r3, #20]
 8004964:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004968:	2b40      	cmp	r3, #64	@ 0x40
 800496a:	bf0c      	ite	eq
 800496c:	2301      	moveq	r3, #1
 800496e:	2300      	movne	r3, #0
 8004970:	b2db      	uxtb	r3, r3
 8004972:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800497a:	f003 0308 	and.w	r3, r3, #8
 800497e:	2b00      	cmp	r3, #0
 8004980:	d103      	bne.n	800498a <HAL_UART_IRQHandler+0x17a>
 8004982:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8004986:	2b00      	cmp	r3, #0
 8004988:	d04f      	beq.n	8004a2a <HAL_UART_IRQHandler+0x21a>
 800498a:	6878      	ldr	r0, [r7, #4]
 800498c:	f000 fa3a 	bl	8004e04 <UART_EndRxTransfer>
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	695b      	ldr	r3, [r3, #20]
 8004996:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800499a:	2b40      	cmp	r3, #64	@ 0x40
 800499c:	d141      	bne.n	8004a22 <HAL_UART_IRQHandler+0x212>
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	681b      	ldr	r3, [r3, #0]
 80049a2:	3314      	adds	r3, #20
 80049a4:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80049a8:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80049ac:	e853 3f00 	ldrex	r3, [r3]
 80049b0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80049b4:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80049b8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80049bc:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	3314      	adds	r3, #20
 80049c6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80049ca:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80049ce:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80049d2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80049d6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80049da:	e841 2300 	strex	r3, r2, [r1]
 80049de:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80049e2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	d1d9      	bne.n	800499e <HAL_UART_IRQHandler+0x18e>
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80049ee:	2b00      	cmp	r3, #0
 80049f0:	d013      	beq.n	8004a1a <HAL_UART_IRQHandler+0x20a>
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80049f6:	4a8a      	ldr	r2, [pc, #552]	@ (8004c20 <HAL_UART_IRQHandler+0x410>)
 80049f8:	651a      	str	r2, [r3, #80]	@ 0x50
 80049fa:	687b      	ldr	r3, [r7, #4]
 80049fc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80049fe:	4618      	mov	r0, r3
 8004a00:	f7fe f873 	bl	8002aea <HAL_DMA_Abort_IT>
 8004a04:	4603      	mov	r3, r0
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	d016      	beq.n	8004a38 <HAL_UART_IRQHandler+0x228>
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004a0e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004a10:	687a      	ldr	r2, [r7, #4]
 8004a12:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8004a14:	4610      	mov	r0, r2
 8004a16:	4798      	blx	r3
 8004a18:	e00e      	b.n	8004a38 <HAL_UART_IRQHandler+0x228>
 8004a1a:	6878      	ldr	r0, [r7, #4]
 8004a1c:	f000 f9a2 	bl	8004d64 <HAL_UART_ErrorCallback>
 8004a20:	e00a      	b.n	8004a38 <HAL_UART_IRQHandler+0x228>
 8004a22:	6878      	ldr	r0, [r7, #4]
 8004a24:	f000 f99e 	bl	8004d64 <HAL_UART_ErrorCallback>
 8004a28:	e006      	b.n	8004a38 <HAL_UART_IRQHandler+0x228>
 8004a2a:	6878      	ldr	r0, [r7, #4]
 8004a2c:	f000 f99a 	bl	8004d64 <HAL_UART_ErrorCallback>
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	2200      	movs	r2, #0
 8004a34:	645a      	str	r2, [r3, #68]	@ 0x44
 8004a36:	e18d      	b.n	8004d54 <HAL_UART_IRQHandler+0x544>
 8004a38:	bf00      	nop
 8004a3a:	e18b      	b.n	8004d54 <HAL_UART_IRQHandler+0x544>
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004a40:	2b01      	cmp	r3, #1
 8004a42:	f040 8167 	bne.w	8004d14 <HAL_UART_IRQHandler+0x504>
 8004a46:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004a4a:	f003 0310 	and.w	r3, r3, #16
 8004a4e:	2b00      	cmp	r3, #0
 8004a50:	f000 8160 	beq.w	8004d14 <HAL_UART_IRQHandler+0x504>
 8004a54:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004a58:	f003 0310 	and.w	r3, r3, #16
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	f000 8159 	beq.w	8004d14 <HAL_UART_IRQHandler+0x504>
 8004a62:	2300      	movs	r3, #0
 8004a64:	60bb      	str	r3, [r7, #8]
 8004a66:	687b      	ldr	r3, [r7, #4]
 8004a68:	681b      	ldr	r3, [r3, #0]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	60bb      	str	r3, [r7, #8]
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	681b      	ldr	r3, [r3, #0]
 8004a72:	685b      	ldr	r3, [r3, #4]
 8004a74:	60bb      	str	r3, [r7, #8]
 8004a76:	68bb      	ldr	r3, [r7, #8]
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	695b      	ldr	r3, [r3, #20]
 8004a7e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004a82:	2b40      	cmp	r3, #64	@ 0x40
 8004a84:	f040 80ce 	bne.w	8004c24 <HAL_UART_IRQHandler+0x414>
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	685b      	ldr	r3, [r3, #4]
 8004a90:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8004a94:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8004a98:	2b00      	cmp	r3, #0
 8004a9a:	f000 80a9 	beq.w	8004bf0 <HAL_UART_IRQHandler+0x3e0>
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004aa2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004aa6:	429a      	cmp	r2, r3
 8004aa8:	f080 80a2 	bcs.w	8004bf0 <HAL_UART_IRQHandler+0x3e0>
 8004aac:	687b      	ldr	r3, [r7, #4]
 8004aae:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004ab2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004ab8:	69db      	ldr	r3, [r3, #28]
 8004aba:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004abe:	f000 8088 	beq.w	8004bd2 <HAL_UART_IRQHandler+0x3c2>
 8004ac2:	687b      	ldr	r3, [r7, #4]
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	330c      	adds	r3, #12
 8004ac8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004acc:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8004ad0:	e853 3f00 	ldrex	r3, [r3]
 8004ad4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004ad8:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004adc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004ae0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004ae4:	687b      	ldr	r3, [r7, #4]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	330c      	adds	r3, #12
 8004aea:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8004aee:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8004af2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004af6:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8004afa:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8004afe:	e841 2300 	strex	r3, r2, [r1]
 8004b02:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004b06:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004b0a:	2b00      	cmp	r3, #0
 8004b0c:	d1d9      	bne.n	8004ac2 <HAL_UART_IRQHandler+0x2b2>
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	681b      	ldr	r3, [r3, #0]
 8004b12:	3314      	adds	r3, #20
 8004b14:	677b      	str	r3, [r7, #116]	@ 0x74
 8004b16:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004b18:	e853 3f00 	ldrex	r3, [r3]
 8004b1c:	673b      	str	r3, [r7, #112]	@ 0x70
 8004b1e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004b20:	f023 0301 	bic.w	r3, r3, #1
 8004b24:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	3314      	adds	r3, #20
 8004b2e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8004b32:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8004b36:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004b38:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8004b3a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8004b3e:	e841 2300 	strex	r3, r2, [r1]
 8004b42:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004b44:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004b46:	2b00      	cmp	r3, #0
 8004b48:	d1e1      	bne.n	8004b0e <HAL_UART_IRQHandler+0x2fe>
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	3314      	adds	r3, #20
 8004b50:	663b      	str	r3, [r7, #96]	@ 0x60
 8004b52:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004b54:	e853 3f00 	ldrex	r3, [r3]
 8004b58:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004b5a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004b5c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004b60:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004b64:	687b      	ldr	r3, [r7, #4]
 8004b66:	681b      	ldr	r3, [r3, #0]
 8004b68:	3314      	adds	r3, #20
 8004b6a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8004b6e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004b70:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004b72:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8004b74:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8004b76:	e841 2300 	strex	r3, r2, [r1]
 8004b7a:	667b      	str	r3, [r7, #100]	@ 0x64
 8004b7c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004b7e:	2b00      	cmp	r3, #0
 8004b80:	d1e3      	bne.n	8004b4a <HAL_UART_IRQHandler+0x33a>
 8004b82:	687b      	ldr	r3, [r7, #4]
 8004b84:	2220      	movs	r2, #32
 8004b86:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	2200      	movs	r2, #0
 8004b8e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	681b      	ldr	r3, [r3, #0]
 8004b94:	330c      	adds	r3, #12
 8004b96:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004b98:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004b9a:	e853 3f00 	ldrex	r3, [r3]
 8004b9e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004ba0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004ba2:	f023 0310 	bic.w	r3, r3, #16
 8004ba6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	681b      	ldr	r3, [r3, #0]
 8004bae:	330c      	adds	r3, #12
 8004bb0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8004bb4:	65ba      	str	r2, [r7, #88]	@ 0x58
 8004bb6:	657b      	str	r3, [r7, #84]	@ 0x54
 8004bb8:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8004bba:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8004bbc:	e841 2300 	strex	r3, r2, [r1]
 8004bc0:	653b      	str	r3, [r7, #80]	@ 0x50
 8004bc2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004bc4:	2b00      	cmp	r3, #0
 8004bc6:	d1e3      	bne.n	8004b90 <HAL_UART_IRQHandler+0x380>
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004bcc:	4618      	mov	r0, r3
 8004bce:	f7fd ff1c 	bl	8002a0a <HAL_DMA_Abort>
 8004bd2:	687b      	ldr	r3, [r7, #4]
 8004bd4:	2202      	movs	r2, #2
 8004bd6:	635a      	str	r2, [r3, #52]	@ 0x34
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004be0:	b29b      	uxth	r3, r3
 8004be2:	1ad3      	subs	r3, r2, r3
 8004be4:	b29b      	uxth	r3, r3
 8004be6:	4619      	mov	r1, r3
 8004be8:	6878      	ldr	r0, [r7, #4]
 8004bea:	f000 f8c5 	bl	8004d78 <HAL_UARTEx_RxEventCallback>
 8004bee:	e0b3      	b.n	8004d58 <HAL_UART_IRQHandler+0x548>
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004bf4:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004bf8:	429a      	cmp	r2, r3
 8004bfa:	f040 80ad 	bne.w	8004d58 <HAL_UART_IRQHandler+0x548>
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004c02:	69db      	ldr	r3, [r3, #28]
 8004c04:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004c08:	f040 80a6 	bne.w	8004d58 <HAL_UART_IRQHandler+0x548>
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	2202      	movs	r2, #2
 8004c10:	635a      	str	r2, [r3, #52]	@ 0x34
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004c16:	4619      	mov	r1, r3
 8004c18:	6878      	ldr	r0, [r7, #4]
 8004c1a:	f000 f8ad 	bl	8004d78 <HAL_UARTEx_RxEventCallback>
 8004c1e:	e09b      	b.n	8004d58 <HAL_UART_IRQHandler+0x548>
 8004c20:	08004ecb 	.word	0x08004ecb
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004c2c:	b29b      	uxth	r3, r3
 8004c2e:	1ad3      	subs	r3, r2, r3
 8004c30:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8004c34:	687b      	ldr	r3, [r7, #4]
 8004c36:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004c38:	b29b      	uxth	r3, r3
 8004c3a:	2b00      	cmp	r3, #0
 8004c3c:	f000 808e 	beq.w	8004d5c <HAL_UART_IRQHandler+0x54c>
 8004c40:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8004c44:	2b00      	cmp	r3, #0
 8004c46:	f000 8089 	beq.w	8004d5c <HAL_UART_IRQHandler+0x54c>
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	681b      	ldr	r3, [r3, #0]
 8004c4e:	330c      	adds	r3, #12
 8004c50:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004c52:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004c54:	e853 3f00 	ldrex	r3, [r3]
 8004c58:	637b      	str	r3, [r7, #52]	@ 0x34
 8004c5a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004c5c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004c60:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	330c      	adds	r3, #12
 8004c6a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8004c6e:	647a      	str	r2, [r7, #68]	@ 0x44
 8004c70:	643b      	str	r3, [r7, #64]	@ 0x40
 8004c72:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8004c74:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004c76:	e841 2300 	strex	r3, r2, [r1]
 8004c7a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004c7c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004c7e:	2b00      	cmp	r3, #0
 8004c80:	d1e3      	bne.n	8004c4a <HAL_UART_IRQHandler+0x43a>
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	681b      	ldr	r3, [r3, #0]
 8004c86:	3314      	adds	r3, #20
 8004c88:	627b      	str	r3, [r7, #36]	@ 0x24
 8004c8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c8c:	e853 3f00 	ldrex	r3, [r3]
 8004c90:	623b      	str	r3, [r7, #32]
 8004c92:	6a3b      	ldr	r3, [r7, #32]
 8004c94:	f023 0301 	bic.w	r3, r3, #1
 8004c98:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	681b      	ldr	r3, [r3, #0]
 8004ca0:	3314      	adds	r3, #20
 8004ca2:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8004ca6:	633a      	str	r2, [r7, #48]	@ 0x30
 8004ca8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004caa:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004cac:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004cae:	e841 2300 	strex	r3, r2, [r1]
 8004cb2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004cb4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d1e3      	bne.n	8004c82 <HAL_UART_IRQHandler+0x472>
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	2220      	movs	r2, #32
 8004cbe:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	2200      	movs	r2, #0
 8004cc6:	631a      	str	r2, [r3, #48]	@ 0x30
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	330c      	adds	r3, #12
 8004cce:	613b      	str	r3, [r7, #16]
 8004cd0:	693b      	ldr	r3, [r7, #16]
 8004cd2:	e853 3f00 	ldrex	r3, [r3]
 8004cd6:	60fb      	str	r3, [r7, #12]
 8004cd8:	68fb      	ldr	r3, [r7, #12]
 8004cda:	f023 0310 	bic.w	r3, r3, #16
 8004cde:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	681b      	ldr	r3, [r3, #0]
 8004ce6:	330c      	adds	r3, #12
 8004ce8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8004cec:	61fa      	str	r2, [r7, #28]
 8004cee:	61bb      	str	r3, [r7, #24]
 8004cf0:	69b9      	ldr	r1, [r7, #24]
 8004cf2:	69fa      	ldr	r2, [r7, #28]
 8004cf4:	e841 2300 	strex	r3, r2, [r1]
 8004cf8:	617b      	str	r3, [r7, #20]
 8004cfa:	697b      	ldr	r3, [r7, #20]
 8004cfc:	2b00      	cmp	r3, #0
 8004cfe:	d1e3      	bne.n	8004cc8 <HAL_UART_IRQHandler+0x4b8>
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	2202      	movs	r2, #2
 8004d04:	635a      	str	r2, [r3, #52]	@ 0x34
 8004d06:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8004d0a:	4619      	mov	r1, r3
 8004d0c:	6878      	ldr	r0, [r7, #4]
 8004d0e:	f000 f833 	bl	8004d78 <HAL_UARTEx_RxEventCallback>
 8004d12:	e023      	b.n	8004d5c <HAL_UART_IRQHandler+0x54c>
 8004d14:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004d18:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	d009      	beq.n	8004d34 <HAL_UART_IRQHandler+0x524>
 8004d20:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004d24:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004d28:	2b00      	cmp	r3, #0
 8004d2a:	d003      	beq.n	8004d34 <HAL_UART_IRQHandler+0x524>
 8004d2c:	6878      	ldr	r0, [r7, #4]
 8004d2e:	f000 f8dd 	bl	8004eec <UART_Transmit_IT>
 8004d32:	e014      	b.n	8004d5e <HAL_UART_IRQHandler+0x54e>
 8004d34:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004d38:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004d3c:	2b00      	cmp	r3, #0
 8004d3e:	d00e      	beq.n	8004d5e <HAL_UART_IRQHandler+0x54e>
 8004d40:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004d44:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004d48:	2b00      	cmp	r3, #0
 8004d4a:	d008      	beq.n	8004d5e <HAL_UART_IRQHandler+0x54e>
 8004d4c:	6878      	ldr	r0, [r7, #4]
 8004d4e:	f000 f91d 	bl	8004f8c <UART_EndTransmit_IT>
 8004d52:	e004      	b.n	8004d5e <HAL_UART_IRQHandler+0x54e>
 8004d54:	bf00      	nop
 8004d56:	e002      	b.n	8004d5e <HAL_UART_IRQHandler+0x54e>
 8004d58:	bf00      	nop
 8004d5a:	e000      	b.n	8004d5e <HAL_UART_IRQHandler+0x54e>
 8004d5c:	bf00      	nop
 8004d5e:	37e8      	adds	r7, #232	@ 0xe8
 8004d60:	46bd      	mov	sp, r7
 8004d62:	bd80      	pop	{r7, pc}

08004d64 <HAL_UART_ErrorCallback>:
 8004d64:	b480      	push	{r7}
 8004d66:	b083      	sub	sp, #12
 8004d68:	af00      	add	r7, sp, #0
 8004d6a:	6078      	str	r0, [r7, #4]
 8004d6c:	bf00      	nop
 8004d6e:	370c      	adds	r7, #12
 8004d70:	46bd      	mov	sp, r7
 8004d72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d76:	4770      	bx	lr

08004d78 <HAL_UARTEx_RxEventCallback>:
 8004d78:	b480      	push	{r7}
 8004d7a:	b083      	sub	sp, #12
 8004d7c:	af00      	add	r7, sp, #0
 8004d7e:	6078      	str	r0, [r7, #4]
 8004d80:	460b      	mov	r3, r1
 8004d82:	807b      	strh	r3, [r7, #2]
 8004d84:	bf00      	nop
 8004d86:	370c      	adds	r7, #12
 8004d88:	46bd      	mov	sp, r7
 8004d8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d8e:	4770      	bx	lr

08004d90 <UART_Start_Receive_IT>:
 8004d90:	b480      	push	{r7}
 8004d92:	b085      	sub	sp, #20
 8004d94:	af00      	add	r7, sp, #0
 8004d96:	60f8      	str	r0, [r7, #12]
 8004d98:	60b9      	str	r1, [r7, #8]
 8004d9a:	4613      	mov	r3, r2
 8004d9c:	80fb      	strh	r3, [r7, #6]
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	68ba      	ldr	r2, [r7, #8]
 8004da2:	629a      	str	r2, [r3, #40]	@ 0x28
 8004da4:	68fb      	ldr	r3, [r7, #12]
 8004da6:	88fa      	ldrh	r2, [r7, #6]
 8004da8:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004daa:	68fb      	ldr	r3, [r7, #12]
 8004dac:	88fa      	ldrh	r2, [r7, #6]
 8004dae:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004db0:	68fb      	ldr	r3, [r7, #12]
 8004db2:	2200      	movs	r2, #0
 8004db4:	645a      	str	r2, [r3, #68]	@ 0x44
 8004db6:	68fb      	ldr	r3, [r7, #12]
 8004db8:	2222      	movs	r2, #34	@ 0x22
 8004dba:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004dbe:	68fb      	ldr	r3, [r7, #12]
 8004dc0:	691b      	ldr	r3, [r3, #16]
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d007      	beq.n	8004dd6 <UART_Start_Receive_IT+0x46>
 8004dc6:	68fb      	ldr	r3, [r7, #12]
 8004dc8:	681b      	ldr	r3, [r3, #0]
 8004dca:	68da      	ldr	r2, [r3, #12]
 8004dcc:	68fb      	ldr	r3, [r7, #12]
 8004dce:	681b      	ldr	r3, [r3, #0]
 8004dd0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004dd4:	60da      	str	r2, [r3, #12]
 8004dd6:	68fb      	ldr	r3, [r7, #12]
 8004dd8:	681b      	ldr	r3, [r3, #0]
 8004dda:	695a      	ldr	r2, [r3, #20]
 8004ddc:	68fb      	ldr	r3, [r7, #12]
 8004dde:	681b      	ldr	r3, [r3, #0]
 8004de0:	f042 0201 	orr.w	r2, r2, #1
 8004de4:	615a      	str	r2, [r3, #20]
 8004de6:	68fb      	ldr	r3, [r7, #12]
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	68da      	ldr	r2, [r3, #12]
 8004dec:	68fb      	ldr	r3, [r7, #12]
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	f042 0220 	orr.w	r2, r2, #32
 8004df4:	60da      	str	r2, [r3, #12]
 8004df6:	2300      	movs	r3, #0
 8004df8:	4618      	mov	r0, r3
 8004dfa:	3714      	adds	r7, #20
 8004dfc:	46bd      	mov	sp, r7
 8004dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e02:	4770      	bx	lr

08004e04 <UART_EndRxTransfer>:
 8004e04:	b480      	push	{r7}
 8004e06:	b095      	sub	sp, #84	@ 0x54
 8004e08:	af00      	add	r7, sp, #0
 8004e0a:	6078      	str	r0, [r7, #4]
 8004e0c:	687b      	ldr	r3, [r7, #4]
 8004e0e:	681b      	ldr	r3, [r3, #0]
 8004e10:	330c      	adds	r3, #12
 8004e12:	637b      	str	r3, [r7, #52]	@ 0x34
 8004e14:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004e16:	e853 3f00 	ldrex	r3, [r3]
 8004e1a:	633b      	str	r3, [r7, #48]	@ 0x30
 8004e1c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004e1e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004e22:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	681b      	ldr	r3, [r3, #0]
 8004e28:	330c      	adds	r3, #12
 8004e2a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8004e2c:	643a      	str	r2, [r7, #64]	@ 0x40
 8004e2e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004e30:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004e32:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8004e34:	e841 2300 	strex	r3, r2, [r1]
 8004e38:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004e3a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e3c:	2b00      	cmp	r3, #0
 8004e3e:	d1e5      	bne.n	8004e0c <UART_EndRxTransfer+0x8>
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	681b      	ldr	r3, [r3, #0]
 8004e44:	3314      	adds	r3, #20
 8004e46:	623b      	str	r3, [r7, #32]
 8004e48:	6a3b      	ldr	r3, [r7, #32]
 8004e4a:	e853 3f00 	ldrex	r3, [r3]
 8004e4e:	61fb      	str	r3, [r7, #28]
 8004e50:	69fb      	ldr	r3, [r7, #28]
 8004e52:	f023 0301 	bic.w	r3, r3, #1
 8004e56:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	3314      	adds	r3, #20
 8004e5e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004e60:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004e62:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004e64:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8004e66:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004e68:	e841 2300 	strex	r3, r2, [r1]
 8004e6c:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e70:	2b00      	cmp	r3, #0
 8004e72:	d1e5      	bne.n	8004e40 <UART_EndRxTransfer+0x3c>
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004e78:	2b01      	cmp	r3, #1
 8004e7a:	d119      	bne.n	8004eb0 <UART_EndRxTransfer+0xac>
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	330c      	adds	r3, #12
 8004e82:	60fb      	str	r3, [r7, #12]
 8004e84:	68fb      	ldr	r3, [r7, #12]
 8004e86:	e853 3f00 	ldrex	r3, [r3]
 8004e8a:	60bb      	str	r3, [r7, #8]
 8004e8c:	68bb      	ldr	r3, [r7, #8]
 8004e8e:	f023 0310 	bic.w	r3, r3, #16
 8004e92:	647b      	str	r3, [r7, #68]	@ 0x44
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	681b      	ldr	r3, [r3, #0]
 8004e98:	330c      	adds	r3, #12
 8004e9a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004e9c:	61ba      	str	r2, [r7, #24]
 8004e9e:	617b      	str	r3, [r7, #20]
 8004ea0:	6979      	ldr	r1, [r7, #20]
 8004ea2:	69ba      	ldr	r2, [r7, #24]
 8004ea4:	e841 2300 	strex	r3, r2, [r1]
 8004ea8:	613b      	str	r3, [r7, #16]
 8004eaa:	693b      	ldr	r3, [r7, #16]
 8004eac:	2b00      	cmp	r3, #0
 8004eae:	d1e5      	bne.n	8004e7c <UART_EndRxTransfer+0x78>
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	2220      	movs	r2, #32
 8004eb4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004eb8:	687b      	ldr	r3, [r7, #4]
 8004eba:	2200      	movs	r2, #0
 8004ebc:	631a      	str	r2, [r3, #48]	@ 0x30
 8004ebe:	bf00      	nop
 8004ec0:	3754      	adds	r7, #84	@ 0x54
 8004ec2:	46bd      	mov	sp, r7
 8004ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ec8:	4770      	bx	lr

08004eca <UART_DMAAbortOnError>:
 8004eca:	b580      	push	{r7, lr}
 8004ecc:	b084      	sub	sp, #16
 8004ece:	af00      	add	r7, sp, #0
 8004ed0:	6078      	str	r0, [r7, #4]
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004ed6:	60fb      	str	r3, [r7, #12]
 8004ed8:	68fb      	ldr	r3, [r7, #12]
 8004eda:	2200      	movs	r2, #0
 8004edc:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004ede:	68f8      	ldr	r0, [r7, #12]
 8004ee0:	f7ff ff40 	bl	8004d64 <HAL_UART_ErrorCallback>
 8004ee4:	bf00      	nop
 8004ee6:	3710      	adds	r7, #16
 8004ee8:	46bd      	mov	sp, r7
 8004eea:	bd80      	pop	{r7, pc}

08004eec <UART_Transmit_IT>:
 8004eec:	b480      	push	{r7}
 8004eee:	b085      	sub	sp, #20
 8004ef0:	af00      	add	r7, sp, #0
 8004ef2:	6078      	str	r0, [r7, #4]
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004efa:	b2db      	uxtb	r3, r3
 8004efc:	2b21      	cmp	r3, #33	@ 0x21
 8004efe:	d13e      	bne.n	8004f7e <UART_Transmit_IT+0x92>
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	689b      	ldr	r3, [r3, #8]
 8004f04:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004f08:	d114      	bne.n	8004f34 <UART_Transmit_IT+0x48>
 8004f0a:	687b      	ldr	r3, [r7, #4]
 8004f0c:	691b      	ldr	r3, [r3, #16]
 8004f0e:	2b00      	cmp	r3, #0
 8004f10:	d110      	bne.n	8004f34 <UART_Transmit_IT+0x48>
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	6a1b      	ldr	r3, [r3, #32]
 8004f16:	60fb      	str	r3, [r7, #12]
 8004f18:	68fb      	ldr	r3, [r7, #12]
 8004f1a:	881b      	ldrh	r3, [r3, #0]
 8004f1c:	461a      	mov	r2, r3
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004f26:	605a      	str	r2, [r3, #4]
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	6a1b      	ldr	r3, [r3, #32]
 8004f2c:	1c9a      	adds	r2, r3, #2
 8004f2e:	687b      	ldr	r3, [r7, #4]
 8004f30:	621a      	str	r2, [r3, #32]
 8004f32:	e008      	b.n	8004f46 <UART_Transmit_IT+0x5a>
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	6a1b      	ldr	r3, [r3, #32]
 8004f38:	1c59      	adds	r1, r3, #1
 8004f3a:	687a      	ldr	r2, [r7, #4]
 8004f3c:	6211      	str	r1, [r2, #32]
 8004f3e:	781a      	ldrb	r2, [r3, #0]
 8004f40:	687b      	ldr	r3, [r7, #4]
 8004f42:	681b      	ldr	r3, [r3, #0]
 8004f44:	605a      	str	r2, [r3, #4]
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8004f4a:	b29b      	uxth	r3, r3
 8004f4c:	3b01      	subs	r3, #1
 8004f4e:	b29b      	uxth	r3, r3
 8004f50:	687a      	ldr	r2, [r7, #4]
 8004f52:	4619      	mov	r1, r3
 8004f54:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8004f56:	2b00      	cmp	r3, #0
 8004f58:	d10f      	bne.n	8004f7a <UART_Transmit_IT+0x8e>
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	681b      	ldr	r3, [r3, #0]
 8004f5e:	68da      	ldr	r2, [r3, #12]
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004f68:	60da      	str	r2, [r3, #12]
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	681b      	ldr	r3, [r3, #0]
 8004f6e:	68da      	ldr	r2, [r3, #12]
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004f78:	60da      	str	r2, [r3, #12]
 8004f7a:	2300      	movs	r3, #0
 8004f7c:	e000      	b.n	8004f80 <UART_Transmit_IT+0x94>
 8004f7e:	2302      	movs	r3, #2
 8004f80:	4618      	mov	r0, r3
 8004f82:	3714      	adds	r7, #20
 8004f84:	46bd      	mov	sp, r7
 8004f86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f8a:	4770      	bx	lr

08004f8c <UART_EndTransmit_IT>:
 8004f8c:	b580      	push	{r7, lr}
 8004f8e:	b082      	sub	sp, #8
 8004f90:	af00      	add	r7, sp, #0
 8004f92:	6078      	str	r0, [r7, #4]
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	681b      	ldr	r3, [r3, #0]
 8004f98:	68da      	ldr	r2, [r3, #12]
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	681b      	ldr	r3, [r3, #0]
 8004f9e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004fa2:	60da      	str	r2, [r3, #12]
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	2220      	movs	r2, #32
 8004fa8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004fac:	6878      	ldr	r0, [r7, #4]
 8004fae:	f7fd f8f5 	bl	800219c <HAL_UART_TxCpltCallback>
 8004fb2:	2300      	movs	r3, #0
 8004fb4:	4618      	mov	r0, r3
 8004fb6:	3708      	adds	r7, #8
 8004fb8:	46bd      	mov	sp, r7
 8004fba:	bd80      	pop	{r7, pc}

08004fbc <UART_Receive_IT>:
 8004fbc:	b580      	push	{r7, lr}
 8004fbe:	b08c      	sub	sp, #48	@ 0x30
 8004fc0:	af00      	add	r7, sp, #0
 8004fc2:	6078      	str	r0, [r7, #4]
 8004fc4:	2300      	movs	r3, #0
 8004fc6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004fc8:	2300      	movs	r3, #0
 8004fca:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8004fd2:	b2db      	uxtb	r3, r3
 8004fd4:	2b22      	cmp	r3, #34	@ 0x22
 8004fd6:	f040 80aa 	bne.w	800512e <UART_Receive_IT+0x172>
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	689b      	ldr	r3, [r3, #8]
 8004fde:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004fe2:	d115      	bne.n	8005010 <UART_Receive_IT+0x54>
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	691b      	ldr	r3, [r3, #16]
 8004fe8:	2b00      	cmp	r3, #0
 8004fea:	d111      	bne.n	8005010 <UART_Receive_IT+0x54>
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ff0:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004ff2:	687b      	ldr	r3, [r7, #4]
 8004ff4:	681b      	ldr	r3, [r3, #0]
 8004ff6:	685b      	ldr	r3, [r3, #4]
 8004ff8:	b29b      	uxth	r3, r3
 8004ffa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004ffe:	b29a      	uxth	r2, r3
 8005000:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005002:	801a      	strh	r2, [r3, #0]
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005008:	1c9a      	adds	r2, r3, #2
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	629a      	str	r2, [r3, #40]	@ 0x28
 800500e:	e024      	b.n	800505a <UART_Receive_IT+0x9e>
 8005010:	687b      	ldr	r3, [r7, #4]
 8005012:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005014:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	689b      	ldr	r3, [r3, #8]
 800501a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800501e:	d007      	beq.n	8005030 <UART_Receive_IT+0x74>
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	689b      	ldr	r3, [r3, #8]
 8005024:	2b00      	cmp	r3, #0
 8005026:	d10a      	bne.n	800503e <UART_Receive_IT+0x82>
 8005028:	687b      	ldr	r3, [r7, #4]
 800502a:	691b      	ldr	r3, [r3, #16]
 800502c:	2b00      	cmp	r3, #0
 800502e:	d106      	bne.n	800503e <UART_Receive_IT+0x82>
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	685b      	ldr	r3, [r3, #4]
 8005036:	b2da      	uxtb	r2, r3
 8005038:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800503a:	701a      	strb	r2, [r3, #0]
 800503c:	e008      	b.n	8005050 <UART_Receive_IT+0x94>
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	685b      	ldr	r3, [r3, #4]
 8005044:	b2db      	uxtb	r3, r3
 8005046:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800504a:	b2da      	uxtb	r2, r3
 800504c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800504e:	701a      	strb	r2, [r3, #0]
 8005050:	687b      	ldr	r3, [r7, #4]
 8005052:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005054:	1c5a      	adds	r2, r3, #1
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	629a      	str	r2, [r3, #40]	@ 0x28
 800505a:	687b      	ldr	r3, [r7, #4]
 800505c:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800505e:	b29b      	uxth	r3, r3
 8005060:	3b01      	subs	r3, #1
 8005062:	b29b      	uxth	r3, r3
 8005064:	687a      	ldr	r2, [r7, #4]
 8005066:	4619      	mov	r1, r3
 8005068:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 800506a:	2b00      	cmp	r3, #0
 800506c:	d15d      	bne.n	800512a <UART_Receive_IT+0x16e>
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	681b      	ldr	r3, [r3, #0]
 8005072:	68da      	ldr	r2, [r3, #12]
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	f022 0220 	bic.w	r2, r2, #32
 800507c:	60da      	str	r2, [r3, #12]
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	68da      	ldr	r2, [r3, #12]
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800508c:	60da      	str	r2, [r3, #12]
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	695a      	ldr	r2, [r3, #20]
 8005094:	687b      	ldr	r3, [r7, #4]
 8005096:	681b      	ldr	r3, [r3, #0]
 8005098:	f022 0201 	bic.w	r2, r2, #1
 800509c:	615a      	str	r2, [r3, #20]
 800509e:	687b      	ldr	r3, [r7, #4]
 80050a0:	2220      	movs	r2, #32
 80050a2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	2200      	movs	r2, #0
 80050aa:	635a      	str	r2, [r3, #52]	@ 0x34
 80050ac:	687b      	ldr	r3, [r7, #4]
 80050ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80050b0:	2b01      	cmp	r3, #1
 80050b2:	d135      	bne.n	8005120 <UART_Receive_IT+0x164>
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	2200      	movs	r2, #0
 80050b8:	631a      	str	r2, [r3, #48]	@ 0x30
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	681b      	ldr	r3, [r3, #0]
 80050be:	330c      	adds	r3, #12
 80050c0:	617b      	str	r3, [r7, #20]
 80050c2:	697b      	ldr	r3, [r7, #20]
 80050c4:	e853 3f00 	ldrex	r3, [r3]
 80050c8:	613b      	str	r3, [r7, #16]
 80050ca:	693b      	ldr	r3, [r7, #16]
 80050cc:	f023 0310 	bic.w	r3, r3, #16
 80050d0:	627b      	str	r3, [r7, #36]	@ 0x24
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	681b      	ldr	r3, [r3, #0]
 80050d6:	330c      	adds	r3, #12
 80050d8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80050da:	623a      	str	r2, [r7, #32]
 80050dc:	61fb      	str	r3, [r7, #28]
 80050de:	69f9      	ldr	r1, [r7, #28]
 80050e0:	6a3a      	ldr	r2, [r7, #32]
 80050e2:	e841 2300 	strex	r3, r2, [r1]
 80050e6:	61bb      	str	r3, [r7, #24]
 80050e8:	69bb      	ldr	r3, [r7, #24]
 80050ea:	2b00      	cmp	r3, #0
 80050ec:	d1e5      	bne.n	80050ba <UART_Receive_IT+0xfe>
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	681b      	ldr	r3, [r3, #0]
 80050f2:	681b      	ldr	r3, [r3, #0]
 80050f4:	f003 0310 	and.w	r3, r3, #16
 80050f8:	2b10      	cmp	r3, #16
 80050fa:	d10a      	bne.n	8005112 <UART_Receive_IT+0x156>
 80050fc:	2300      	movs	r3, #0
 80050fe:	60fb      	str	r3, [r7, #12]
 8005100:	687b      	ldr	r3, [r7, #4]
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	681b      	ldr	r3, [r3, #0]
 8005106:	60fb      	str	r3, [r7, #12]
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	685b      	ldr	r3, [r3, #4]
 800510e:	60fb      	str	r3, [r7, #12]
 8005110:	68fb      	ldr	r3, [r7, #12]
 8005112:	687b      	ldr	r3, [r7, #4]
 8005114:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005116:	4619      	mov	r1, r3
 8005118:	6878      	ldr	r0, [r7, #4]
 800511a:	f7ff fe2d 	bl	8004d78 <HAL_UARTEx_RxEventCallback>
 800511e:	e002      	b.n	8005126 <UART_Receive_IT+0x16a>
 8005120:	6878      	ldr	r0, [r7, #4]
 8005122:	f7fd f821 	bl	8002168 <HAL_UART_RxCpltCallback>
 8005126:	2300      	movs	r3, #0
 8005128:	e002      	b.n	8005130 <UART_Receive_IT+0x174>
 800512a:	2300      	movs	r3, #0
 800512c:	e000      	b.n	8005130 <UART_Receive_IT+0x174>
 800512e:	2302      	movs	r3, #2
 8005130:	4618      	mov	r0, r3
 8005132:	3730      	adds	r7, #48	@ 0x30
 8005134:	46bd      	mov	sp, r7
 8005136:	bd80      	pop	{r7, pc}

08005138 <UART_SetConfig>:
 8005138:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800513c:	b0c0      	sub	sp, #256	@ 0x100
 800513e:	af00      	add	r7, sp, #0
 8005140:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8005144:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	691b      	ldr	r3, [r3, #16]
 800514c:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8005150:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005154:	68d9      	ldr	r1, [r3, #12]
 8005156:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800515a:	681a      	ldr	r2, [r3, #0]
 800515c:	ea40 0301 	orr.w	r3, r0, r1
 8005160:	6113      	str	r3, [r2, #16]
 8005162:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005166:	689a      	ldr	r2, [r3, #8]
 8005168:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800516c:	691b      	ldr	r3, [r3, #16]
 800516e:	431a      	orrs	r2, r3
 8005170:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005174:	695b      	ldr	r3, [r3, #20]
 8005176:	431a      	orrs	r2, r3
 8005178:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800517c:	69db      	ldr	r3, [r3, #28]
 800517e:	4313      	orrs	r3, r2
 8005180:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005184:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005188:	681b      	ldr	r3, [r3, #0]
 800518a:	68db      	ldr	r3, [r3, #12]
 800518c:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8005190:	f021 010c 	bic.w	r1, r1, #12
 8005194:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005198:	681a      	ldr	r2, [r3, #0]
 800519a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800519e:	430b      	orrs	r3, r1
 80051a0:	60d3      	str	r3, [r2, #12]
 80051a2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	695b      	ldr	r3, [r3, #20]
 80051aa:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80051ae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80051b2:	6999      	ldr	r1, [r3, #24]
 80051b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80051b8:	681a      	ldr	r2, [r3, #0]
 80051ba:	ea40 0301 	orr.w	r3, r0, r1
 80051be:	6153      	str	r3, [r2, #20]
 80051c0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80051c4:	681a      	ldr	r2, [r3, #0]
 80051c6:	4b8f      	ldr	r3, [pc, #572]	@ (8005404 <UART_SetConfig+0x2cc>)
 80051c8:	429a      	cmp	r2, r3
 80051ca:	d005      	beq.n	80051d8 <UART_SetConfig+0xa0>
 80051cc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80051d0:	681a      	ldr	r2, [r3, #0]
 80051d2:	4b8d      	ldr	r3, [pc, #564]	@ (8005408 <UART_SetConfig+0x2d0>)
 80051d4:	429a      	cmp	r2, r3
 80051d6:	d104      	bne.n	80051e2 <UART_SetConfig+0xaa>
 80051d8:	f7fe fae4 	bl	80037a4 <HAL_RCC_GetPCLK2Freq>
 80051dc:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80051e0:	e003      	b.n	80051ea <UART_SetConfig+0xb2>
 80051e2:	f7fe facb 	bl	800377c <HAL_RCC_GetPCLK1Freq>
 80051e6:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80051ea:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80051ee:	69db      	ldr	r3, [r3, #28]
 80051f0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80051f4:	f040 810c 	bne.w	8005410 <UART_SetConfig+0x2d8>
 80051f8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80051fc:	2200      	movs	r2, #0
 80051fe:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005202:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8005206:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 800520a:	4622      	mov	r2, r4
 800520c:	462b      	mov	r3, r5
 800520e:	1891      	adds	r1, r2, r2
 8005210:	65b9      	str	r1, [r7, #88]	@ 0x58
 8005212:	415b      	adcs	r3, r3
 8005214:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005216:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800521a:	4621      	mov	r1, r4
 800521c:	eb12 0801 	adds.w	r8, r2, r1
 8005220:	4629      	mov	r1, r5
 8005222:	eb43 0901 	adc.w	r9, r3, r1
 8005226:	f04f 0200 	mov.w	r2, #0
 800522a:	f04f 0300 	mov.w	r3, #0
 800522e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005232:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005236:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800523a:	4690      	mov	r8, r2
 800523c:	4699      	mov	r9, r3
 800523e:	4623      	mov	r3, r4
 8005240:	eb18 0303 	adds.w	r3, r8, r3
 8005244:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005248:	462b      	mov	r3, r5
 800524a:	eb49 0303 	adc.w	r3, r9, r3
 800524e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005252:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005256:	685b      	ldr	r3, [r3, #4]
 8005258:	2200      	movs	r2, #0
 800525a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800525e:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8005262:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8005266:	460b      	mov	r3, r1
 8005268:	18db      	adds	r3, r3, r3
 800526a:	653b      	str	r3, [r7, #80]	@ 0x50
 800526c:	4613      	mov	r3, r2
 800526e:	eb42 0303 	adc.w	r3, r2, r3
 8005272:	657b      	str	r3, [r7, #84]	@ 0x54
 8005274:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8005278:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800527c:	f7fb fc30 	bl	8000ae0 <__aeabi_uldivmod>
 8005280:	4602      	mov	r2, r0
 8005282:	460b      	mov	r3, r1
 8005284:	4b61      	ldr	r3, [pc, #388]	@ (800540c <UART_SetConfig+0x2d4>)
 8005286:	fba3 2302 	umull	r2, r3, r3, r2
 800528a:	095b      	lsrs	r3, r3, #5
 800528c:	011c      	lsls	r4, r3, #4
 800528e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005292:	2200      	movs	r2, #0
 8005294:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005298:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 800529c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80052a0:	4642      	mov	r2, r8
 80052a2:	464b      	mov	r3, r9
 80052a4:	1891      	adds	r1, r2, r2
 80052a6:	64b9      	str	r1, [r7, #72]	@ 0x48
 80052a8:	415b      	adcs	r3, r3
 80052aa:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80052ac:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80052b0:	4641      	mov	r1, r8
 80052b2:	eb12 0a01 	adds.w	sl, r2, r1
 80052b6:	4649      	mov	r1, r9
 80052b8:	eb43 0b01 	adc.w	fp, r3, r1
 80052bc:	f04f 0200 	mov.w	r2, #0
 80052c0:	f04f 0300 	mov.w	r3, #0
 80052c4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80052c8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80052cc:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80052d0:	4692      	mov	sl, r2
 80052d2:	469b      	mov	fp, r3
 80052d4:	4643      	mov	r3, r8
 80052d6:	eb1a 0303 	adds.w	r3, sl, r3
 80052da:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80052de:	464b      	mov	r3, r9
 80052e0:	eb4b 0303 	adc.w	r3, fp, r3
 80052e4:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80052e8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80052ec:	685b      	ldr	r3, [r3, #4]
 80052ee:	2200      	movs	r2, #0
 80052f0:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80052f4:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80052f8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80052fc:	460b      	mov	r3, r1
 80052fe:	18db      	adds	r3, r3, r3
 8005300:	643b      	str	r3, [r7, #64]	@ 0x40
 8005302:	4613      	mov	r3, r2
 8005304:	eb42 0303 	adc.w	r3, r2, r3
 8005308:	647b      	str	r3, [r7, #68]	@ 0x44
 800530a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800530e:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8005312:	f7fb fbe5 	bl	8000ae0 <__aeabi_uldivmod>
 8005316:	4602      	mov	r2, r0
 8005318:	460b      	mov	r3, r1
 800531a:	4611      	mov	r1, r2
 800531c:	4b3b      	ldr	r3, [pc, #236]	@ (800540c <UART_SetConfig+0x2d4>)
 800531e:	fba3 2301 	umull	r2, r3, r3, r1
 8005322:	095b      	lsrs	r3, r3, #5
 8005324:	2264      	movs	r2, #100	@ 0x64
 8005326:	fb02 f303 	mul.w	r3, r2, r3
 800532a:	1acb      	subs	r3, r1, r3
 800532c:	00db      	lsls	r3, r3, #3
 800532e:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8005332:	4b36      	ldr	r3, [pc, #216]	@ (800540c <UART_SetConfig+0x2d4>)
 8005334:	fba3 2302 	umull	r2, r3, r3, r2
 8005338:	095b      	lsrs	r3, r3, #5
 800533a:	005b      	lsls	r3, r3, #1
 800533c:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8005340:	441c      	add	r4, r3
 8005342:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005346:	2200      	movs	r2, #0
 8005348:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800534c:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8005350:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8005354:	4642      	mov	r2, r8
 8005356:	464b      	mov	r3, r9
 8005358:	1891      	adds	r1, r2, r2
 800535a:	63b9      	str	r1, [r7, #56]	@ 0x38
 800535c:	415b      	adcs	r3, r3
 800535e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005360:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8005364:	4641      	mov	r1, r8
 8005366:	1851      	adds	r1, r2, r1
 8005368:	6339      	str	r1, [r7, #48]	@ 0x30
 800536a:	4649      	mov	r1, r9
 800536c:	414b      	adcs	r3, r1
 800536e:	637b      	str	r3, [r7, #52]	@ 0x34
 8005370:	f04f 0200 	mov.w	r2, #0
 8005374:	f04f 0300 	mov.w	r3, #0
 8005378:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 800537c:	4659      	mov	r1, fp
 800537e:	00cb      	lsls	r3, r1, #3
 8005380:	4651      	mov	r1, sl
 8005382:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005386:	4651      	mov	r1, sl
 8005388:	00ca      	lsls	r2, r1, #3
 800538a:	4610      	mov	r0, r2
 800538c:	4619      	mov	r1, r3
 800538e:	4603      	mov	r3, r0
 8005390:	4642      	mov	r2, r8
 8005392:	189b      	adds	r3, r3, r2
 8005394:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005398:	464b      	mov	r3, r9
 800539a:	460a      	mov	r2, r1
 800539c:	eb42 0303 	adc.w	r3, r2, r3
 80053a0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80053a4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80053a8:	685b      	ldr	r3, [r3, #4]
 80053aa:	2200      	movs	r2, #0
 80053ac:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80053b0:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80053b4:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80053b8:	460b      	mov	r3, r1
 80053ba:	18db      	adds	r3, r3, r3
 80053bc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80053be:	4613      	mov	r3, r2
 80053c0:	eb42 0303 	adc.w	r3, r2, r3
 80053c4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80053c6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80053ca:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80053ce:	f7fb fb87 	bl	8000ae0 <__aeabi_uldivmod>
 80053d2:	4602      	mov	r2, r0
 80053d4:	460b      	mov	r3, r1
 80053d6:	4b0d      	ldr	r3, [pc, #52]	@ (800540c <UART_SetConfig+0x2d4>)
 80053d8:	fba3 1302 	umull	r1, r3, r3, r2
 80053dc:	095b      	lsrs	r3, r3, #5
 80053de:	2164      	movs	r1, #100	@ 0x64
 80053e0:	fb01 f303 	mul.w	r3, r1, r3
 80053e4:	1ad3      	subs	r3, r2, r3
 80053e6:	00db      	lsls	r3, r3, #3
 80053e8:	3332      	adds	r3, #50	@ 0x32
 80053ea:	4a08      	ldr	r2, [pc, #32]	@ (800540c <UART_SetConfig+0x2d4>)
 80053ec:	fba2 2303 	umull	r2, r3, r2, r3
 80053f0:	095b      	lsrs	r3, r3, #5
 80053f2:	f003 0207 	and.w	r2, r3, #7
 80053f6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80053fa:	681b      	ldr	r3, [r3, #0]
 80053fc:	4422      	add	r2, r4
 80053fe:	609a      	str	r2, [r3, #8]
 8005400:	e106      	b.n	8005610 <UART_SetConfig+0x4d8>
 8005402:	bf00      	nop
 8005404:	40011000 	.word	0x40011000
 8005408:	40011400 	.word	0x40011400
 800540c:	51eb851f 	.word	0x51eb851f
 8005410:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005414:	2200      	movs	r2, #0
 8005416:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800541a:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 800541e:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8005422:	4642      	mov	r2, r8
 8005424:	464b      	mov	r3, r9
 8005426:	1891      	adds	r1, r2, r2
 8005428:	6239      	str	r1, [r7, #32]
 800542a:	415b      	adcs	r3, r3
 800542c:	627b      	str	r3, [r7, #36]	@ 0x24
 800542e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8005432:	4641      	mov	r1, r8
 8005434:	1854      	adds	r4, r2, r1
 8005436:	4649      	mov	r1, r9
 8005438:	eb43 0501 	adc.w	r5, r3, r1
 800543c:	f04f 0200 	mov.w	r2, #0
 8005440:	f04f 0300 	mov.w	r3, #0
 8005444:	00eb      	lsls	r3, r5, #3
 8005446:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800544a:	00e2      	lsls	r2, r4, #3
 800544c:	4614      	mov	r4, r2
 800544e:	461d      	mov	r5, r3
 8005450:	4643      	mov	r3, r8
 8005452:	18e3      	adds	r3, r4, r3
 8005454:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005458:	464b      	mov	r3, r9
 800545a:	eb45 0303 	adc.w	r3, r5, r3
 800545e:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005462:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005466:	685b      	ldr	r3, [r3, #4]
 8005468:	2200      	movs	r2, #0
 800546a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800546e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8005472:	f04f 0200 	mov.w	r2, #0
 8005476:	f04f 0300 	mov.w	r3, #0
 800547a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800547e:	4629      	mov	r1, r5
 8005480:	008b      	lsls	r3, r1, #2
 8005482:	4621      	mov	r1, r4
 8005484:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005488:	4621      	mov	r1, r4
 800548a:	008a      	lsls	r2, r1, #2
 800548c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8005490:	f7fb fb26 	bl	8000ae0 <__aeabi_uldivmod>
 8005494:	4602      	mov	r2, r0
 8005496:	460b      	mov	r3, r1
 8005498:	4b60      	ldr	r3, [pc, #384]	@ (800561c <UART_SetConfig+0x4e4>)
 800549a:	fba3 2302 	umull	r2, r3, r3, r2
 800549e:	095b      	lsrs	r3, r3, #5
 80054a0:	011c      	lsls	r4, r3, #4
 80054a2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80054a6:	2200      	movs	r2, #0
 80054a8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80054ac:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80054b0:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80054b4:	4642      	mov	r2, r8
 80054b6:	464b      	mov	r3, r9
 80054b8:	1891      	adds	r1, r2, r2
 80054ba:	61b9      	str	r1, [r7, #24]
 80054bc:	415b      	adcs	r3, r3
 80054be:	61fb      	str	r3, [r7, #28]
 80054c0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80054c4:	4641      	mov	r1, r8
 80054c6:	1851      	adds	r1, r2, r1
 80054c8:	6139      	str	r1, [r7, #16]
 80054ca:	4649      	mov	r1, r9
 80054cc:	414b      	adcs	r3, r1
 80054ce:	617b      	str	r3, [r7, #20]
 80054d0:	f04f 0200 	mov.w	r2, #0
 80054d4:	f04f 0300 	mov.w	r3, #0
 80054d8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80054dc:	4659      	mov	r1, fp
 80054de:	00cb      	lsls	r3, r1, #3
 80054e0:	4651      	mov	r1, sl
 80054e2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80054e6:	4651      	mov	r1, sl
 80054e8:	00ca      	lsls	r2, r1, #3
 80054ea:	4610      	mov	r0, r2
 80054ec:	4619      	mov	r1, r3
 80054ee:	4603      	mov	r3, r0
 80054f0:	4642      	mov	r2, r8
 80054f2:	189b      	adds	r3, r3, r2
 80054f4:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80054f8:	464b      	mov	r3, r9
 80054fa:	460a      	mov	r2, r1
 80054fc:	eb42 0303 	adc.w	r3, r2, r3
 8005500:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8005504:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005508:	685b      	ldr	r3, [r3, #4]
 800550a:	2200      	movs	r2, #0
 800550c:	67bb      	str	r3, [r7, #120]	@ 0x78
 800550e:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8005510:	f04f 0200 	mov.w	r2, #0
 8005514:	f04f 0300 	mov.w	r3, #0
 8005518:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 800551c:	4649      	mov	r1, r9
 800551e:	008b      	lsls	r3, r1, #2
 8005520:	4641      	mov	r1, r8
 8005522:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8005526:	4641      	mov	r1, r8
 8005528:	008a      	lsls	r2, r1, #2
 800552a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800552e:	f7fb fad7 	bl	8000ae0 <__aeabi_uldivmod>
 8005532:	4602      	mov	r2, r0
 8005534:	460b      	mov	r3, r1
 8005536:	4611      	mov	r1, r2
 8005538:	4b38      	ldr	r3, [pc, #224]	@ (800561c <UART_SetConfig+0x4e4>)
 800553a:	fba3 2301 	umull	r2, r3, r3, r1
 800553e:	095b      	lsrs	r3, r3, #5
 8005540:	2264      	movs	r2, #100	@ 0x64
 8005542:	fb02 f303 	mul.w	r3, r2, r3
 8005546:	1acb      	subs	r3, r1, r3
 8005548:	011b      	lsls	r3, r3, #4
 800554a:	3332      	adds	r3, #50	@ 0x32
 800554c:	4a33      	ldr	r2, [pc, #204]	@ (800561c <UART_SetConfig+0x4e4>)
 800554e:	fba2 2303 	umull	r2, r3, r2, r3
 8005552:	095b      	lsrs	r3, r3, #5
 8005554:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8005558:	441c      	add	r4, r3
 800555a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800555e:	2200      	movs	r2, #0
 8005560:	673b      	str	r3, [r7, #112]	@ 0x70
 8005562:	677a      	str	r2, [r7, #116]	@ 0x74
 8005564:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8005568:	4642      	mov	r2, r8
 800556a:	464b      	mov	r3, r9
 800556c:	1891      	adds	r1, r2, r2
 800556e:	60b9      	str	r1, [r7, #8]
 8005570:	415b      	adcs	r3, r3
 8005572:	60fb      	str	r3, [r7, #12]
 8005574:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8005578:	4641      	mov	r1, r8
 800557a:	1851      	adds	r1, r2, r1
 800557c:	6039      	str	r1, [r7, #0]
 800557e:	4649      	mov	r1, r9
 8005580:	414b      	adcs	r3, r1
 8005582:	607b      	str	r3, [r7, #4]
 8005584:	f04f 0200 	mov.w	r2, #0
 8005588:	f04f 0300 	mov.w	r3, #0
 800558c:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8005590:	4659      	mov	r1, fp
 8005592:	00cb      	lsls	r3, r1, #3
 8005594:	4651      	mov	r1, sl
 8005596:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800559a:	4651      	mov	r1, sl
 800559c:	00ca      	lsls	r2, r1, #3
 800559e:	4610      	mov	r0, r2
 80055a0:	4619      	mov	r1, r3
 80055a2:	4603      	mov	r3, r0
 80055a4:	4642      	mov	r2, r8
 80055a6:	189b      	adds	r3, r3, r2
 80055a8:	66bb      	str	r3, [r7, #104]	@ 0x68
 80055aa:	464b      	mov	r3, r9
 80055ac:	460a      	mov	r2, r1
 80055ae:	eb42 0303 	adc.w	r3, r2, r3
 80055b2:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80055b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80055b8:	685b      	ldr	r3, [r3, #4]
 80055ba:	2200      	movs	r2, #0
 80055bc:	663b      	str	r3, [r7, #96]	@ 0x60
 80055be:	667a      	str	r2, [r7, #100]	@ 0x64
 80055c0:	f04f 0200 	mov.w	r2, #0
 80055c4:	f04f 0300 	mov.w	r3, #0
 80055c8:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80055cc:	4649      	mov	r1, r9
 80055ce:	008b      	lsls	r3, r1, #2
 80055d0:	4641      	mov	r1, r8
 80055d2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80055d6:	4641      	mov	r1, r8
 80055d8:	008a      	lsls	r2, r1, #2
 80055da:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80055de:	f7fb fa7f 	bl	8000ae0 <__aeabi_uldivmod>
 80055e2:	4602      	mov	r2, r0
 80055e4:	460b      	mov	r3, r1
 80055e6:	4b0d      	ldr	r3, [pc, #52]	@ (800561c <UART_SetConfig+0x4e4>)
 80055e8:	fba3 1302 	umull	r1, r3, r3, r2
 80055ec:	095b      	lsrs	r3, r3, #5
 80055ee:	2164      	movs	r1, #100	@ 0x64
 80055f0:	fb01 f303 	mul.w	r3, r1, r3
 80055f4:	1ad3      	subs	r3, r2, r3
 80055f6:	011b      	lsls	r3, r3, #4
 80055f8:	3332      	adds	r3, #50	@ 0x32
 80055fa:	4a08      	ldr	r2, [pc, #32]	@ (800561c <UART_SetConfig+0x4e4>)
 80055fc:	fba2 2303 	umull	r2, r3, r2, r3
 8005600:	095b      	lsrs	r3, r3, #5
 8005602:	f003 020f 	and.w	r2, r3, #15
 8005606:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800560a:	681b      	ldr	r3, [r3, #0]
 800560c:	4422      	add	r2, r4
 800560e:	609a      	str	r2, [r3, #8]
 8005610:	bf00      	nop
 8005612:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8005616:	46bd      	mov	sp, r7
 8005618:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800561c:	51eb851f 	.word	0x51eb851f

08005620 <memset>:
 8005620:	4402      	add	r2, r0
 8005622:	4603      	mov	r3, r0
 8005624:	4293      	cmp	r3, r2
 8005626:	d100      	bne.n	800562a <memset+0xa>
 8005628:	4770      	bx	lr
 800562a:	f803 1b01 	strb.w	r1, [r3], #1
 800562e:	e7f9      	b.n	8005624 <memset+0x4>

08005630 <__errno>:
 8005630:	4b01      	ldr	r3, [pc, #4]	@ (8005638 <__errno+0x8>)
 8005632:	6818      	ldr	r0, [r3, #0]
 8005634:	4770      	bx	lr
 8005636:	bf00      	nop
 8005638:	200000b4 	.word	0x200000b4

0800563c <__libc_init_array>:
 800563c:	b570      	push	{r4, r5, r6, lr}
 800563e:	4d0d      	ldr	r5, [pc, #52]	@ (8005674 <__libc_init_array+0x38>)
 8005640:	4c0d      	ldr	r4, [pc, #52]	@ (8005678 <__libc_init_array+0x3c>)
 8005642:	1b64      	subs	r4, r4, r5
 8005644:	10a4      	asrs	r4, r4, #2
 8005646:	2600      	movs	r6, #0
 8005648:	42a6      	cmp	r6, r4
 800564a:	d109      	bne.n	8005660 <__libc_init_array+0x24>
 800564c:	4d0b      	ldr	r5, [pc, #44]	@ (800567c <__libc_init_array+0x40>)
 800564e:	4c0c      	ldr	r4, [pc, #48]	@ (8005680 <__libc_init_array+0x44>)
 8005650:	f000 f91a 	bl	8005888 <_init>
 8005654:	1b64      	subs	r4, r4, r5
 8005656:	10a4      	asrs	r4, r4, #2
 8005658:	2600      	movs	r6, #0
 800565a:	42a6      	cmp	r6, r4
 800565c:	d105      	bne.n	800566a <__libc_init_array+0x2e>
 800565e:	bd70      	pop	{r4, r5, r6, pc}
 8005660:	f855 3b04 	ldr.w	r3, [r5], #4
 8005664:	4798      	blx	r3
 8005666:	3601      	adds	r6, #1
 8005668:	e7ee      	b.n	8005648 <__libc_init_array+0xc>
 800566a:	f855 3b04 	ldr.w	r3, [r5], #4
 800566e:	4798      	blx	r3
 8005670:	3601      	adds	r6, #1
 8005672:	e7f2      	b.n	800565a <__libc_init_array+0x1e>
 8005674:	080058d0 	.word	0x080058d0
 8005678:	080058d0 	.word	0x080058d0
 800567c:	080058d0 	.word	0x080058d0
 8005680:	080058d4 	.word	0x080058d4

08005684 <sqrt>:
 8005684:	b538      	push	{r3, r4, r5, lr}
 8005686:	ed2d 8b02 	vpush	{d8}
 800568a:	ec55 4b10 	vmov	r4, r5, d0
 800568e:	f000 f825 	bl	80056dc <__ieee754_sqrt>
 8005692:	4622      	mov	r2, r4
 8005694:	462b      	mov	r3, r5
 8005696:	4620      	mov	r0, r4
 8005698:	4629      	mov	r1, r5
 800569a:	eeb0 8a40 	vmov.f32	s16, s0
 800569e:	eef0 8a60 	vmov.f32	s17, s1
 80056a2:	f7fb f9e7 	bl	8000a74 <__aeabi_dcmpun>
 80056a6:	b990      	cbnz	r0, 80056ce <sqrt+0x4a>
 80056a8:	2200      	movs	r2, #0
 80056aa:	2300      	movs	r3, #0
 80056ac:	4620      	mov	r0, r4
 80056ae:	4629      	mov	r1, r5
 80056b0:	f7fb f9b8 	bl	8000a24 <__aeabi_dcmplt>
 80056b4:	b158      	cbz	r0, 80056ce <sqrt+0x4a>
 80056b6:	f7ff ffbb 	bl	8005630 <__errno>
 80056ba:	2321      	movs	r3, #33	@ 0x21
 80056bc:	6003      	str	r3, [r0, #0]
 80056be:	2200      	movs	r2, #0
 80056c0:	2300      	movs	r3, #0
 80056c2:	4610      	mov	r0, r2
 80056c4:	4619      	mov	r1, r3
 80056c6:	f7fb f865 	bl	8000794 <__aeabi_ddiv>
 80056ca:	ec41 0b18 	vmov	d8, r0, r1
 80056ce:	eeb0 0a48 	vmov.f32	s0, s16
 80056d2:	eef0 0a68 	vmov.f32	s1, s17
 80056d6:	ecbd 8b02 	vpop	{d8}
 80056da:	bd38      	pop	{r3, r4, r5, pc}

080056dc <__ieee754_sqrt>:
 80056dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80056e0:	4a66      	ldr	r2, [pc, #408]	@ (800587c <__ieee754_sqrt+0x1a0>)
 80056e2:	ec55 4b10 	vmov	r4, r5, d0
 80056e6:	43aa      	bics	r2, r5
 80056e8:	462b      	mov	r3, r5
 80056ea:	4621      	mov	r1, r4
 80056ec:	d110      	bne.n	8005710 <__ieee754_sqrt+0x34>
 80056ee:	4622      	mov	r2, r4
 80056f0:	4620      	mov	r0, r4
 80056f2:	4629      	mov	r1, r5
 80056f4:	f7fa ff24 	bl	8000540 <__aeabi_dmul>
 80056f8:	4602      	mov	r2, r0
 80056fa:	460b      	mov	r3, r1
 80056fc:	4620      	mov	r0, r4
 80056fe:	4629      	mov	r1, r5
 8005700:	f7fa fd68 	bl	80001d4 <__adddf3>
 8005704:	4604      	mov	r4, r0
 8005706:	460d      	mov	r5, r1
 8005708:	ec45 4b10 	vmov	d0, r4, r5
 800570c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005710:	2d00      	cmp	r5, #0
 8005712:	dc0e      	bgt.n	8005732 <__ieee754_sqrt+0x56>
 8005714:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 8005718:	4322      	orrs	r2, r4
 800571a:	d0f5      	beq.n	8005708 <__ieee754_sqrt+0x2c>
 800571c:	b19d      	cbz	r5, 8005746 <__ieee754_sqrt+0x6a>
 800571e:	4622      	mov	r2, r4
 8005720:	4620      	mov	r0, r4
 8005722:	4629      	mov	r1, r5
 8005724:	f7fa fd54 	bl	80001d0 <__aeabi_dsub>
 8005728:	4602      	mov	r2, r0
 800572a:	460b      	mov	r3, r1
 800572c:	f7fb f832 	bl	8000794 <__aeabi_ddiv>
 8005730:	e7e8      	b.n	8005704 <__ieee754_sqrt+0x28>
 8005732:	152a      	asrs	r2, r5, #20
 8005734:	d115      	bne.n	8005762 <__ieee754_sqrt+0x86>
 8005736:	2000      	movs	r0, #0
 8005738:	e009      	b.n	800574e <__ieee754_sqrt+0x72>
 800573a:	0acb      	lsrs	r3, r1, #11
 800573c:	3a15      	subs	r2, #21
 800573e:	0549      	lsls	r1, r1, #21
 8005740:	2b00      	cmp	r3, #0
 8005742:	d0fa      	beq.n	800573a <__ieee754_sqrt+0x5e>
 8005744:	e7f7      	b.n	8005736 <__ieee754_sqrt+0x5a>
 8005746:	462a      	mov	r2, r5
 8005748:	e7fa      	b.n	8005740 <__ieee754_sqrt+0x64>
 800574a:	005b      	lsls	r3, r3, #1
 800574c:	3001      	adds	r0, #1
 800574e:	02dc      	lsls	r4, r3, #11
 8005750:	d5fb      	bpl.n	800574a <__ieee754_sqrt+0x6e>
 8005752:	1e44      	subs	r4, r0, #1
 8005754:	1b12      	subs	r2, r2, r4
 8005756:	f1c0 0420 	rsb	r4, r0, #32
 800575a:	fa21 f404 	lsr.w	r4, r1, r4
 800575e:	4323      	orrs	r3, r4
 8005760:	4081      	lsls	r1, r0
 8005762:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005766:	f2a2 37ff 	subw	r7, r2, #1023	@ 0x3ff
 800576a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800576e:	07d2      	lsls	r2, r2, #31
 8005770:	bf5c      	itt	pl
 8005772:	005b      	lslpl	r3, r3, #1
 8005774:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 8005778:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800577c:	bf58      	it	pl
 800577e:	0049      	lslpl	r1, r1, #1
 8005780:	2600      	movs	r6, #0
 8005782:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 8005786:	107f      	asrs	r7, r7, #1
 8005788:	0049      	lsls	r1, r1, #1
 800578a:	2016      	movs	r0, #22
 800578c:	4632      	mov	r2, r6
 800578e:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 8005792:	1915      	adds	r5, r2, r4
 8005794:	429d      	cmp	r5, r3
 8005796:	bfde      	ittt	le
 8005798:	192a      	addle	r2, r5, r4
 800579a:	1b5b      	suble	r3, r3, r5
 800579c:	1936      	addle	r6, r6, r4
 800579e:	0fcd      	lsrs	r5, r1, #31
 80057a0:	3801      	subs	r0, #1
 80057a2:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80057a6:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80057aa:	ea4f 0454 	mov.w	r4, r4, lsr #1
 80057ae:	d1f0      	bne.n	8005792 <__ieee754_sqrt+0xb6>
 80057b0:	4605      	mov	r5, r0
 80057b2:	2420      	movs	r4, #32
 80057b4:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80057b8:	4293      	cmp	r3, r2
 80057ba:	eb0c 0e00 	add.w	lr, ip, r0
 80057be:	dc02      	bgt.n	80057c6 <__ieee754_sqrt+0xea>
 80057c0:	d113      	bne.n	80057ea <__ieee754_sqrt+0x10e>
 80057c2:	458e      	cmp	lr, r1
 80057c4:	d811      	bhi.n	80057ea <__ieee754_sqrt+0x10e>
 80057c6:	f1be 0f00 	cmp.w	lr, #0
 80057ca:	eb0e 000c 	add.w	r0, lr, ip
 80057ce:	da3f      	bge.n	8005850 <__ieee754_sqrt+0x174>
 80057d0:	2800      	cmp	r0, #0
 80057d2:	db3d      	blt.n	8005850 <__ieee754_sqrt+0x174>
 80057d4:	f102 0801 	add.w	r8, r2, #1
 80057d8:	1a9b      	subs	r3, r3, r2
 80057da:	458e      	cmp	lr, r1
 80057dc:	bf88      	it	hi
 80057de:	f103 33ff 	addhi.w	r3, r3, #4294967295
 80057e2:	eba1 010e 	sub.w	r1, r1, lr
 80057e6:	4465      	add	r5, ip
 80057e8:	4642      	mov	r2, r8
 80057ea:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 80057ee:	3c01      	subs	r4, #1
 80057f0:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 80057f4:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80057f8:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 80057fc:	d1dc      	bne.n	80057b8 <__ieee754_sqrt+0xdc>
 80057fe:	4319      	orrs	r1, r3
 8005800:	d01b      	beq.n	800583a <__ieee754_sqrt+0x15e>
 8005802:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 8005880 <__ieee754_sqrt+0x1a4>
 8005806:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 8005884 <__ieee754_sqrt+0x1a8>
 800580a:	e9da 0100 	ldrd	r0, r1, [sl]
 800580e:	e9db 2300 	ldrd	r2, r3, [fp]
 8005812:	f7fa fcdd 	bl	80001d0 <__aeabi_dsub>
 8005816:	e9da 8900 	ldrd	r8, r9, [sl]
 800581a:	4602      	mov	r2, r0
 800581c:	460b      	mov	r3, r1
 800581e:	4640      	mov	r0, r8
 8005820:	4649      	mov	r1, r9
 8005822:	f7fb f909 	bl	8000a38 <__aeabi_dcmple>
 8005826:	b140      	cbz	r0, 800583a <__ieee754_sqrt+0x15e>
 8005828:	f1b5 3fff 	cmp.w	r5, #4294967295
 800582c:	e9da 0100 	ldrd	r0, r1, [sl]
 8005830:	e9db 2300 	ldrd	r2, r3, [fp]
 8005834:	d10e      	bne.n	8005854 <__ieee754_sqrt+0x178>
 8005836:	3601      	adds	r6, #1
 8005838:	4625      	mov	r5, r4
 800583a:	1073      	asrs	r3, r6, #1
 800583c:	f103 537f 	add.w	r3, r3, #1069547520	@ 0x3fc00000
 8005840:	f503 1300 	add.w	r3, r3, #2097152	@ 0x200000
 8005844:	eb03 5107 	add.w	r1, r3, r7, lsl #20
 8005848:	086b      	lsrs	r3, r5, #1
 800584a:	ea43 70c6 	orr.w	r0, r3, r6, lsl #31
 800584e:	e759      	b.n	8005704 <__ieee754_sqrt+0x28>
 8005850:	4690      	mov	r8, r2
 8005852:	e7c1      	b.n	80057d8 <__ieee754_sqrt+0xfc>
 8005854:	f7fa fcbe 	bl	80001d4 <__adddf3>
 8005858:	e9da 8900 	ldrd	r8, r9, [sl]
 800585c:	4602      	mov	r2, r0
 800585e:	460b      	mov	r3, r1
 8005860:	4640      	mov	r0, r8
 8005862:	4649      	mov	r1, r9
 8005864:	f7fb f8de 	bl	8000a24 <__aeabi_dcmplt>
 8005868:	b120      	cbz	r0, 8005874 <__ieee754_sqrt+0x198>
 800586a:	1cab      	adds	r3, r5, #2
 800586c:	bf08      	it	eq
 800586e:	3601      	addeq	r6, #1
 8005870:	3502      	adds	r5, #2
 8005872:	e7e2      	b.n	800583a <__ieee754_sqrt+0x15e>
 8005874:	1c6b      	adds	r3, r5, #1
 8005876:	f023 0501 	bic.w	r5, r3, #1
 800587a:	e7de      	b.n	800583a <__ieee754_sqrt+0x15e>
 800587c:	7ff00000 	.word	0x7ff00000
 8005880:	080058c0 	.word	0x080058c0
 8005884:	080058b8 	.word	0x080058b8

08005888 <_init>:
 8005888:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800588a:	bf00      	nop
 800588c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800588e:	bc08      	pop	{r3}
 8005890:	469e      	mov	lr, r3
 8005892:	4770      	bx	lr

08005894 <_fini>:
 8005894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005896:	bf00      	nop
 8005898:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800589a:	bc08      	pop	{r3}
 800589c:	469e      	mov	lr, r3
 800589e:	4770      	bx	lr
